{
    "Timestamp": "1/3/2020 4:54:54",
    "Title": "Transient Attributes for High-Level Understanding and Editing of Outdoor Scenes",
    "DOI": "10.1145/2601097.2601101",
    "PDF availability (beside dl.acm)": "On the author(s) website or its institution, Other (web, research gate, semantic scholar,...)",
    "Is the code or software publicly available ?": "Yes",
    "Availability": "on the authors website or project page (zip file, direct download...)",
    "Main languages": "C/C++, Matlab / Mathematica / ..",
    "How long did take for you to evaluate the code this paper (if any)?": 10,
    "Build info / instructions": "README, LICENSE or explicit license (e.g. in the readme / headers), AUTHORS or explicitly mentioned",
    "arXiv (page URL)": "",
    "code URL": "http://transattr.cs.brown.edu/files/regressors_v1.2.tar",
    "code URL  2": "",
    "PDF URL": "http://transattr.cs.brown.edu/files/TransientAttributes-paper.pdf",
    "License type": "custom",
    "Build mechanism": "Not applicable (python, Matlab..)",
    "Mandatory Software dependencies": "Open-source libraries, Paywall Closed source software or libraries",
    "Feedback [easy deps]": "",
    "Feedbacks [easy to find/install dependencies  (5=easy)]": 1,
    "Feedbacks [easy to configure/build (5=easy)]": 1,
    "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": 1,
    "Execution experience [Row 1]": "",
    "Does the code need data (other than examples/inputs) ?": "Yes",
    "Available data (provided or url / ref)": "Training data, Pre-trained models / Hardcoded data / lookup tables /...",
    "License for the data (if any)": "",
    "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 5,
    "Feedbacks [Interface user-friendly (5=easy)]": "N/A",
    "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions, API documentation, Technical documentation (comments-doxygen...)",
    "Authors": "Academia",
    "ACM 1": "Video segmentation",
    "ACM 2": "Scene understanding",
    "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": 1,
    "OS of the test": "Windows",
    "General comments": "Regarding installation, I ran the code on Windows with Matlab R2018a amd Visual Studio in 64bits, so I had to adjust the code.\n* VLfeat\n- download the precompiled window binaries of vlfeat-0.9.18. Just put the win64 folder in vlfeat-0.9.18\\bin\n- comment line 315 of host.h in vlfeat\n- then compile vl feat using vl_compile and install, as per the instructions\n* VOC:\n- resize.cc, line 36: alphainfo ofs[len]; should be replaced by  alphainfo* ofs = new alphainfo[len];\n- resize.cc: insert after line 77: delete[] ofs;\n- resize.cc, line 70: bzero(dst, chan*width*dheight*sizeof(double)); => memset(dst, 0, chan*width*dheight*sizeof(double));\n- resize.cc, line 86: const int *sdims = mxGetDimensions(mxsrc); => const mwSize* sdims = mxGetDimensions(mxsrc);\n- resize.cc, line 95: int ddims[3]; => mwSize ddims[3];  (same for casts in lines 96, 97)\n- dt.cc, line 50: const int *dims = mxGetDimensions(prhs[0]);  => const mwSize *dims = mxGetDimensions(prhs[0]);\n- dt.cc: add in line 16: typedef int int32_t;\n- features.cc, line 38: const int *dims = mxGetDimensions(mximage); => const mwSize *dims = mxGetDimensions(mximage);\n- features.cc, line 54: int out[3]; => mwSize out[3];\n- compile.m, line 13: replace mex -O fconv.cc -o fconv by  mex -O fconv.cc -output fconv \n- fconv.cc, line 23: void *process(void *thread_arg)  => void process(void *thread_arg) \n- sparse2dense.m, line 60: idx = sub2ind([M, N], yi, xi) ; => idx = sub2ind([M, N], yi(:), xi(:));\n... and now it should work. Note however one trick: the code results in many messages displayed containing: \"Squared correlation coefficient = -nan(ind) (regression)\" .... and this is fine, though undocumented !\nWhile trying to \"fix\" this issue, having to recompile libSVM, it seemed the one precompiled didn't match the source code, and this resulted in additional errors: if you want to recompile libSVM, you need:\n- to edit the matlab file run_regressor_on_images.m, line 242, \tadd before svmpredict:\nmodel.sv_indices = [];\nmodel.nSV = length(model.SVs);\nsince the model structure has changed and now contains a field sv_indices.\n- then, line 244, [score,err] = svmpredict([0], K_input, model); should be changed to [score] = svmpredict([0], K_input, model); since the 2-parameter output doesn't exist anymore (there can be 1 or 3 parameters, not 2).\n- then in svm_model_matlab.c, line 228, replace:\n\tfor(i=0;i<num_of_fields;i++)\n\t\trhs[i] = mxGetFieldByNumber(matlab_struct, 0, i);\nby\n\trhs[0] = mxGetField(matlab_struct, 0, \"Parameters\");\n\trhs[1] = mxGetField(matlab_struct, 0, \"nr_class\");\n\trhs[2] = mxGetField(matlab_struct, 0, \"totalSV\"); \n\trhs[3] = mxGetField(matlab_struct, 0, \"rho\");\n\trhs[4] = mxGetField(matlab_struct, 0, \"Label\");\n\trhs[5] = mxGetField(matlab_struct, 0, \"sv_indices\");\n\trhs[6] = mxGetField(matlab_struct, 0, \"ProbA\");\n\trhs[7] = mxGetField(matlab_struct, 0, \"ProbB\");\n\trhs[8] = mxGetField(matlab_struct, 0, \"nSV\");\n\trhs[9] = mxGetField(matlab_struct, 0, \"sv_coef\");\n\trhs[10] = mxGetField(matlab_struct, 0, \"SVs\");\nThis is due to the ordering of the structure's field having changed. I found it cleared to index by name rather than indices to avoid such issues in the future. Debugging this took me most of the time, and was not absolutely necessary.\n\nFinally, I reduce the reproducibility score as the provided matlab script allows to predict the transient attributes and it seems to work, but no code is provided to perform the image editing based on changing transient attributes.",
    "Does the paper already have a reproducibility stamp": "No",
    "Citation count (google scholar)": 148,
    "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "matlab / libsvm",
    "Project URL": "http://transattr.cs.brown.edu/",
    "Did I manage to perform a complete test (deps/build)?": "Yes",
    "Year": 2014,
    "Misc. comment": "",
    "Software Type": "Code",
    "Topic": "Image",
    "Deep learning": "False",
    "hasThumbnail": true,
    "Open access": false,
    "Feedbacks [could reproduce results (5=highly confident)]": 3,
    "Could paper be trivially implemented using the pseudo-code": "",
    "Reviewer": 2,
    "Documentation score": 2,
    "Paper authors": [
        {
            "given": "Pierre-Yves",
            "family": "Laffont",
            "sequence": "first",
            "affiliation": []
        },
        {
            "given": "Zhile",
            "family": "Ren",
            "sequence": "additional",
            "affiliation": []
        },
        {
            "given": "Xiaofeng",
            "family": "Tao",
            "sequence": "additional",
            "affiliation": []
        },
        {
            "given": "Chao",
            "family": "Qian",
            "sequence": "additional",
            "affiliation": []
        },
        {
            "given": "James",
            "family": "Hays",
            "sequence": "additional",
            "affiliation": []
        }
    ],
    "Altmetric score": 0,
    "Altmetric badge": 0,
    "Altmetric url": 0
}