{
    "Timestamp": "1/22/2020 18:39:05",
    "Title": "On-line Learning of Parametric Mixture Models for Light Transport Simulation",
    "DOI": "10.1145/2601097.2601203",
    "PDF availability (beside dl.acm)": "On the author(s) website or its institution, Other (web, research gate, semantic scholar,...)",
    "Is the code or software publicly available ?": "Yes",
    "Availability": "on the authors website or project page (zip file, direct download...)",
    "Main languages": "C/C++",
    "How long did take for you to evaluate the code this paper (if any)?": 10,
    "Build info / instructions": "README, LICENSE or explicit license (e.g. in the readme / headers)",
    "arXiv (page URL)": "",
    "code URL": "http://cgg.mff.cuni.cz/~jirka/papers/2014/olpm/olpm2014_source.zip",
    "code URL  2": "",
    "PDF URL": "https://cgg.mff.cuni.cz/~jaroslav/papers/2014-onlineis/2014-onlineis-paper.pdf",
    "License type": "GPL",
    "Build mechanism": "IDE Project (VS,..), SCONS",
    "Mandatory Software dependencies": "Open-source libraries",
    "Feedback [easy deps]": "",
    "Feedbacks [easy to find/install dependencies  (5=easy)]": "N/A",
    "Feedbacks [easy to configure/build (5=easy)]": 1,
    "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": 1,
    "Execution experience [Row 1]": "",
    "Does the code need data (other than examples/inputs) ?": "No",
    "Available data (provided or url / ref)": "",
    "License for the data (if any)": "",
    "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "N/A",
    "Feedbacks [Interface user-friendly (5=easy)]": "N/A",
    "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions, API documentation, Technical documentation (comments-doxygen...)",
    "Authors": "Academia",
    "ACM 1": "Rendering",
    "ACM 2": "Image manipulation",
    "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
    "OS of the test": "Windows",
    "General comments": "I tried compiling the code on Windows+Python3.6+VS2017. \n\nFirst, the Sconscriptshould be updated to have \"print ....\" changed to \"print(...)\". This includes at lines 23, 29-30, 100, 104, 178, 184, 189, 194, 199, 203, 217, 221, 224, 227, 230, 237, 240, 244, 247, 250, 253, 257, 260, 264, 279, 282, 299--306 of Sconscript.configure and line 30 of Sconscript.install.\n\nThen the config-win64-msvc2010.py should be updated. You need to add '/arch:AVX' to CXXFLAGS, and change MSVC_VERSION    = '10.0' to MSVC_VERSION    = '14.1'  (I tried 15.0 since I have VS2017, but VS complained).\n\nIn mitsuba/cor/util.h, you need to add #include <intrin.h>\nIn Mitsuba 0.5.0\\dependencies\\include\\boost\\config\\compiler\\visualc.hpp, you may comment-out lined 44  #if _MSC_VER < 1300 and the matching #end line 54, and perhaps manually set #define BOOST_COMPILER_VERSION evc15 instead of the error message lines 283--287.\n\nIn LibImportance/shared/Config.h, I have issues with \n    const Float NAN = std::numeric_limits<Float>::signaling_NaN();\n    const Float INFINITY = std::numeric_limits<Float>::infinity();\nline 109.\nAdding #undef NAN and #undef INFINITY did not solve the problem, and commenting out these two lines either.\n\nIn LibImportance/shared/Sse.h, the compiler complains about undefined SSE functions, or similarly in avx_mathfun.h, it complains about the undefined __m256 type. Adding #include <intrin.h> did not help (anyway, there is already #include <immintrin.h> ), and passing the /arch:AVX to the compiler in the config-win64-msvc2010.py did not help either (usually, having arch:AVX and intrin.h is sufficient to have __m256 defined ; however, while this works with VisualStudio alone, the SConsScript may not work).\n\nUltimately, I could not fix these issues and run the code.\n\n-- Alternate test on Linux \nCompilation did not succeed on Linux.\n fatal error: xutility: No such file or directory   27 | #include <xutility>, after commenting this line, I got to the error:\nfastonebigheader.h:60:10: fatal error: PrecompiledLibs/Embree/common/simd/smmintrin_emu.h: No such file or directory\n   60 | #include \"PrecompiledLibs/Embree/common/simd/smmintrin_emu.h\"\n\nwhich I was not able to solve.",
    "Does the paper already have a reproducibility stamp": "No",
    "Citation count (google scholar)": 73,
    "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "mitsuba",
    "Project URL": "https://cgg.mff.cuni.cz/~jaroslav/papers/2014-onlineis/",
    "Did I manage to perform a complete test (deps/build)?": "No due to technical issue",
    "Year": 2014,
    "Misc. comment": "",
    "Software Type": "Code",
    "Topic": "Rendering",
    "Deep learning": "True",
    "hasThumbnail": true,
    "Open access": false,
    "Feedbacks [could reproduce results (5=highly confident)]": 1,
    "Could paper be trivially implemented using the pseudo-code": "",
    "Reviewer": 2,
    "Documentation score": 2,
    "Paper authors": [
        {
            "given": "Ji\u0159\u00ed",
            "family": "Vorba",
            "sequence": "first",
            "affiliation": []
        },
        {
            "given": "Ond\u0159ej",
            "family": "Karl\u00edk",
            "sequence": "additional",
            "affiliation": []
        },
        {
            "given": "Martin",
            "family": "\u0160ik",
            "sequence": "additional",
            "affiliation": []
        },
        {
            "given": "Tobias",
            "family": "Ritschel",
            "sequence": "additional",
            "affiliation": []
        },
        {
            "given": "Jaroslav",
            "family": "K\u0159iv\u00e1nek",
            "sequence": "additional",
            "affiliation": []
        }
    ],
    "Altmetric score": 0,
    "Altmetric badge": 0,
    "Altmetric url": 0
}