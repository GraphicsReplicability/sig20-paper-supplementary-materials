{
    "Timestamp": "1/20/2020 19:32:37",
    "Title": "Point Registration via Efficient Convex Relaxation",
    "DOI": "10.1145/2897824.2925913",
    "PDF availability (beside dl.acm)": "On the author(s) website or its institution, On the author(s) repository (dropbox, github, drive, iCloud)",
    "Is the code or software publicly available ?": "Yes",
    "Availability": "on the authors website or project page (zip file, direct download...)",
    "Main languages": "Matlab / Mathematica / ..",
    "How long did take for you to evaluate the code this paper (if any)?": 6,
    "Build info / instructions": "README",
    "arXiv (page URL)": "",
    "code URL": "http://www.wisdom.weizmann.ac.il/~itayke/assets/pm-code.zip",
    "code URL  2": "http://www.wisdom.weizmann.ac.il/~haggaim/projects/point_registration/code.zip",
    "PDF URL": "https://shaharkov.github.io/projects/ProcrustesMatchingSDP_lowres.pdf",
    "License type": "unspecified",
    "Build mechanism": "Not applicable (python, Matlab..)",
    "Mandatory Software dependencies": "Paywall Closed source software or libraries",
    "Feedback [easy deps]": "",
    "Feedbacks [easy to find/install dependencies  (5=easy)]": 5,
    "Feedbacks [easy to configure/build (5=easy)]": 5,
    "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": 3,
    "Execution experience [Row 1]": "",
    "Does the code need data (other than examples/inputs) ?": "No",
    "Available data (provided or url / ref)": "",
    "License for the data (if any)": "",
    "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 5,
    "Feedbacks [Interface user-friendly (5=easy)]": 5,
    "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions, API documentation, Technical documentation (comments-doxygen...)",
    "Authors": "Academia",
    "ACM 1": "Shape analysis",
    "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
    "OS of the test": "Windows",
    "General comments": "A few steps to make the program run on Windows+Matlab R2018a:\n- in all test files, replace\naddpath(genpath('~/mosek'))\naddpath(genpath('~/yalmip'))\nby the actual paths, e.g., \naddpath(genpath('C:\\Program Files\\Mosek\\9.1\\toolbox\\R2015a'))\naddpath(genpath('C:\\libs\\YALMIP-master'))\n\nand similarly for the toolbox_graph (downloadable at https://fr.mathworks.com/matlabcentral/fileexchange/5355-toolbox-graph ) or the FAUST data (e.g., addpath('C:\\ICCV_2015_source_code\\training\\watertight_5000') )\n\n- in interleaving.m, line 82, replace\n X_proj = reshape( intlinprog(fObj,intcon,[],[],A_ds,b_ds,lb,ub,options ), n, n );\n by\n  X_proj = reshape( intlinprog(fObj,intcon,[],[],A_ds,b_ds,lb,ub,struct(options) ), n, n );\n\n - in interleaving.m, line 97, replace \n X_proj = reshape( intlinprog(fObj,intcon,[],[],A_ds,b_ds,lb,ub,options ), n, n );\n by\n X_proj = reshape( intlinprog(fObj,intcon,[],[],A_ds,b_ds,lb,ub,struct(options) ), n, n );\n\nWhile this produces a warning, this prevents an error in Mosek's intlinprog at line 135\n  options          = mskoptimset(defaultopt,options)\n  \n- Make sure you have about 10GB of free RAM, otherwise Mosek crashes.\n- If you installed Mosek after having installed Yalmip and already run the code unsuccessfully, make sure to \"clear CACHED_SOLVERS\" otherwise Mosek won't be found by Yalmip as the available solvers are cached.\n \nThe Faust dataset is at http://faust.is.tue.mpg.de/ (though I don't think the original dataset is needed) and the iccv code has moved from web.stanford.edu/~cqf/convex to   https://cqf.io/convex/\n\nThe different tests for 'synthetic', 'faust' and 'scape' run smoothly and produce the expected matchings. I did not test the last script, testPMSDP_scapeRawScans, since it requires manually preprocessing the SCAPE dataset with the ICCV code.\n\nAnother run on Linux produced similar results.",
    "Does the paper already have a reproducibility stamp": "No",
    "Citation count (google scholar)": 40,
    "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "matlab",
    "Project URL": "",
    "Did I manage to perform a complete test (deps/build)?": "Yes",
    "Year": 2016,
    "Misc. comment": "",
    "Software Type": "Code",
    "Topic": "Geometry",
    "Deep learning": "False",
    "hasThumbnail": true,
    "Open access": false,
    "Feedbacks [could reproduce results (5=highly confident)]": 5,
    "Could paper be trivially implemented using the pseudo-code": "",
    "Reviewer": 2,
    "Documentation score": 2,
    "Paper authors": [
        {
            "given": "Haggai",
            "family": "Maron",
            "sequence": "first",
            "affiliation": [
                {
                    "name": "Weizmann Institute of Science"
                }
            ]
        },
        {
            "given": "Nadav",
            "family": "Dym",
            "sequence": "additional",
            "affiliation": [
                {
                    "name": "Weizmann Institute of Science"
                }
            ]
        },
        {
            "given": "Itay",
            "family": "Kezurer",
            "sequence": "additional",
            "affiliation": [
                {
                    "name": "Weizmann Institute of Science"
                }
            ]
        },
        {
            "given": "Shahar",
            "family": "Kovalsky",
            "sequence": "additional",
            "affiliation": [
                {
                    "name": "Weizmann Institute of Science"
                }
            ]
        },
        {
            "given": "Yaron",
            "family": "Lipman",
            "sequence": "additional",
            "affiliation": [
                {
                    "name": "Weizmann Institute of Science"
                }
            ]
        }
    ],
    "Altmetric score": 0,
    "Altmetric badge": 0,
    "Altmetric url": 0
}