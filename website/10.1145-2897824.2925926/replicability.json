{
    "Timestamp": "1/22/2020 2:05:45",
    "Title": "Bounded distortion harmonic shape interpolation",
    "DOI": "10.1145/2897824.2925926",
    "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
    "Is the code or software publicly available ?": "Yes",
    "Availability": "on the authors website or project page (zip file, direct download...)",
    "Main languages": "Matlab / Mathematica / ..",
    "How long did take for you to evaluate the code this paper (if any)?": 10,
    "Build info / instructions": "README",
    "arXiv (page URL)": "",
    "code URL": "http://people.mpi-inf.mpg.de/~chen/bdh.zip",
    "code URL  2": "",
    "PDF URL": "https://people.mpi-inf.mpg.de/~chen/papers/bdhi.pdf",
    "License type": "unspecified",
    "Build mechanism": "IDE Project (VS,..), Not applicable (python, Matlab..)",
    "Mandatory Software dependencies": "Open-source libraries, Closed source (e.g. commercial) software or libraries free for research purposes",
    "Feedback [easy deps]": "",
    "Feedbacks [easy to find/install dependencies  (5=easy)]": 5,
    "Feedbacks [easy to configure/build (5=easy)]": 2,
    "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": 2,
    "Execution experience [Row 1]": "",
    "Does the code need data (other than examples/inputs) ?": "No",
    "Available data (provided or url / ref)": "",
    "License for the data (if any)": "",
    "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 5,
    "Feedbacks [Interface user-friendly (5=easy)]": 5,
    "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions",
    "Authors": "Academia",
    "ACM 1": "Animation",
    "ACM 2": "Image manipulation",
    "ACM 3": "Shape analysis",
    "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": 1,
    "OS of the test": "Windows",
    "General comments": "Launching the code using the compiled .exe gui is easy and runs smoothly. Just add mosek to matlab's path using\naddpath('C:\\Program Files\\Mosek\\9.1\\toolbox\\R2015a')\n\nHowever, if one want to recompile the gui, it is more involved.\nSome include paths are hardcoded, and you need to add the include path for eigen, freeglut, anttweakbar, and matlab includes (D:\\MatlabR2018a\\extern\\include) to the Visual Studio project.\nI had to recompile freeglut in multithread instead of multithread dll (in the code generation settings) otherwise I had linker errors.\n\nThen, due to changes in the support of complex variables in Matlab 2018a, you need to change a couple of functions:\n- in matlab_utils.h line 335, replace \n    v.real() = Eigen::Map<const Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::ColMajor> >(mxGetPr(m), dim[0], dim[1]);\n\n    if (mxIsComplex(m))\n        v.imag() = Eigen::Map<const Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::ColMajor> >(mxGetPi(m), dim[0], dim[1]);\n    else\n        v.imag().setZero();\nby\n\tif (mxIsComplex(m)) {\n\t\t//v.imag() = Eigen::Map<const Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::ColMajor> >(&((*pc).imag), dim[0], dim[1]);\n\t\tfor (int i = 0; i < dim[0] * dim[1]; i++) {\n\t\t\tv.data()[i].real(pc[i].real);\n\t\t\tv.data()[i].imag(pc[i].imag);\n\t\t}\n\t} \n\telse {\n\t\tfor (int i = 0; i < dim[0] * dim[1]; i++) {\n\t\t\tv.data()[i].real(pc[i].real);\n\t\t}\n\t\tv.imag().setZero();\n\t}\n\t\n- in matlab_utils.h line 353\n    MapMat(mxGetPr(m), dim[0], dim[1]) = vr;\n    MapMat(mxGetPi(m), dim[0], dim[1]) = vi;\n by\n mxComplexDouble *pc = mxGetComplexDoubles(m);\n\tfor (int i = 0; i < dim[0] * dim[1]; i++) {\n\t\tpc[i].real = vr[i];\n\t\tpc[i].imag = vi[i];\n\t}\n\t\nUltimately, the code runs and produce the expected results.",
    "Does the paper already have a reproducibility stamp": "No",
    "Citation count (google scholar)": 17,
    "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "cvx/mosek/glsl/opengl",
    "Project URL": "",
    "Did I manage to perform a complete test (deps/build)?": "Yes",
    "Year": 2016,
    "Misc. comment": "",
    "Software Type": "Code",
    "Topic": "Geometry",
    "Deep learning": "False",
    "hasThumbnail": true,
    "Open access": false,
    "Feedbacks [could reproduce results (5=highly confident)]": 5,
    "Could paper be trivially implemented using the pseudo-code": "",
    "Reviewer": 2,
    "Documentation score": 1,
    "Paper authors": [
        {
            "given": "Edward",
            "family": "Chien",
            "sequence": "first",
            "affiliation": [
                {
                    "name": "Bar Ilan University, Israel"
                }
            ]
        },
        {
            "given": "Renjie",
            "family": "Chen",
            "sequence": "additional",
            "affiliation": [
                {
                    "name": "Max Planck Institute for Informatics, Germany"
                }
            ]
        },
        {
            "given": "Ofir",
            "family": "Weber",
            "sequence": "additional",
            "affiliation": [
                {
                    "name": "Bar Ilan University, Israel"
                }
            ]
        }
    ],
    "Altmetric score": 0,
    "Altmetric badge": 0,
    "Altmetric url": 0
}