{
    "Timestamp": "1/22/2020 17:27:37",
    "Title": "Efficient rendering of layered materials using an atomic decomposition with statistical operators",
    "DOI": "10.1145/3197517.3201289",
    "PDF availability (beside dl.acm)": "On an open archive arXiv or similar open archive, On the author(s) website or its institution",
    "Is the code or software publicly available ?": "Yes",
    "Availability": "on the authors website or project page (zip file, direct download...)",
    "Main languages": "C/C++, Shader language",
    "How long did take for you to evaluate the code this paper (if any)?": 3,
    "Build info / instructions": "README",
    "arXiv (page URL)": "https://hal.archives-ouvertes.fr/hal-01785457/",
    "code URL": "https://hal.archives-ouvertes.fr/hal-01785457v3/file/suppl.zip",
    "code URL  2": "",
    "PDF URL": "https://hal.archives-ouvertes.fr/hal-01785457/document",
    "License type": "unspecified",
    "Build mechanism": "Commandline instructions in README",
    "Mandatory Software dependencies": "Open-source libraries",
    "Feedback [easy deps]": "",
    "Feedbacks [easy to find/install dependencies  (5=easy)]": 3,
    "Feedbacks [easy to configure/build (5=easy)]": 5,
    "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "N/A",
    "Execution experience [Row 1]": "",
    "Does the code need data (other than examples/inputs) ?": "No",
    "Available data (provided or url / ref)": "",
    "License for the data (if any)": "",
    "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 5,
    "Feedbacks [Interface user-friendly (5=easy)]": 5,
    "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions, None",
    "Authors": "Private Companies",
    "ACM 1": "Reflectance modeling",
    "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
    "OS of the test": "Linux",
    "General comments": "Many webgl demo are provided to validate many steps or approximation of the paper.\n The mitsuba plugin works well by carefully following the steps described in the readme and with an already working version of mitsuba. Scripts for reproducing figs 12 and 13 are provided.\nEasy to find/install dependencies: 2 because installing mitsuba on linux requires several changes on ubuntu 19.10.\n** In config.py I changed -std=c++11 into -std=gnu++11 ;\n** In mitsuba/build/release/mtsgui I changed QtCore, QtOpenGL (and so on) into Qt5Core, Qt5OpenGL (and so on)\n** in data/scons/qt5.py,line 392 changed QtCore into Qt5Core.",
    "Does the paper already have a reproducibility stamp": "No",
    "Citation count (google scholar)": 11,
    "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "mitsuba",
    "Project URL": "https://belcour.github.io/blog/research/2018/05/05/brdf-realtime-layered.html",
    "Did I manage to perform a complete test (deps/build)?": "Yes",
    "Year": 2018,
    "Misc. comment": "",
    "Software Type": "Code",
    "Topic": "Rendering",
    "Deep learning": "False",
    "hasThumbnail": true,
    "Open access": false,
    "Feedbacks [could reproduce results (5=highly confident)]": 5,
    "Could paper be trivially implemented using the pseudo-code": "",
    "Reviewer": 1,
    "Documentation score": 1,
    "Paper authors": [
        {
            "given": "Laurent",
            "family": "Belcour",
            "sequence": "first",
            "affiliation": [
                {
                    "name": "Unity Technologies, FRANCE"
                }
            ]
        }
    ],
    "Altmetric score": 0,
    "Altmetric badge": 0,
    "Altmetric url": 0
}