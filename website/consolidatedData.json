[
    {
        "Timestamp": "19/01/2020",
        "Title": "A high-performance software graphics pipeline architecture for the GPU",
        "DOI": "10.1145/3197517.3201374",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "as a module/component of an existing opensource library/software",
        "Main languages": "C/C++, Shader language",
        "How long did take for you to evaluate the code this paper (if any)?": 4,
        "Build info / instructions": "README, LICENSE or explicit license (e.g. in the readme / headers)",
        "arXiv (page URL)": "",
        "code URL": "https://github.com/GPUPeople/cuRE",
        "code URL  2": "",
        "PDF URL": "https://www.markussteinberger.net/papers/cuRE.pdf",
        "License type": "MIT",
        "Build mechanism": "IDE Project (VS,..), Not applicable (python, Matlab..)",
        "Mandatory Software dependencies": "Closed source (e.g. commercial) software or libraries free for research purposes",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 5,
        "Feedbacks [easy to configure/build (5=easy)]": 3,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": 3,
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "N/A",
        "Feedbacks [Interface user-friendly (5=easy)]": 5,
        "Documentation": "None",
        "Authors": "Academia",
        "ACM 1": "Massively parallel algorithms",
        "ACM 2": "Rasterization",
        "ACM 3": "Graphics processors",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Windows",
        "General comments": "To compile the software, a number of steps need to be performed:\n\n- In dependencies/image_tools/source/dds.cpp (line 11) and pfm.cpp (line 10) change \n#include <core/utils/io> to #include \"io.h\"\n\n- In pfm.cpp, line 32: change read(data(img) + w * (h - 1 - j), file, w); to read(file, data(img) + w * (h - 1 - j), w);\n- In dds.cpp, line 77: change return read(buffer, file, width * pixel_size); to return read(file, buffer, width * pixel_size);\n- In dds.cpp, line 83: change read(buffer + y * width * pixel_size, file, width * pixel_size); to read(file, buffer + y * width * pixel_size, width * pixel_size);\n- In dds.cpp, line 97: change read<char, 4>(magic_num, file); to  read<char, 4>(file, magic_num);\n\n- In dependencies/config_tools/include/configfile/Stream.h (line 15), Database.h (line 11), log.h (line 12), change\n#include <core/interface> to #include \"../../../core_tools/include/core/interface.h\"\n- in configfile.cpp, line 11: \nchange #include <core/utils/memory> to #include \"../../../core_tools/include/core/utils/memory.h\"\n- In source/cure/materials/OceanMaterial.cpp and source/cure/Geometry.cpp\nchange #include <core/utils/memory> to #include \"../build/dependencies/core_tools/include/core/utils/memory.h\"\n\n- In the library paths of cuREREnderer, add the path to CUPTI, which was for me:\nC:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v10.2\\extras\\CUPTI\\lib64\n\n- In cure.vcxproj, cudaraster.vcxproj and freepipe.vcxproj, edit \n<Import Project=\"$(VCTargetsPath)\\BuildCustomizations\\CUDA 10.0.props\" />\nto your actual CUDA props path ; mine is:\n<Import Project=\"C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v10.2\\extras\\visual_studio_integration\\MSBuildExtensions\\CUDA 10.2.props\" />\nand same thing for the corresponding .targets.\n\nAfter that, the software compiles fine with Visual Studio and runs fine with my NVIDIA GeForce RTX 2080.\n\nHowever it has been tested with a Quadro M1000M (under Linux) and only the OpenGL renderer worked (probably the graphics card is not supported). There were no error message indicating why the different plugins could be loaded.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 10,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "CUDA",
        "Project URL": "",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Rendering",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 5,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Michael",
                "family": "Kenzel",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Graz University of Technology, Austria"
                    }
                ]
            },
            {
                "given": "Bernhard",
                "family": "Kerbl",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Graz University of Technology, Austria"
                    }
                ]
            },
            {
                "given": "Dieter",
                "family": "Schmalstieg",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Graz University of Technology, Austria"
                    }
                ]
            },
            {
                "given": "Markus",
                "family": "Steinberger",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Graz University of Technology, Austria and Max Planck Institute for Informatics, Germany"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Earth mover's distances on discrete surfaces",
        "DOI": "10.1145/2601097.2601175",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on the authors website or project page (zip file, direct download...)",
        "Main languages": "Matlab / Mathematica / ..",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "README",
        "arXiv (page URL)": "",
        "code URL": "https://people.csail.mit.edu/jsolomon/assets/emdadmm.zip",
        "code URL  2": "",
        "PDF URL": "https://people.csail.mit.edu/jsolomon/assets/w1.pdf",
        "License type": "unspecified",
        "Build mechanism": "Not applicable (python, Matlab..)",
        "Mandatory Software dependencies": "Paywall Closed source software or libraries",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 5,
        "Feedbacks [easy to configure/build (5=easy)]": 5,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": 5,
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 4,
        "Feedbacks [Interface user-friendly (5=easy)]": 5,
        "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions, Technical documentation (comments-doxygen...)",
        "Authors": "Academia",
        "ACM 1": "Randomness, geometry and discrete structures",
        "ACM 2": "Design and analysis of algorithms",
        "ACM 3": "Shape modeling",
        "ACM 4": "Convex optimization",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": 5,
        "OS of the test": "Linux",
        "General comments": "Bugfix: add T=double(T) at readOff.m:38.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 61,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "matlab",
        "Project URL": "https://people.csail.mit.edu/jsolomon/",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Geometry",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 5,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 4,
        "Documentation score": 1,
        "Paper authors": [
            {
                "given": "Justin",
                "family": "Solomon",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Raif",
                "family": "Rustamov",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Leonidas",
                "family": "Guibas",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Adrian",
                "family": "Butscher",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "EZ-sketching: three-level optimization for error-tolerant image tracing",
        "DOI": "10.1145/2601097.2601202",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution, Other (web, research gate, semantic scholar,...)",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://sweb.cityu.edu.hk/hongbofu/projects/EZSketching_SIG14/EZ-Sketching_SIGGRAPH_2014.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Image manipulation",
        "ACM 2": "Parametric curve and surface models",
        "ACM 3": "Fine arts",
        "ACM 4": "Performing arts",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 17,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "http://sweb.cityu.edu.hk/hongbofu/projects/EZSketching_SIG14/",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2014,
        "Misc. comment": "ACM keywords 3,4 grey",
        "Software Type": "",
        "Topic": "Image",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 4,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Qingkun",
                "family": "Su",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Wing Ho Andy",
                "family": "Li",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Jue",
                "family": "Wang",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Hongbo",
                "family": "Fu",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 3,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=3&types=aaaaaaaa",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=49775000"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Generating Dynamically Feasible Trajectories for Quadrotor Cameras",
        "DOI": "10.1145/2897824.2925980",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 3,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://graphics.stanford.edu/papers/feasible_trajectories/data/siggraph_2016_paper.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Computational control theory",
        "ACM 2": "Motion path planning",
        "ACM 3": "Computer graphics",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 43,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "http://graphics.stanford.edu/papers/feasible_trajectories/",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2016,
        "Misc. comment": "The project's webpage states \"code coming soon\". The flashlight library https://mikeroberts3000.github.io/flashlight/ explicitly states that it is used in the 206 siggraph paper project but no code for the paper (or reference to part of the library) is explicitly given.",
        "Software Type": "",
        "Topic": "Animation",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 1,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Mike",
                "family": "Roberts",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Stanford University"
                    }
                ]
            },
            {
                "given": "Pat",
                "family": "Hanrahan",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Stanford University"
                    }
                ]
            }
        ],
        "Altmetric score": 0.25,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=1&types=vvvvvvvv",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=15339045"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "In the blink of an eye: leveraging blink-induced suppression for imperceptible position and orientation redirection in virtual reality",
        "DOI": "10.1145/3197517.3201335",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://basilic.informatik.uni-hamburg.de/Publications/2018/LSLWB18/eye_blinks.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Virtual reality",
        "ACM 2": "Perception",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 19,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "https://basilic.informatik.uni-hamburg.de/Publications/2018/LSLWB18/",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Virtual Reality",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 3,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Eike",
                "family": "Langbehn",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "University of Hamburg, Germany"
                    }
                ]
            },
            {
                "given": "Frank",
                "family": "Steinicke",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of Hamburg, Germany"
                    }
                ]
            },
            {
                "given": "Markus",
                "family": "Lappe",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of Muenster, Germany"
                    }
                ]
            },
            {
                "given": "Gregory F.",
                "family": "Welch",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of Central Florida"
                    }
                ]
            },
            {
                "given": "Gerd",
                "family": "Bruder",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of Central Florida"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Integer-only cross field computation",
        "DOI": "10.1145/3197517.3201375",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on the authors website or project page (zip file, direct download...)",
        "Main languages": "Matlab / Mathematica / .., Shader language",
        "How long did take for you to evaluate the code this paper (if any)?": 4,
        "Build info / instructions": "README",
        "arXiv (page URL)": "",
        "code URL": "http://www.cs.technion.ac.il/~mirela/code/ioq.zip",
        "code URL  2": "",
        "PDF URL": "http://www.cs.technion.ac.il/~mirela/publications/ioq.pdf",
        "License type": "unspecified",
        "Build mechanism": "Other script, Not applicable (python, Matlab..)",
        "Mandatory Software dependencies": "Paywall Closed source software or libraries",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 5,
        "Feedbacks [easy to configure/build (5=easy)]": 5,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": 4,
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 5,
        "Feedbacks [Interface user-friendly (5=easy)]": 5,
        "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions, API documentation, Technical documentation (comments-doxygen...)",
        "Authors": "Academia",
        "ACM 1": "Mesh models",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Windows",
        "General comments": "Minor fixes to the code: when running the examples from the examples directory, you need to replace './data/bunny.off' by '../data/bunny.off' in the demo files, and similarly change the '.' to '..' in the vis_vector_field.m file in addOptional(p, 'BinaryPath', fullfile('..', 'bin', 'vis_vector_field', 'vis_vector_field_bin.exe')); \nI also had to add my visual studio bin directory to my PATH.\nAlso, the readme mentions a code snippet to compute cross fields. There is an error in the routine to display the result : it is not m.draw(CF, alpha) but m.plot(CF, alpha) (the method draw is not a method of the class Mesh, and 'draw_face_field' is not correct either).\nA single example (bunny) is provided, though I believe it should work similarly well on other examples.\nIt took me significant time making this code run only because I had to perform a fresh cuda install -- it otherwise trivially installs.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 2,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "matlab / libigl",
        "Project URL": "",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Geometry",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": true,
        "Feedbacks [could reproduce results (5=highly confident)]": 5,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 2,
        "Paper authors": [
            {
                "given": "Nahum",
                "family": "Farchi",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Technion Institute of Technology"
                    }
                ]
            },
            {
                "given": "Mirela",
                "family": "Ben-Chen",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Technion Institute of Technology"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Learning to be a depth camera for close-range human capture and interaction",
        "DOI": "10.1145/2601097.2601223",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://www.microsoft.com/en-us/research/wp-content/uploads/2016/02/depth4free_SIGGRAPH.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Computer graphics",
        "ACM 2": "Scene understanding",
        "ACM 3": "Computer vision problems",
        "ACM 4": "Graphics recognition and interpretation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 71,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "https://www.microsoft.com/en-us/research/project/learning-to-be-a-depth-camera-for-close-range-human-capture-and-interaction/",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2014,
        "Misc. comment": "ACM Keyword 2,3 grey",
        "Software Type": "",
        "Topic": "Animation",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 4,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Sean Ryan",
                "family": "Fanello",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Tim",
                "family": "Paek",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Cem",
                "family": "Keskin",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Shahram",
                "family": "Izadi",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Pushmeet",
                "family": "Kohli",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "David",
                "family": "Kim",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "David",
                "family": "Sweeney",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Antonio",
                "family": "Criminisi",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Jamie",
                "family": "Shotton",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Sing Bing",
                "family": "Kang",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 5.75,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=6&types=aaattttf",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=2573451"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "3D Object Manipulation in a Single Image using Stock 3D Models",
        "DOI": "10.1145/2601097.2601209",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on the authors website or project page (zip file, direct download...)",
        "Main languages": "Cannot answer",
        "How long did take for you to evaluate the code this paper (if any)?": 3,
        "Build info / instructions": "Cannot answer",
        "arXiv (page URL)": "",
        "code URL": "https://www.cs.cmu.edu/~om3d/executables.html",
        "code URL  2": "http://sites.cs.cmu.edu/om3d/test.php",
        "PDF URL": "https://www.cs.cmu.edu/~om3d/papers/SIGGRAPH2014.pdf",
        "License type": "Special license SOFTWARE LICENSE AGREEMENT ACADEMIC OR NON-PROFIT ORGANIZATION NONCOMMERCIAL RESEARCH USE ONLY...",
        "Build mechanism": "Not applicable (python, Matlab..)",
        "Mandatory Software dependencies": "None",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "N/A",
        "Feedbacks [easy to configure/build (5=easy)]": "N/A",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "N/A",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "Cannot answer",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 3,
        "Feedbacks [Interface user-friendly (5=easy)]": 4,
        "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions",
        "Authors": "Academia",
        "ACM 1": "Virtual reality",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Mac OS",
        "General comments": "I was able to download and run some executables on an old MacOS (Sierra). The 3D manipulation and rendering tool works perfectly on the provided example but I was not able to run the other tools (Alignment and illumapp tools) due to version issues in the required dynamic libs (opens): \n\n./Release/Alignment.app/Contents/MacOS/Alignment ./examples/chair/\ndyld: Library not loaded: lib/libopencv_imgproc.2.4.dylib\n  Referenced from: /Users/tmp/Downloads/OM3D_1.0.2/./Release/Alignment.app/Contents/MacOS/Alignment\n  Reason: image not found",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 136,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "https://www.cs.cmu.edu/~om3d/",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2014,
        "Misc. comment": "The source code is available upon request ( https://www.cs.cmu.edu/~om3d/sourcecode.html).\nIf the \"I agree\" button doesn't show (it was not visible on my Chrome, nor IE), you can press it by going to http://sites.cs.cmu.edu/om3d/test.php",
        "Software Type": "Binary",
        "Topic": "Image",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 2,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 3,
        "Documentation score": 1,
        "Paper authors": [
            {
                "given": "Natasha",
                "family": "Kholgade",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Tomas",
                "family": "Simon",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Alexei",
                "family": "Efros",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Yaser",
                "family": "Sheikh",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 3,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=3&types=aaaaaaaa",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=15498817"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "3D printing spatially varying color and translucency",
        "DOI": "10.1145/3197517.3201349",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://ntnuopen.ntnu.no/ntnu-xmlui/bitstream/handle/11250/2592720/AAM_Version_colorAndTranslucency.pdf?sequence=3&isAllowed=y",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Perception",
        "ACM 2": "Graphics file formats",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 3,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "https://ntnuopen.ntnu.no/ntnu-xmlui/handle/11250/2592720",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Fabrication",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 1,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Alan",
                "family": "Brunton",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Fraunhofer IGD"
                    }
                ]
            },
            {
                "given": "Can Ates",
                "family": "Arikan",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Fraunhofer IGD"
                    }
                ]
            },
            {
                "given": "Tejas Madan",
                "family": "Tanksale",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Fraunhofer IGD"
                    }
                ]
            },
            {
                "given": "Philipp",
                "family": "Urban",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Fraunhofer IGD and Norwegian University of Science and Technology NTNU"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "A Compiler for 3D Machine Knitting",
        "DOI": "10.1145/2897824.2925940",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No but pseudo-code in the PDF",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://cfg.mit.edu/sites/cfg.mit.edu/files/paper_1.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Compilers",
        "ACM 2": "Computer-aided manufacturing",
        "ACM 3": "Graphics systems and interfaces",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 40,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "https://la.disneyresearch.com/publication/machine-knitting-compiler/",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2016,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Fabrication",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": 1,
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "James",
                "family": "McCann",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Disney Research"
                    }
                ]
            },
            {
                "given": "Lea",
                "family": "Albaugh",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Disney Research"
                    }
                ]
            },
            {
                "given": "Vidya",
                "family": "Narayanan",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Disney Research"
                    }
                ]
            },
            {
                "given": "April",
                "family": "Grow",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Disney Research and UC Santa Cruz"
                    }
                ]
            },
            {
                "given": "Wojciech",
                "family": "Matusik",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Massacusetts Institute of Technology"
                    }
                ]
            },
            {
                "given": "Jen",
                "family": "Mankoff",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Disney Research and Carnegie Mellon University"
                    }
                ]
            },
            {
                "given": "Jessica",
                "family": "Hodgins",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Disney Research"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "A Comprehensive Framework for Rendering Layered Materials",
        "DOI": "10.1145/2601097.2601139",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on github, gitlab or other code platform",
        "Main languages": "C/C++, Python",
        "How long did take for you to evaluate the code this paper (if any)?": 10,
        "Build info / instructions": "README, LICENSE or explicit license (e.g. in the readme / headers), AUTHORS or explicitly mentioned",
        "arXiv (page URL)": "",
        "code URL": "https://www.mitsuba-renderer.org/repos/mitsuba.git",
        "code URL  2": "",
        "PDF URL": "http://www.cs.cornell.edu/projects/layered-sg14/layered.pdf",
        "License type": "GPL",
        "Build mechanism": "SCONS",
        "Mandatory Software dependencies": "Open-source libraries",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 5,
        "Feedbacks [easy to configure/build (5=easy)]": 3,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": 5,
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 3,
        "Feedbacks [Interface user-friendly (5=easy)]": 3,
        "Documentation": "None",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Texturing",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Linux",
        "General comments": "layered\" branch of mitsuba: Compiling went fine provided CXXflags in config.py are modified from  -std=c++11 into -std=gnu++11 (ubuntu 18.04) . The branch was successfully linked against qt4 . However the interface kept crashing (failed assertion). No example scene is given so I was not able to reproduce the results. There seems to be another implementation of this work called layerlab. But this mitsuba code was the one referenced from the project's webpage.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 63,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "qt4/libpng/fftw3/libpcrecpp/eigen3/openexr/boost/xerces/ilmbase/jpeg/glewmx/libxxf86vm",
        "Project URL": "http://www.cs.cornell.edu/projects/layered-sg14/",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Rendering",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 1,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 1,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Wenzel",
                "family": "Jakob",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Eugene",
                "family": "d'Eon",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Otto",
                "family": "Jakob",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Steve",
                "family": "Marschner",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "A Compressive Light Field Projection System",
        "DOI": "10.1145/2601097.2601144",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution, Other (web, research gate, semantic scholar,...)",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on the authors website or project page (zip file, direct download...)",
        "Main languages": "Matlab / Mathematica / ..",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "README, AUTHORS or explicitly mentioned",
        "arXiv (page URL)": "",
        "code URL": "http://web.media.mit.edu/~gordonw/CompressiveLightFieldProjector/supplement.zip",
        "code URL  2": "",
        "PDF URL": "http://web.media.mit.edu/~gordonw/CompressiveLightFieldProjector/CompressiveLightFieldProjector.pdf",
        "License type": "unspecified",
        "Build mechanism": "Not applicable (python, Matlab..)",
        "Mandatory Software dependencies": "Paywall Closed source software or libraries",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 5,
        "Feedbacks [easy to configure/build (5=easy)]": 5,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "N/A",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 5,
        "Feedbacks [Interface user-friendly (5=easy)]": 5,
        "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions, Technical documentation (comments-doxygen...)",
        "Authors": "Academia",
        "ACM 1": "Displays and imagers",
        "ACM 2": "Computations on matrices",
        "ACM 3": "Linear algebra algorithms",
        "ACM 4": "Rendering",
        "ACM 5": "Image manipulation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": 5,
        "OS of the test": "Linux",
        "General comments": "The provided code contains two examples:\n - HDR Super-resolution: reproduce similar results than Figure 11 in the paper\n - light field factorization: implement the nonnegative light field factorization (Eq.10 in the paper) further described in supplementary materials. \nThese two examples work out of the box and produce similar results than those found in the paper. \nHowever they cover only a subset of the proposed method, and specific hardware would be required for fully reproduce this work.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 72,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "matlab",
        "Project URL": "http://web.media.mit.edu/~gordonw/CompressiveLightFieldProjector/",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2014,
        "Misc. comment": "",
        "ACM 6": "Graphics systems and interfaces",
        "Software Type": "Code",
        "Topic": "Virtual Reality",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 4,
        "Could paper be trivially implemented using the pseudo-code": 1,
        "Reviewer": 4,
        "Documentation score": 1,
        "Paper authors": [
            {
                "given": "Matthew",
                "family": "Hirsch",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Gordon",
                "family": "Wetzstein",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Ramesh",
                "family": "Raskar",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 3.25,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=4&types=aaaaaatt",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=8361716"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "A Constructive Theory of Sampling for Image Synthesis using Reproducing Kernel Bases",
        "DOI": "10.1145/2601097.2601149",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No but pseudo-code in the PDF",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://cybertron.cg.tu-berlin.de/lessig/projects/cosalt/data/cosalt.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Reflectance modeling",
        "ACM 2": "Image manipulation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 8,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "http://cybertron.cg.tu-berlin.de/lessig/projects/cosalt/",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2014,
        "Misc. comment": "Technically there is mathematica, matlab and python code, but they respectively allow to demonstrate formulas in the paper and correspond to a tutorial on reproducing kernel bases.",
        "Software Type": "",
        "Topic": "Rendering",
        "Deep learning": "True",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": 2,
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Christian",
                "family": "Lessig",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Mathieu",
                "family": "Desbrun",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Eugene",
                "family": "Fiume",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "A Deep Learning Framework for Character Motion Synthesis and Editing",
        "DOI": "10.1145/2897824.2925975",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://www.ipab.inf.ed.ac.uk/cgvu/motionsynthesis.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Motion capture",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 179,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2016,
        "Misc. comment": "In practice, an unofficial partial reimplementation can be seen at:\nhttps://github.com/AliJalalifar/Character_Animation",
        "Software Type": "",
        "Topic": "Animation",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Daniel",
                "family": "Holden",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "University of Edinburgh"
                    }
                ]
            },
            {
                "given": "Jun",
                "family": "Saito",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Marza Animation Planet"
                    }
                ]
            },
            {
                "given": "Taku",
                "family": "Komura",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of Edinburgh"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "A Material Point Method for Thin Shells with Frictional Contact",
        "DOI": "10.1145/3197517.3201346",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://www.math.ucla.edu/~jteran/papers/GHFGTT18.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Physical simulation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 12,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Animation",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 1,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Qi",
                "family": "Guo",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "University of California, Los Angeles"
                    }
                ]
            },
            {
                "given": "Xuchen",
                "family": "Han",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of California, Los Angeles"
                    }
                ]
            },
            {
                "given": "Chuyuan",
                "family": "Fu",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of California, Los Angeles"
                    }
                ]
            },
            {
                "given": "Theodore",
                "family": "Gast",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of California, Los Angeles"
                    }
                ]
            },
            {
                "given": "Rasmus",
                "family": "Tamstorf",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Walt Disney Animation Studios"
                    }
                ]
            },
            {
                "given": "Joseph",
                "family": "Teran",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of California, Los Angeles"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "A moving least squares material point method with displacement discontinuity and two-way rigid body coupling",
        "DOI": "10.1145/3197517.3201293",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on github, gitlab or other code platform",
        "Main languages": "C/C++",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "README, LICENSE or explicit license (e.g. in the readme / headers), AUTHORS or explicitly mentioned",
        "arXiv (page URL)": "",
        "code URL": "https://github.com/yuanming-hu/taichi_mpm",
        "code URL  2": "",
        "PDF URL": "https://www.seas.upenn.edu/~cffjiang/research/mlsmpm/hu2018mlsmpm.pdf",
        "License type": "MIT",
        "Build mechanism": "Commandline instructions in README",
        "Mandatory Software dependencies": "Open-source libraries",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 5,
        "Feedbacks [easy to configure/build (5=easy)]": 5,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "N/A",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 5,
        "Feedbacks [Interface user-friendly (5=easy)]": 5,
        "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions, API documentation, Technical documentation (comments-doxygen...)",
        "Authors": "Academia",
        "ACM 1": "Physical simulation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Linux",
        "General comments": "An example is provided in file mls.mpm88 (which is particularly well explained) which is consistent with the paper result. Many other examples are provided in the scripts folder, however this requires installing taichi (a legacy branch) which fails (even after adding a -fpermissive option which suppressed some errors) with:\n\"error: no match for \u2018operator+=\u2019 (operand types are \u2018taichi::RigidBody<2>::InertiaType\u2019 {aka \u2018float\u2019} and \u2018taichi::MatrixND<2, float, taichi::InstSetExt::AVX2>\u2019)\" \n\nHence I was not able to reproduce other results using the provided scripts.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 25,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "taichi.h",
        "Project URL": "https://yzhu.io/publication/mpm2018siggraph/",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Animation",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 4,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 1,
        "Documentation score": 2,
        "Paper authors": [
            {
                "given": "Yuanming",
                "family": "Hu",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "MIT CSAIL"
                    }
                ]
            },
            {
                "given": "Yu",
                "family": "Fang",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Tsinghua University"
                    }
                ]
            },
            {
                "given": "Ziheng",
                "family": "Ge",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of Science and Technology of China"
                    }
                ]
            },
            {
                "given": "Ziyin",
                "family": "Qu",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of Pennsylvania"
                    }
                ]
            },
            {
                "given": "Yixin",
                "family": "Zhu",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of California, Los Angeles"
                    }
                ]
            },
            {
                "given": "Andre",
                "family": "Pradhana",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of Pennsylvania"
                    }
                ]
            },
            {
                "given": "Chenfanfu",
                "family": "Jiang",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of Pennsylvania"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "A multi-scale model for simulating liquid-fabric interactions",
        "DOI": "10.1145/3197517.3201392",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on github, gitlab or other code platform",
        "Main languages": "C/C++",
        "How long did take for you to evaluate the code this paper (if any)?": 2,
        "Build info / instructions": "README, LICENSE or explicit license (e.g. in the readme / headers)",
        "arXiv (page URL)": "",
        "code URL": "https://github.com/nepluno/libWetCloth",
        "code URL  2": "",
        "PDF URL": "http://www.cs.columbia.edu/cg/wetcloth/main.pdf",
        "License type": "Clear BSD License but further  restricted to academic and non-commercial use",
        "Build mechanism": "CMakeLists",
        "Mandatory Software dependencies": "Open-source libraries",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 5,
        "Feedbacks [easy to configure/build (5=easy)]": 5,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "N/A",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 5,
        "Feedbacks [Interface user-friendly (5=easy)]": 4,
        "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions",
        "Authors": "Academia",
        "ACM 1": "Physical simulation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Mac OS",
        "General comments": "No real issues. Many dependencies but all are fine on mac os with brew.",
        "Does the paper already have a reproducibility stamp": "Yes, http://www.replicabilitystamp.org",
        "Citation count (google scholar)": 8,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "Eigen  / RapidXML / tclap / libIGL / AntTweakBar / Intel TBB / GLUT / libPNG",
        "Project URL": "http://www.cs.columbia.edu/cg/wetcloth/",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Animation",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 5,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 3,
        "Documentation score": 1,
        "Paper authors": [
            {
                "given": "Yun (Raymond)",
                "family": "Fei",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Columbia University"
                    }
                ]
            },
            {
                "given": "Christopher",
                "family": "Batty",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of Waterloo, Canada"
                    }
                ]
            },
            {
                "given": "Eitan",
                "family": "Grinspun",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Columbia University"
                    }
                ]
            },
            {
                "given": "Changxi",
                "family": "Zheng",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Columbia University"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "A radiative transfer framework for spatially-correlated materials",
        "DOI": "10.1145/3197517.3201282",
        "PDF availability (beside dl.acm)": "On an open archive arXiv or similar open archive, On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "https://arxiv.org/abs/1805.02651",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://giga.cps.unizar.es/~ajarabo/pubs/Jarabo2018radiative/downloads/Jarabo2018radiative.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Reflectance modeling",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 14,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "http://giga.cps.unizar.es/~ajarabo/pubs/Jarabo2018radiative/",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Rendering",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Adrian",
                "family": "Jarabo",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Universidad de Zaragoza - I3A"
                    }
                ]
            },
            {
                "given": "Carlos",
                "family": "Aliaga",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Universidad de Zaragoza - I3A and Desilico Labs"
                    }
                ]
            },
            {
                "given": "Diego",
                "family": "Gutierrez",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Universidad de Zaragoza - I3A"
                    }
                ]
            }
        ],
        "Altmetric score": 21.3,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=22&types=tttttttt",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=40830076"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "A Reduced Model for Interactive Hairs",
        "DOI": "10.1145/2601097.2601211",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No but pseudo-code in the PDF",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 2,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://www.mlchai.com/resources/chai2014reduced.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Animation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 32,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Animation",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": 1,
        "Reviewer": 3,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Menglei",
                "family": "Chai",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Changxi",
                "family": "Zheng",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Kun",
                "family": "Zhou",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "A Reflectance Display",
        "DOI": "10.1145/2601097.2601140",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://vision.seas.harvard.edu/reflectance_display/reflectance_display.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Rendering",
        "ACM 2": "Image manipulation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 15,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "http://vision.seas.harvard.edu/reflectance_display/",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Virtual Reality",
        "Deep learning": "True",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 4,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Daniel",
                "family": "Glasner",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Todd",
                "family": "Zickler",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Anat",
                "family": "Levin",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "A Semi-Implicit Material Point Method for the Continuum Simulation of Granular Materials",
        "DOI": "10.1145/2897824.2925877",
        "PDF availability (beside dl.acm)": "On an open archive arXiv or similar open archive, On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on the authors website or project page (zip file, direct download...)",
        "Main languages": "C/C++",
        "How long did take for you to evaluate the code this paper (if any)?": 2,
        "Build info / instructions": "README, LICENSE or explicit license (e.g. in the readme / headers), AUTHORS or explicitly mentioned",
        "arXiv (page URL)": "https://hal.inria.fr/hal-01310189",
        "code URL": "http://bipop.inrialpes.fr/people/gdaviet/code/sand6/",
        "code URL  2": "",
        "PDF URL": "http://www.inrialpes.fr/bipop/people/bertails/Papiers/PDF/mpmGranular.pdf",
        "License type": "GPL",
        "Build mechanism": "Makefile, CMakeLists",
        "Mandatory Software dependencies": "Open-source libraries",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 5,
        "Feedbacks [easy to configure/build (5=easy)]": 5,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "N/A",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 4,
        "Feedbacks [Interface user-friendly (5=easy)]": 5,
        "Documentation": "API documentation, Technical documentation (comments-doxygen...)",
        "Authors": "Academia",
        "ACM 1": "Physical simulation",
        "ACM 2": "Simulation by animation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Linux",
        "General comments": "scene configurations provided for the examples presented in the paper.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 42,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "Eigen/so-bogus/boost-serialization/libqglviewer(opt)",
        "Project URL": "http://bipop.inrialpes.fr/~bertails/Papiers/mpmGranular.html",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2016,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Animation",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 5,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 1,
        "Documentation score": 1,
        "Paper authors": [
            {
                "given": "Gilles",
                "family": "Daviet",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Grenoble University, CNRS, France"
                    }
                ]
            },
            {
                "given": "Florence",
                "family": "Bertails-Descoubes",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Grenoble University, CNRS, France"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "A Similarity Measure for Illustration Style",
        "DOI": "10.1145/2601097.2601131",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://webdiis.unizar.es/~elenag/projects/SIG2014_styleSim/downloads/GarcesSIG2014_preprint.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Computer graphics",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 75,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "http://webdiis.unizar.es/~elenag/projects/SIG2014_styleSim/",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2014,
        "Misc. comment": "The project page contains the dataset and some resulting data (features and weights). Several html pages to display the results do not work anymore.",
        "Software Type": "",
        "Topic": "Image",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 3,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Elena",
                "family": "Garces",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Aseem",
                "family": "Agarwala",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Diego",
                "family": "Gutierrez",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Aaron",
                "family": "Hertzmann",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "A System for Rapid Exploration of Shader Optimization Choices",
        "DOI": "10.1145/2897824.2925923",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on github, gitlab or other code platform",
        "Main languages": "C/C++, Shader language",
        "How long did take for you to evaluate the code this paper (if any)?": 2,
        "Build info / instructions": "README, LICENSE or explicit license (e.g. in the readme / headers)",
        "arXiv (page URL)": "",
        "code URL": "https://github.com/csyonghe/Spire",
        "code URL  2": "",
        "PDF URL": "http://graphics.cs.cmu.edu/projects/spire/he16_spire.pdf",
        "License type": "MIT",
        "Build mechanism": "IDE Project (VS,..)",
        "Mandatory Software dependencies": "Closed source (e.g. commercial) software or libraries free for research purposes",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 5,
        "Feedbacks [easy to configure/build (5=easy)]": 5,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": 1,
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "N/A",
        "Feedbacks [Interface user-friendly (5=easy)]": "N/A",
        "Documentation": "Technical documentation (comments-doxygen...)",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Graphics systems and interfaces",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Windows",
        "General comments": "Needed to add missing directive #include <intrin.h> in hello.cpp to compile.\n\nAt runtime, DirectX throws the following error (from hello.cpp:180): \nD3D11 ERROR: ID3D11Device::CreateInputLayout: The provided input signature expects to read an element with SemanticName/Index: 'position'/0, but the declaration doesn't provide a matching name. [ STATE_CREATION ERROR #163: CREATEINPUTLAYOUT_MISSINGELEMENT]\n\nI couldn't debug this error, as I didn't know if the matching problem came from the input spire shader, or from the processes in spire that convert the spire shader to a DirectX shader.\n\nNote that the follow-up Slang (Sigg 2018) is however marked as reproducible.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 10,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "DirectX",
        "Project URL": "http://graphics.cs.cmu.edu/projects/spire/",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2016,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Rendering",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 1,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 4,
        "Documentation score": 1,
        "Paper authors": [
            {
                "given": "Yong",
                "family": "He",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Carnegie Mellon University"
                    }
                ]
            },
            {
                "given": "Tim",
                "family": "Foley",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "NVIDIA"
                    }
                ]
            },
            {
                "given": "Kayvon",
                "family": "Fatahalian",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Carnegie Mellon University"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Accelerated Quadratic Proxy for Geometric Optimization",
        "DOI": "10.1145/2897824.2925920",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on github, gitlab or other code platform",
        "Main languages": "Matlab / Mathematica / ..",
        "How long did take for you to evaluate the code this paper (if any)?": 2,
        "Build info / instructions": "README, AUTHORS or explicitly mentioned",
        "arXiv (page URL)": "",
        "code URL": "https://github.com/shaharkov/AcceleratedQuadraticProxy",
        "code URL  2": "",
        "PDF URL": "https://shaharkov.github.io/projects/AcceleratedQuadraticProxy.pdf",
        "License type": "unspecified",
        "Build mechanism": "Not applicable (python, Matlab..)",
        "Mandatory Software dependencies": "Open-source libraries, Paywall Closed source software or libraries",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 5,
        "Feedbacks [easy to configure/build (5=easy)]": 4,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": 5,
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 4,
        "Feedbacks [Interface user-friendly (5=easy)]": 4,
        "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions",
        "Authors": "Academia",
        "ACM 1": "Mesh models",
        "ACM 2": "Nonconvex optimization",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Linux",
        "General comments": "To compile it under linux: in compileAllMex.m set up the right paths for Eigen and libigl. Then to run the examples change the path formating to be linux-compatible: replace 'data\\paper_deformation_2d_gecko_wConstraints.mat' by 'data/paper_deformation_2d_gecko_wConstraints.mat' for example (similar changes for all example scripts. Up to proper mesh visualization, the results are similar to the ones in the paper in both 2D and 3D.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 43,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "matlab / eigen / libigl",
        "Project URL": "https://shaharkov.github.io/AcceleratedQuadraticProxy.html",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2016,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Geometry",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 5,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 1,
        "Documentation score": 1,
        "Paper authors": [
            {
                "given": "Shahar Z.",
                "family": "Kovalsky",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Weizmann Institute of Science"
                    }
                ]
            },
            {
                "given": "Meirav",
                "family": "Galun",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Weizmann Institute of Science"
                    }
                ]
            },
            {
                "given": "Yaron",
                "family": "Lipman",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Weizmann Institute of Science"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Acoustic Voxels: Computational Optimization of Modular Acoustic Filters",
        "DOI": "10.1145/2897824.2925960",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No but pseudo-code in the PDF",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://www.cs.columbia.edu/cg/lego/acoustic-voxels-siggraph-2016-li-et-al.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Physical simulation",
        "ACM 2": "Parametric curve and surface models",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 35,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "http://www.cs.columbia.edu/cg/lego/",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2016,
        "Misc. comment": "The algorithm only corresponds to the Monte Carlo sampler, not the full simulation and optimization.",
        "Software Type": "",
        "Topic": "Fabrication",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": 1,
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Dingzeyu",
                "family": "Li",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Columbia University"
                    }
                ]
            },
            {
                "given": "David I. W.",
                "family": "Levin",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Disney Research"
                    }
                ]
            },
            {
                "given": "Wojciech",
                "family": "Matusik",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "MIT CSAIL and Disney Research"
                    }
                ]
            },
            {
                "given": "Changxi",
                "family": "Zheng",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Columbia University"
                    }
                ]
            }
        ],
        "Altmetric score": 45.08,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=46&types=mmmmmmmb",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=9826319"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Active Volumetric Musculoskeletal Systems",
        "DOI": "10.1145/2601097.2601215",
        "PDF availability (beside dl.acm)": "Other (web, research gate, semantic scholar,...)",
        "Is the code or software publicly available ?": "No but pseudo-code in the PDF",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://web.archive.org/web/20160423103349/https://www.cs.ubc.ca/sites/cs/files/research/papers/2014/06/papfinal.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Animation",
        "ACM 2": "Simulation by animation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 39,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Animation",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": 1,
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Ye",
                "family": "Fan",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Joshua",
                "family": "Litven",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Dinesh K.",
                "family": "Pai",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Adaptive Nonlinearity for Collisions in Complex Rod Assemblies",
        "DOI": "10.1145/2601097.2601100",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No but pseudo-code in the PDF",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://www.cs.columbia.edu/cg/adonis/adonis.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Simulation by animation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 41,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "http://www.cs.columbia.edu/cg/adonis/",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Animation",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": 2,
        "Reviewer": 3,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Danny M.",
                "family": "Kaufman",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Rasmus",
                "family": "Tamstorf",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Breannan",
                "family": "Smith",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Jean-Marie",
                "family": "Aubry",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Eitan",
                "family": "Grinspun",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Adaptive Polynomial Rendering",
        "DOI": "10.1145/2897824.2925936",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://cglab.gist.ac.kr/figs/paper/pdf/2016_Adaptive_Polynomial_Rendering.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Ray tracing",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 31,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "https://cglab.gist.ac.kr/publications/2016_Adaptive_Polynomial_Rendering.html",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2016,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Rendering",
        "Deep learning": "True",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Bochang",
                "family": "Moon",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Disney Research"
                    }
                ]
            },
            {
                "given": "Steven",
                "family": "McDonagh",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Disney Research"
                    }
                ]
            },
            {
                "given": "Kenny",
                "family": "Mitchell",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Disney Research and Edinburgh Napier University"
                    }
                ]
            },
            {
                "given": "Markus",
                "family": "Gross",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Disney Research and ETH Zurich"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Adaptive Tearing and Cracking of Thin Sheets",
        "DOI": "10.1145/2601097.2601132",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "as a module/component of an existing opensource library/software",
        "Main languages": "C/C++",
        "How long did take for you to evaluate the code this paper (if any)?": 3,
        "Build info / instructions": "LICENSE or explicit license (e.g. in the readme / headers), CONTRIBUTING or explicitly mentions how to contribute to the code",
        "arXiv (page URL)": "",
        "code URL": "http://graphics.eecs.berkeley.edu/site_root/resources/ARCSim/",
        "code URL  2": "http://graphics.eecs.berkeley.edu/site_root/resources/ARCSim/arcsim-0.3.1.tar.gz",
        "PDF URL": "http://graphics.berkeley.edu/papers/Pfaff-ATC-2014-07/Pfaff-ATC-2014-07.pdf",
        "License type": "Copyright (c)2013 The Regents of the University of California (Regents). (see LICENSE for details)",
        "Build mechanism": "Makefile",
        "Mandatory Software dependencies": "Open-source libraries",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 2,
        "Feedbacks [easy to configure/build (5=easy)]": 1,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "N/A",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "N/A",
        "Feedbacks [Interface user-friendly (5=easy)]": "N/A",
        "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions",
        "Authors": "Academia",
        "ACM 1": "Animation",
        "ACM 2": "Simulation by animation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Linux",
        "General comments": "I got a C++ issue when building the project on MacOS (after setting a -std=c+11 in the Makefile.mac):\n\nIn file included from src/auglag.cpp:27:\nIn file included from src/optimization.hpp:30:\nsrc/sparse.hpp:118:18: error: invalid operands to binary expression ('basic_ostream<char, std::__1::char_traits<char> >' and 'std::fstream' (aka 'basic_fstream<char>'))\n    file << \"}]\" << file;\n    ~~~~~~~~~~~~ ^  ~~~~\n\n. On both linux/macos, the TAUCS dependency cannot be built due to a missing \"intel cilk\" library which should be optional but the configure was not able to handle the issue (no  'taucs_config_tests.h' generated).",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 64,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "boost / libpng /BLAS/ freeglut / gfortran / lapack",
        "Project URL": "http://graphics.berkeley.edu/papers/Pfaff-ATC-2014-07/",
        "Did I manage to perform a complete test (deps/build)?": "No due to technical issue",
        "Year": 2014,
        "Misc. comment": "The paper code seems to be included in the ARCSIM project. I wasn't able to check the part of the software containing it (few documentation and build issues).",
        "Software Type": "Code",
        "Topic": "Animation",
        "Deep learning": "True",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "N/A",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 3,
        "Documentation score": 1,
        "Paper authors": [
            {
                "given": "Tobias",
                "family": "Pfaff",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Rahul",
                "family": "Narain",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Juan Miguel",
                "family": "de Joya",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "James F.",
                "family": "O'Brien",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Additive Light Field Displays: Realization of Augmented Reality with Holographic Optical Elements",
        "DOI": "10.1145/2897824.2925971",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://cvlab.khu.ac.kr/paper45.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Computational photography",
        "ACM 2": "Emerging optical and photonic technologies",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 79,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2016,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Virtual Reality",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Seungjae",
                "family": "Lee",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Seoul National University"
                    }
                ]
            },
            {
                "given": "Changwon",
                "family": "Jang",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Seoul National University"
                    }
                ]
            },
            {
                "given": "Seokil",
                "family": "Moon",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Seoul National University"
                    }
                ]
            },
            {
                "given": "Jaebum",
                "family": "Cho",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Seoul National University"
                    }
                ]
            },
            {
                "given": "Byoungho",
                "family": "Lee",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Seoul National University"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Adjoint-Driven Russian Roulette and Splitting in Light Transport Simulation",
        "DOI": "10.1145/2897824.2925912",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No but pseudo-code in the PDF",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://cgg.mff.cuni.cz/~jaroslav/papers/2016-adrrs/2016-vorba-adrrs-paper.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Rendering",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 18,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "https://cgg.mff.cuni.cz/~jaroslav/papers/2016-adrrs/",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2016,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Rendering",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": 1,
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Ji\u0159\u00ed",
                "family": "Vorba",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Charles University in Prague, Weta Digital, Wellington"
                    }
                ]
            },
            {
                "given": "Jaroslav",
                "family": "K\u0159iv\u00e1nek",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Charles University in Prague"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "All-Hex Meshing using Closed-Form Induced Polycube",
        "DOI": "10.1145/2897824.2925957",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on the authors website or project page (zip file, direct download...)",
        "Main languages": "Cannot answer",
        "How long did take for you to evaluate the code this paper (if any)?": 2,
        "Build info / instructions": "README",
        "arXiv (page URL)": "",
        "code URL": "http://www.cad.zju.edu.cn/home/hj/16/closed-form-polycube/closed-form-polycube-release-V1.0.7z",
        "code URL  2": "",
        "PDF URL": "http://www.cad.zju.edu.cn/home/hj/16/closed-form-polycube/closed-form-polycube.pdf",
        "License type": "unspecified",
        "Build mechanism": "Not applicable (python, Matlab..)",
        "Mandatory Software dependencies": "None",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "N/A",
        "Feedbacks [easy to configure/build (5=easy)]": "N/A",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "N/A",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 1,
        "Feedbacks [Interface user-friendly (5=easy)]": "N/A",
        "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions",
        "Authors": "Academia",
        "ACM 1": "Mesh geometry models",
        "ACM 2": "Parametric curve and surface models",
        "ACM 3": "Volumetric models",
        "ACM 4": "Computational geometry",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Linux",
        "General comments": "binary produced an error: \"*** stack smashing detected ***: <unknown> terminated\". was not able to run the test",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 41,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2016,
        "Misc. comment": "",
        "Software Type": "Binary",
        "Topic": "Geometry",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 1,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 1,
        "Documentation score": 1,
        "Paper authors": [
            {
                "given": "Xianzhong",
                "family": "Fang",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Zhejiang University"
                    }
                ]
            },
            {
                "given": "Weiwei",
                "family": "Xu",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Zhejiang University"
                    }
                ]
            },
            {
                "given": "Hujun",
                "family": "Bao",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Zhejiang University"
                    }
                ]
            },
            {
                "given": "Jin",
                "family": "Huang",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Zhejiang University"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "AMFS: adaptive multi-frequency shading for future graphics processors",
        "DOI": "10.1145/2601097.2601214",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://fileadmin.cs.lth.se/graphics/research/papers/2014/amfs/amfs.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Graphics processors",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 32,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "https://software.intel.com/en-us/articles/amfs-adaptive-multi-frequency-shading-for-future-graphics-processors",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Rendering",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 1,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Petrik",
                "family": "Clarberg",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Robert",
                "family": "Toth",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Jon",
                "family": "Hasselgren",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Jim",
                "family": "Nilsson",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Tomas",
                "family": "Akenine-M\u00f6ller",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 3,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=3&types=aaaaaaaa",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=42983447"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "An advection-reflection solver for detail-preserving fluid simulation",
        "DOI": "10.1145/3197517.3201324",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on the authors website or project page (zip file, direct download...)",
        "Main languages": "Python",
        "How long did take for you to evaluate the code this paper (if any)?": 2,
        "Build info / instructions": "None",
        "arXiv (page URL)": "",
        "code URL": "https://jzehnder.me/publications/advectionReflection/plume.py",
        "code URL  2": "",
        "PDF URL": "https://jzehnder.me/publications/advectionReflection/paper.pdf",
        "License type": "unspecified",
        "Build mechanism": "Not applicable (python, Matlab..)",
        "Mandatory Software dependencies": "Open-source libraries",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 5,
        "Feedbacks [easy to configure/build (5=easy)]": "N/A",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "N/A",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 5,
        "Feedbacks [Interface user-friendly (5=easy)]": 5,
        "Documentation": "API documentation",
        "Authors": "Academia",
        "ACM 1": "Physical simulation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Linux",
        "General comments": "runs very smoothly, but the renderings are different in the paper, the results are consistent nevertheless.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 9,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "mantaflow",
        "Project URL": "https://jzehnder.me/publications/advectionReflection/",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Animation",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 5,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 1,
        "Documentation score": 1,
        "Paper authors": [
            {
                "given": "Jonas",
                "family": "Zehnder",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Universit\u00e9 de Montr\u00e9al"
                    }
                ]
            },
            {
                "given": "Rahul",
                "family": "Narain",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of Minnesota and Indian Institute of Technology Delhi"
                    }
                ]
            },
            {
                "given": "Bernhard",
                "family": "Thomaszewski",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Universit\u00e9 de Montr\u00e9al"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "An Asymptotic Numerical Method for Inverse Elastic Shape Design",
        "DOI": "10.1145/2601097.2601189",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on the authors website or project page (zip file, direct download...)",
        "Main languages": "C/C++",
        "How long did take for you to evaluate the code this paper (if any)?": 10,
        "Build info / instructions": "README",
        "arXiv (page URL)": "",
        "code URL": "http://kunzhou.net/zjugaps/ANMdesign/code/opensrc.zip",
        "code URL  2": "",
        "PDF URL": "http://kunzhou.net/zjugaps/ANMdesign/ANMdesign.pdf",
        "License type": "unspecified",
        "Build mechanism": "IDE Project (VS,..)",
        "Mandatory Software dependencies": "Open-source libraries, Closed source (e.g. commercial) software or libraries free for research purposes",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 1,
        "Feedbacks [easy to configure/build (5=easy)]": 1,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": 1,
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 5,
        "Feedbacks [Interface user-friendly (5=easy)]": 5,
        "Documentation": "None",
        "Authors": "Academia",
        "ACM 1": "Geometric topology",
        "ACM 2": "Physical simulation",
        "ACM 3": "Shape modeling",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Windows",
        "General comments": "I refreshed this old 2014 code to make it run on Qt 5 in 64bits with VS2017 using up to dates libraries rather than Qt 4 in 32 bits. This requires a number of adjustments, and fixing existing bugs, especially since there is no documentation nor build info:\n\n- In mat3d.h, replace line 435:\n  return(\n    s << '[' << a00 << ' ' << a01 << ' ' << a02 << ']' << std::endl <<\n    s << '[' << a10 << ' ' << a11 << ' ' << a12 << ']' << std::endl <<\n    s << '[' << a20 << ' ' << a21 << ' ' << a22 << ']'\n  );\nby\n  return(\n    s << '[' << a00 << ' ' << a01 << ' ' << a02 << ']' << std::endl <<\n    '[' << a10 << ' ' << a11 << ' ' << a12 << ']' << std::endl <<\n    '[' << a20 << ' ' << a21 << ' ' << a22 << ']'\n  );\n\n- in neoHookeanANMForward.cpp and tribox3.cpp, add #include <algorithm> (for std::min)\n\n- add the preprocessor directive HAVE_STRUCT_TIMESPEC in the vegaport project.\n\n- add the include directory to freeglut in the VS project.\n\n- in manipulatedforceframe.cpp line 35, replace \ndist = min((mp - pproj).norm(), (mp - qproj).norm());\nby\ndist = std::min((mp - pproj).norm(), (mp - qproj).norm());\n\n** Regarding the port to Qt 5\n- in inverseDeformableDesigner.vcxproj.user, changes the occurrences of Qt 4.8.4 to your Qt version (e.g., eg. C:\\Libs\\Qt\\5.12.6\\msvc2017_64 )\nIn the inverseDeformableDesigner project, add include path to $(QTDIR)\\include\\QtWidgets;\n\n- in inversedeformabledesigner.h, replace #include <QtGui/QMainWindow> by #include <QtWidgets/QMainWindow>\n- in inversedeformabledesigner.h, line 15 / inversedeformabledesigner.cpp line 4: replace Qt::WFlags by Qt::WindowFlags\n- in inversedeformabledesigner.cpp add #include <QFileDialog>\n- in inversedesigner.h, #include <QDockWidget> and #include <QListWidget> and #include <QLabel>\n- in main.cpp line 1, replace #include <QtGui/QApplication> by #include <QtWidgets/QApplication>\n\n- replace the included libraries QtCore4.lib QtGui4.lib QtOpenGL4.lib QtXml4.lib  by Qt5Core.lib Qt5Gui.lib Qt5OpenGL.lib Qt5Xml.lib\nAlso add Qt5Widgets.lib.\n\n** Regarding the port to 64 bits:\n* in the inverseDeformableDesigner project, replace the library mkl_intel_c_dll.lib by mkl_intel_lp64.lib\n\n* You of course need to recompile the dependencies in 64 bits. This includes downloading a fresh QGLViewer (I used 2.7.2) :\n- in manipulatedforceframe.h add #include \"QGLViewer/manipulatedframe.h\"\n- in inversedesigner.h, add #include \"QGLViewer/manipulatedcameraframe.h\"\n- in inversedesigner.cpp, line 2725, 2739, 2753, 2758, 2759, 2760, replace updateGL by update\n* You need to use a 64bits phread. A precompiled library in x64 has been shipped with the code... but the dll are missing. I used the lib and dll from https://github.com/github-for-unity/sfw/tree/master/lib/pthreads-win32-2.9.1\nIn the VS project file, I removed pthreadVCE2.lib and pthreadVSE2.lib.\n\n* You need to recompile sparselm-1.3 (which can be downloaded) without support for choldmod (use HAVE_CHOLMOD = false in cmake) ; clapack can be found here http://www.netlib.org/clapack/\n\n* Levmar 3.6 can be downloaded and recompiled without hassle.\n\n** Regarding MKL:\n- set the MKL_INC_PATH to your MKL : C:\\Program Files (x86)\\IntelSWTools\\compilers_and_libraries_2019.5.281\\windows\\mkl\\include\nUse the MKL library path in additional library directories: C:\\Program Files (x86)\\IntelSWTools\\compilers_and_libraries_2019.5.281\\windows\\mkl\\lib\\intel64_win\n\n- If you do all of the above, it should compile and run without complaining. However, it will crash during a solve with pardiso (?? pardiso is not linked with...). If this happens, just put the mkl dlls : mkl_core.dll, mkl_def.dll, mkl_intel_thread.dll and mkl_sequential.dll in the executable directory (or just add the MKL binary path to your Path environment variable).\n\n** Regarding execution\nThere is no documentation. However, the interface is quite straigforward : just load an existing config file, and click and the back arrow to solve the proposed inverse problem.\nThe code manages to reproduce (at least) Fig. 2.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 67,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "VEGA / Intel Math Kernel Library / Qt / QGLViewer / pthread / clapack / Eigen / alglib / freeglut / glui / levmar / sparselm",
        "Project URL": "http://kunzhou.net/zjugaps/ANMdesign/",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Fabrication",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 5,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Xiang",
                "family": "Chen",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Changxi",
                "family": "Zheng",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Weiwei",
                "family": "Xu",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Kun",
                "family": "Zhou",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "An empirical rig for jaw animation",
        "DOI": "10.1145/3197517.3201382",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://s3-us-west-1.amazonaws.com/disneyresearch/wp-content/uploads/20180730115224/An-Empirical-Rig-for-Jaw-Animation-Paper.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Computer vision",
        "ACM 2": "Animation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 7,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "https://la.disneyresearch.com/publication/empirical-jaw-rig/",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Animation",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 1,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Gaspard",
                "family": "Zoss",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Disney Research"
                    }
                ]
            },
            {
                "given": "Derek",
                "family": "Bradley",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Disney Research"
                    }
                ]
            },
            {
                "given": "Pascal",
                "family": "B\u00e9rard",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Disney Research, ETH Zurich"
                    }
                ]
            },
            {
                "given": "Thabo",
                "family": "Beeler",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Disney Research"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "An extended partitioned method for conservative solid-fluid coupling",
        "DOI": "10.1145/3197517.3201345",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No but pseudo-code in the PDF",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://people.cs.clemson.edu/~vbz/papers/akbay_2018_XPM.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Physical simulation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 5,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Animation",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": 1,
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Muzaffer",
                "family": "Akbay",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "University of California"
                    }
                ]
            },
            {
                "given": "Nicholas",
                "family": "Nobles",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of California"
                    }
                ]
            },
            {
                "given": "Victor",
                "family": "Zordan",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Clemson University"
                    }
                ]
            },
            {
                "given": "Tamar",
                "family": "Shinar",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of California"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "An implicit frictional contact solver for adaptive cloth simulation",
        "DOI": "10.1145/3197517.3201308",
        "PDF availability (beside dl.acm)": "On an open archive arXiv or similar open archive, On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on github, gitlab or other code platform",
        "Main languages": "C/C++, Python",
        "How long did take for you to evaluate the code this paper (if any)?": 2,
        "Build info / instructions": "README, LICENSE or explicit license (e.g. in the readme / headers), AUTHORS or explicitly mentioned",
        "arXiv (page URL)": "https://hal.inria.fr/hal-01834705",
        "code URL": "https://github.com/lijieumn/argus-distribution",
        "code URL  2": "",
        "PDF URL": "http://www-users.cselabs.umn.edu/~lixx4611/files/clothNodalContactSolver.pdf",
        "License type": "Core not covered by a license, two libraries with GPL/Mozilla licenses and one with a specific license",
        "Build mechanism": "Makefile, CMakeLists",
        "Mandatory Software dependencies": "Open-source libraries",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 5,
        "Feedbacks [easy to configure/build (5=easy)]": 5,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "N/A",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 3,
        "Feedbacks [Interface user-friendly (5=easy)]": 5,
        "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Physical simulation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Linux",
        "General comments": "Easy to adapt: would require more comments in the code, but doable.",
        "Does the paper already have a reproducibility stamp": "Yes, http://www.replicabilitystamp.org",
        "Citation count (google scholar)": 6,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "BLAS/Boost/gfortran/LAPACK/libpng/libxmu/libxi/Eigen3/glfw3/glew",
        "Project URL": "http://www-users.cselabs.umn.edu/~lixx4611/contact_friction.html",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Animation",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 5,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 1,
        "Documentation score": 1,
        "Paper authors": [
            {
                "given": "Jie",
                "family": "Li",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "University of Minnesota"
                    }
                ]
            },
            {
                "given": "Gilles",
                "family": "Daviet",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Univ. Grenoble Alpes, Inria, France and Weta Digital, New Zealand"
                    }
                ]
            },
            {
                "given": "Rahul",
                "family": "Narain",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of Minnesota and Indian Institute of Technology Delhi, India"
                    }
                ]
            },
            {
                "given": "Florence",
                "family": "Bertails-Descoubes",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Univ. Grenoble Alpes, Inria, France"
                    }
                ]
            },
            {
                "given": "Matthew",
                "family": "Overby",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of Minnesota"
                    }
                ]
            },
            {
                "given": "George E.",
                "family": "Brown",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of Minnesota"
                    }
                ]
            },
            {
                "given": "Laurence",
                "family": "Boissieux",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Univ. Grenoble Alpes, Inria, France"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "An Interaction-Aware, Perceptual Model for Non-Linear Elastic Objects",
        "DOI": "10.1145/2897824.2925885",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution, Other (web, research gate, semantic scholar,...)",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://cfg.mit.edu/sites/cfg.mit.edu/files/An-interaction-Aware-Perceptual-Model-for-Non-Linear-Elastic-Objects-Paper_0.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Physical simulation",
        "ACM 2": "Perception",
        "ACM 3": "User studies",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 10,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "http://pdf.mmci.uni-saarland.de/projects/ComplianceModel/",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2016,
        "Misc. comment": "Neither code nor experimental data is available. The corresponding experiment involves 20 subject performing 78 trials on various 3d printed blocks.",
        "Software Type": "",
        "Topic": "Fabrication",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Michal",
                "family": "Piovar\u010di",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Saarland University, MMCI and Comenius University"
                    }
                ]
            },
            {
                "given": "David I. W.",
                "family": "Levin",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Disney Research"
                    }
                ]
            },
            {
                "given": "Jason",
                "family": "Rebello",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Harvard Unive"
                    }
                ]
            },
            {
                "given": "Desai",
                "family": "Chen",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "MIT CSAIL"
                    }
                ]
            },
            {
                "given": "Roman",
                "family": "\u010eurikovi\u010d",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Comenius University"
                    }
                ]
            },
            {
                "given": "Hanspeter",
                "family": "Pfister",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Harvard Unive"
                    }
                ]
            },
            {
                "given": "Wojciech",
                "family": "Matusik",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "MIT CSAIL"
                    }
                ]
            },
            {
                "given": "Piotr",
                "family": "Didyk",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Saarland University, MMCI and MPI Informatik"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Analytic spherical harmonic coefficients for polygonal area lights",
        "DOI": "10.1145/3197517.3201291",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "link to a googledrive",
        "Main languages": "C/C++",
        "How long did take for you to evaluate the code this paper (if any)?": 4,
        "Build info / instructions": "README",
        "arXiv (page URL)": "",
        "code URL": "https://drive.google.com/file/d/17qWANGV1cnKU39_Uz4RyBPPr64fl5yxO/view?usp=sharing",
        "code URL  2": "",
        "PDF URL": "https://cseweb.ucsd.edu/~viscomp/projects/ash/PaperData/ash.pdf",
        "License type": "unspecified",
        "Build mechanism": "Makefile",
        "Mandatory Software dependencies": "Open-source libraries",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 3,
        "Feedbacks [easy to configure/build (5=easy)]": 3,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": 3,
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 3,
        "Feedbacks [Interface user-friendly (5=easy)]": "N/A",
        "Documentation": "None",
        "Authors": "Academia",
        "ACM 1": "Rendering",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Linux",
        "General comments": "I had to download SOIL from a github+fix includes. Pb of redefinition of symbols between glext and glew. Finally managed to compile but at execution I got a shader problem: extension `GL_EXT_gpu_shader4' unsupported in vertex shader. I was therefore unable to reproduce any result.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 2,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "SOIL/lopengl/glew/glfw/freeimage/assimp/glut/glu",
        "Project URL": "https://cseweb.ucsd.edu/~viscomp/projects/ash/",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Rendering",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 1,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 1,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Jingwen",
                "family": "Wang",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "University of California"
                    }
                ]
            },
            {
                "given": "Ravi",
                "family": "Ramamoorthi",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of California"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Anatomically-Constrained Local Deformation Model for Monocular Face Capture",
        "DOI": "10.1145/2897824.2925882",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution, Other (web, research gate, semantic scholar,...)",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://studios.disneyresearch.com/wp-content/uploads/2019/03/Anatomically-Constrained-Local-Deformation-Model-for-Monocular-Face-Capture.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Motion capture",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 42,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2016,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Animation",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Chenglei",
                "family": "Wu",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "ETH Zurich"
                    }
                ]
            },
            {
                "given": "Derek",
                "family": "Bradley",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Disney Research"
                    }
                ]
            },
            {
                "given": "Markus",
                "family": "Gross",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Disney Research and ETH Zurich"
                    }
                ]
            },
            {
                "given": "Thabo",
                "family": "Beeler",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Disney Research"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Anderson acceleration for geometry optimization and physics simulation",
        "DOI": "10.1145/3197517.3201290",
        "PDF availability (beside dl.acm)": "On an open archive arXiv or similar open archive",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on github, gitlab or other code platform",
        "Main languages": "C/C++",
        "How long did take for you to evaluate the code this paper (if any)?": 2,
        "Build info / instructions": "README, LICENSE or explicit license (e.g. in the readme / headers), AUTHORS or explicitly mentioned",
        "arXiv (page URL)": "https://arxiv.org/abs/1805.05715",
        "code URL": "https://github.com/bldeng/AASolver",
        "code URL  2": "",
        "PDF URL": "https://arxiv.org/pdf/1805.05715.pdf",
        "License type": "BSD",
        "Build mechanism": "CMakeLists",
        "Mandatory Software dependencies": "Open-source libraries",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 5,
        "Feedbacks [easy to configure/build (5=easy)]": 5,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "N/A",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 5,
        "Feedbacks [Interface user-friendly (5=easy)]": 5,
        "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions, API documentation, Technical documentation (comments-doxygen...)",
        "Authors": "Academia",
        "ACM 1": "Nonconvex optimization",
        "ACM 2": "Animation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Windows",
        "General comments": "Trivial to make it work on Windows/VS2017, despite the original code was not tested on this platform. Not all 3d models provided, but enough to play with and be confident with results.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 19,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "Eigen / glut / libigl / OpenMesh",
        "Project URL": "",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Animation",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": true,
        "Feedbacks [could reproduce results (5=highly confident)]": 5,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 2,
        "Paper authors": [
            {
                "given": "Yue",
                "family": "Peng",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "University of Science and Technology of China"
                    }
                ]
            },
            {
                "given": "Bailin",
                "family": "Deng",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Cardiff University"
                    }
                ]
            },
            {
                "given": "Juyong",
                "family": "Zhang",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of Science and Technology of China"
                    }
                ]
            },
            {
                "given": "Fanyu",
                "family": "Geng",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of Science and Technology of China"
                    }
                ]
            },
            {
                "given": "Wenjie",
                "family": "Qin",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of Science and Technology of China"
                    }
                ]
            },
            {
                "given": "Ligang",
                "family": "Liu",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of Science and Technology of China"
                    }
                ]
            }
        ],
        "Altmetric score": 1,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=1&types=tttttttt",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=41617985"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Animating Deformable Objects using Sparse Spacetime Constraints",
        "DOI": "10.1145/2601097.2601156",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://graphics.tudelft.nl/~klaus/papers/sparseSpacetimeConstraints.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Geometric topology",
        "ACM 2": "Physical simulation",
        "ACM 3": "Shape modeling",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 35,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Animation",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 3,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Christian",
                "family": "Schulz",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Christoph",
                "family": "von Tycowicz",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Hans-Peter",
                "family": "Seidel",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Klaus",
                "family": "Hildebrandt",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Animating fluid sediment mixture in particle-laden flows",
        "DOI": "10.1145/3197517.3201309",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution, On the author(s) repository (dropbox, github, drive, iCloud)",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://mingg13.github.io/papers/2018_Fluid_Sediment.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Physical simulation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 17,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Animation",
        "Deep learning": "True",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 3,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Ming",
                "family": "Gao",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "University of Wisconsin, Madison"
                    }
                ]
            },
            {
                "given": "Andre",
                "family": "Pradhana",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of Pennsylvania"
                    }
                ]
            },
            {
                "given": "Xuchen",
                "family": "Han",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of California, Los Angeles"
                    }
                ]
            },
            {
                "given": "Qi",
                "family": "Guo",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of California, Los Angeles"
                    }
                ]
            },
            {
                "given": "Grant",
                "family": "Kot",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Phosphorus"
                    }
                ]
            },
            {
                "given": "Eftychios",
                "family": "Sifakis",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of Wisconsin, Madison"
                    }
                ]
            },
            {
                "given": "Chenfanfu",
                "family": "Jiang",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of Pennsylvania"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Artist-Directed Dynamics for 2D Animation",
        "DOI": "10.1145/2897824.2925884",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://www.cc.gatech.edu/~ybai30/artistic_dynamics/artistic_dynamics_sig16.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Physical simulation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 18,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "https://www.cc.gatech.edu/~ybai30/artistic_dynamics/artistic_dynamics.html",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2016,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Animation",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Yunfei",
                "family": "Bai",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Adobe Research and Georgia Institute of Technology"
                    }
                ]
            },
            {
                "given": "Danny M.",
                "family": "Kaufman",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Adobe Research"
                    }
                ]
            },
            {
                "given": "C. Karen",
                "family": "Liu",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Georgia Institute of Technology"
                    }
                ]
            },
            {
                "given": "Jovan",
                "family": "Popovi\u0107",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Adobe Research"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Augmented MPM for phase-change and varied materials",
        "DOI": "10.1145/2601097.2601176",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No but pseudo-code in the PDF",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://www.math.ucla.edu/~jteran/papers/SSJCTS14.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Animation",
        "ACM 2": "Simulation by animation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 93,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Animation",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": 1,
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Alexey",
                "family": "Stomakhin",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Craig",
                "family": "Schroeder",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Chenfanfu",
                "family": "Jiang",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Lawrence",
                "family": "Chai",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Joseph",
                "family": "Teran",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Andrew",
                "family": "Selle",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Autocomplete 3D sculpting",
        "DOI": "10.1145/3197517.3201297",
        "PDF availability (beside dl.acm)": "On an open archive arXiv or similar open archive, On the author(s) repository (dropbox, github, drive, iCloud)",
        "Is the code or software publicly available ?": "No but pseudo-code in the PDF",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "https://arxiv.org/abs/1703.10405",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://junxnui.github.io/research/sig18_autocomplete_3D_sculpting.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "User interface design",
        "ACM 2": "Shape modeling",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 7,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "https://1iyiwei.github.io/a3s-sig18/",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Geometry",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": 1,
        "Reviewer": 3,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Mengqi",
                "family": "Peng",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "University of Hong Kong"
                    }
                ]
            },
            {
                "given": "Jun",
                "family": "Xing",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of Hong Kong and USC Institute for Creative Technologies"
                    }
                ]
            },
            {
                "given": "Li-Yi",
                "family": "Wei",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of Hong Kong and Adobe Research"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "AutoHair: Fully Automatic Hair Modeling from A Single Image",
        "DOI": "10.1145/2897824.2925961",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://www.mlchai.com/resources/chai2016autohair.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Parametric curve and surface models",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 49,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "http://kunzhou.net/zjugaps/autohair/",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2016,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Geometry",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Menglei",
                "family": "Chai",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Zhejiang University"
                    }
                ]
            },
            {
                "given": "Tianjia",
                "family": "Shao",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Zhejiang University"
                    }
                ]
            },
            {
                "given": "Hongzhi",
                "family": "Wu",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Zhejiang University"
                    }
                ]
            },
            {
                "given": "Yanlin",
                "family": "Weng",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Zhejiang University"
                    }
                ]
            },
            {
                "given": "Kun",
                "family": "Zhou",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Zhejiang University"
                    }
                ]
            }
        ],
        "Altmetric score": 1,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=1&types=tttttttt",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=54950689"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Automatic Editing of Footage from Multiple Social Cameras",
        "DOI": "10.1145/2601097.2601198",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://www.cs.cmu.edu/~hyunsoop/SocialCamera.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Scene understanding",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 102,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "http://graphics.cs.cmu.edu/projects/social-cameras/",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Image",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Ido",
                "family": "Arev",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Hyun Soo",
                "family": "Park",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Yaser",
                "family": "Sheikh",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Jessica",
                "family": "Hodgins",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Ariel",
                "family": "Shamir",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Automatic Triage for a Photo Series",
        "DOI": "10.1145/2897824.2925908",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on the authors website or project page (zip file, direct download...), on github, gitlab or other code platform",
        "Main languages": "Other",
        "How long did take for you to evaluate the code this paper (if any)?": 10,
        "Build info / instructions": "None",
        "arXiv (page URL)": "",
        "code URL": "https://phototriage.cs.princeton.edu/data/vggsms.zip",
        "code URL  2": "https://phototriage.cs.princeton.edu/data/alexsms.zip",
        "PDF URL": "https://juew.org/publication/sig16-triage.pdf",
        "License type": "unspecified",
        "Build mechanism": "Not applicable (python, Matlab..)",
        "Mandatory Software dependencies": "Open-source libraries",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 5,
        "Feedbacks [easy to configure/build (5=easy)]": 5,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": 1,
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "Yes",
        "Available data (provided or url / ref)": "Training data",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 1,
        "Feedbacks [Interface user-friendly (5=easy)]": 5,
        "Documentation": "None",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Computational photography",
        "ACM 2": "Image processing",
        "ACM 3": "Neural networks",
        "ACM 4": "Content ranking",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Linux",
        "General comments": "I managed to install all the dependencies and prepare the data using the provided scripts.\nI could also call the train.py script (requires 30GB of RAM), unfortunately after several hours of training, the script ended but didn't generate the file weights.hdf5. As such, I couldn't evaluate the network.\nNote that two models are provided by the authors online (https://phototriage.cs.princeton.edu/download.html), but there is no indication on how to use them in practice.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 25,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "caffe",
        "Project URL": "https://gfx.cs.princeton.edu/pubs/Chang_2016_ATF/index.php",
        "Did I manage to perform a complete test (deps/build)?": "No due to technical issue",
        "Year": 2016,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Image",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 1,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 4,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Huiwen",
                "family": "Chang",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Princeton University"
                    }
                ]
            },
            {
                "given": "Fisher",
                "family": "Yu",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Princeton University"
                    }
                ]
            },
            {
                "given": "Jue",
                "family": "Wang",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Adobe Research"
                    }
                ]
            },
            {
                "given": "Douglas",
                "family": "Ashley",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Princeton University"
                    }
                ]
            },
            {
                "given": "Adam",
                "family": "Finkelstein",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Princeton University"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Automatically Scheduling Halide Image Processing Pipelines",
        "DOI": "10.1145/2897824.2925952",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on github, gitlab or other code platform",
        "Main languages": "C/C++",
        "How long did take for you to evaluate the code this paper (if any)?": 2,
        "Build info / instructions": "README",
        "arXiv (page URL)": "",
        "code URL": "https://github.com/halide/Halide",
        "code URL  2": "",
        "PDF URL": "http://graphics.cs.cmu.edu/projects/halidesched/mullapudi16_halidesched.pdf",
        "License type": "MIT",
        "Build mechanism": "Makefile, CMakeLists",
        "Mandatory Software dependencies": "Open-source libraries",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 5,
        "Feedbacks [easy to configure/build (5=easy)]": 5,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "N/A",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 5,
        "Feedbacks [Interface user-friendly (5=easy)]": 5,
        "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions, API documentation, Technical documentation (comments-doxygen...)",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Graphics systems and interfaces",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Linux",
        "General comments": "I tested the newest version of Halide: this does not correspond to the paper. The project webpage states: \"NOTICE: The algorithm described in this paper has been superceded by the techniques described in the SIGGRAPH 2019 autoscheduler paper. The autoscheduling functionality in the master Halide repo now uses the algorithm from the 2019 paper\". And there is no explanation on how to get the code of this particular submission, nor how to reproduce any of the examples.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 75,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "llvm",
        "Project URL": "http://graphics.cs.cmu.edu/projects/halidesched/",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2016,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Image",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": true,
        "Feedbacks [could reproduce results (5=highly confident)]": 2,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 1,
        "Documentation score": 2,
        "Paper authors": [
            {
                "given": "Ravi Teja",
                "family": "Mullapudi",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Carnegie Mellon University"
                    }
                ]
            },
            {
                "given": "Andrew",
                "family": "Adams",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Google"
                    }
                ]
            },
            {
                "given": "Dillon",
                "family": "Sharlet",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Google"
                    }
                ]
            },
            {
                "given": "Jonathan",
                "family": "Ragan-Kelley",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Stanford University"
                    }
                ]
            },
            {
                "given": "Kayvon",
                "family": "Fatahalian",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Carnegie Mellon University"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "AverageExplorer: interactive exploration and alignment of visual data collections",
        "DOI": "10.1145/2601097.2601145",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://people.csail.mit.edu/junyanz/projects/averageExplorer/averageExplorer.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Computer Graphics",
        "ACM 2": "Graphics recognition and interpretation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 43,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "http://people.csail.mit.edu/junyanz/projects/averageExplorer/",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Image",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 1,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Jun-Yan",
                "family": "Zhu",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Yong Jae",
                "family": "Lee",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Alexei A.",
                "family": "Efros",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Bayesian online regression for adaptive direct illumination sampling",
        "DOI": "10.1145/3197517.3201340",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "Implemented in a commercial rendering software",
        "Main languages": "Cannot answer",
        "How long did take for you to evaluate the code this paper (if any)?": 2,
        "Build info / instructions": "Cannot answer",
        "arXiv (page URL)": "",
        "code URL": "https://corona-renderer.com/",
        "code URL  2": "",
        "PDF URL": "https://cgg.mff.cuni.cz/~jaroslav/papers/2018-bayesianlighting/2018-vevoda-bayesianlighting-paper.pdf",
        "License type": "Cannot answer",
        "Build mechanism": "part of a commercial software",
        "Mandatory Software dependencies": "None",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "N/A",
        "Feedbacks [easy to configure/build (5=easy)]": "N/A",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "N/A",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "Cannot answer",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "N/A",
        "Feedbacks [Interface user-friendly (5=easy)]": "N/A",
        "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Machine learning",
        "ACM 2": "Visibility",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Linux",
        "General comments": "Commercial renderer, not tested.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 10,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "https://cgg.mff.cuni.cz/~jaroslav/papers/2018-bayesianlighting/index.htm",
        "Did I manage to perform a complete test (deps/build)?": "Cannot answer",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "Binary",
        "Topic": "Rendering",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "N/A",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 1,
        "Documentation score": 1,
        "Paper authors": [
            {
                "given": "Petr",
                "family": "V\u00e9voda",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Charles University"
                    }
                ]
            },
            {
                "given": "Ivo",
                "family": "Kondapaneni",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Charles University, Prague"
                    }
                ]
            },
            {
                "given": "Jaroslav",
                "family": "K\u0159iv\u00e1nek",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Charles University"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Beyond Developable: Computational Design and Fabrication with Auxetic Materials",
        "DOI": "10.1145/2897824.2925944",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No but pseudo-code in the PDF",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://lgg.epfl.ch/publications/2016/BeyondDevelopable/paper.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia, No affiliation",
        "ACM 1": "Shape modeling",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 65,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "https://lgg.epfl.ch/publications/2016/BeyondDevelopable/index.php",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2016,
        "Misc. comment": "The pseudo-code in appendix is actually usable C++ code. However, it implements a fraction of the paper (the non penetration constraint in the optimizer, not the entire simulation).",
        "Software Type": "",
        "Topic": "Fabrication",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": 1,
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Mina",
                "family": "Konakovi\u0107",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "EPFL"
                    }
                ]
            },
            {
                "given": "Keenan",
                "family": "Crane",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "CMU"
                    }
                ]
            },
            {
                "given": "Bailin",
                "family": "Deng",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of Hull"
                    }
                ]
            },
            {
                "given": "Sofien",
                "family": "Bouaziz",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "EPFL"
                    }
                ]
            },
            {
                "given": "Daniel",
                "family": "Piker",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Mark",
                "family": "Pauly",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "EPFL"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Bijective Maps from Simplicial Foliations",
        "DOI": "10.1145/2897824.2925890",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No but pseudo-code in the PDF",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://www.graphics.rwth-aachen.de/media/papers/Campen2016_SimplicialFoliations_9vLSbPA.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Mesh geometry models",
        "ACM 2": "Volumetric models",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 17,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2016,
        "Misc. comment": "The algorithm seems rather easy to implement (a couple of self-contained lines) but only produce the direction field. But hidden behind this simplicity are less trivial tricks (e.g., the paper mentions that the choice of the next free simplex is guided by a harmonic field, which requires solving a linear system ; the field is further processed by a Laplacian smoothing operator...), which is why I didn't rate the algorithm higher in simplicity.",
        "Software Type": "",
        "Topic": "Geometry",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": 3,
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Marcel",
                "family": "Campen",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "New York University"
                    }
                ]
            },
            {
                "given": "Cl\u00e1udio T.",
                "family": "Silva",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "New York University"
                    }
                ]
            },
            {
                "given": "Denis",
                "family": "Zorin",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "New York University"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Bilateral Texture Filtering",
        "DOI": "10.1145/2601097.2601188",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No but pseudo-code in the PDF",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://www.cs.umsl.edu/~kang/Papers/kang_siggraph14.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Computer vision",
        "ACM 2": "Texturing",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 127,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Image",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": 4,
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Hojin",
                "family": "Cho",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Hyunjoon",
                "family": "Lee",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Henry",
                "family": "Kang",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Seungyong",
                "family": "Lee",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 3,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=3&types=aaaaaaaa",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=35317537"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Binary continuous image decomposition for multi-view display",
        "DOI": "10.1145/2897824.2925949",
        "PDF availability (beside dl.acm)": "On an open archive arXiv or similar open archive",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on the authors website or project page (zip file, direct download...)",
        "Main languages": "C/C++",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "None",
        "arXiv (page URL)": "",
        "code URL": "http://navi.cs.kumamoto-u.ac.jp/~koutaki/projects/BCID/Supplementaly.zip",
        "code URL  2": "http://navi.cs.kumamoto-u.ac.jp/~koutaki/projects/BCID/winbin.zip",
        "PDF URL": "https://dl.acm.org/doi/pdf/10.1145/2897824.2925949?download=true",
        "License type": "unspecified",
        "Build mechanism": "None",
        "Mandatory Software dependencies": "Open-source libraries",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 5,
        "Feedbacks [easy to configure/build (5=easy)]": 5,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": 5,
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 5,
        "Feedbacks [Interface user-friendly (5=easy)]": "N/A",
        "Documentation": "API documentation, Technical documentation (comments-doxygen...)",
        "Authors": "Academia",
        "ACM 1": "Image processing",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Windows",
        "General comments": "Although no makefiles nor build instructions are given, it is quite straightforward to compile -- in my case creating a Visual Studio 2017 solution, putting all files, and setting include an library paths for FFTW and OpenCV. Requires OpenCV libraries are opencv_imgproc412.lib;opencv_highgui412.lib;opencv_imgcodecs412.lib;opencv_core412.lib.\nTo prevent a (known) opencv issue relating to 'ACCESS_MASK' being an ambiguous symbol in winnt.h, I had to #include <Windows.h> at the very first line of main.cpp.\nTo activate OpenMP, in addition to addin openmp support in the visual studio configurations, you need to specify the preprocessor definition _OPENMP.\nIn addition to the code, a compiled version (for Windows) is also provided. Both the code and the provided executable produce the same result on the given examples (those of Fig 8 and 6), and they correspond to the results shown in the paper. The archive containing the compiled files also contain batch files which are useful to see which parameters were used to produce the results (number of bits, iterations, etc.).\nAdditional instructions on the hardware side are provided in a pdf document in the same folder as the code in supplementary materials.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 8,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "fftw / opencv",
        "Project URL": "http://navi.cs.kumamoto-u.ac.jp/~koutaki/projects/BCID/",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2016,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Virtual Reality",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": true,
        "Feedbacks [could reproduce results (5=highly confident)]": 5,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 1,
        "Paper authors": [
            {
                "given": "Gou",
                "family": "Koutaki",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Kumaamoto University"
                    }
                ]
            }
        ],
        "Altmetric score": 11.3,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=12&types=tttttttt",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=9613333"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Blended cured quasi-newton for distortion optimization",
        "DOI": "10.1145/3197517.3201359",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on github, gitlab or other code platform",
        "Main languages": "C/C++, Matlab / Mathematica / ..",
        "How long did take for you to evaluate the code this paper (if any)?": 4,
        "Build info / instructions": "README, LICENSE or explicit license (e.g. in the readme / headers)",
        "arXiv (page URL)": "",
        "code URL": "https://github.com/mike323zyf/BCQN",
        "code URL  2": "",
        "PDF URL": "http://dannykaufman.io/projects/BCQN/BCQN_files/paper.pdf",
        "License type": "MIT",
        "Build mechanism": "Other script, Not applicable (python, Matlab..)",
        "Mandatory Software dependencies": "Open-source libraries, Paywall Closed source software or libraries",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 5,
        "Feedbacks [easy to configure/build (5=easy)]": 5,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": 4,
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 5,
        "Feedbacks [Interface user-friendly (5=easy)]": 3,
        "Documentation": "None",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Continuous optimization",
        "ACM 2": "Shape modeling",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": 1,
        "OS of the test": "Windows",
        "General comments": "LibIGL has changed in the meantime (last commit at the time of the test: c645aac0c5852fad6fabe8c192fdc8675e607263). To compile, one has to edit some #include (removing #include igl/components.h in tutte_embedding_mex.cpp and adding #include igl/unique_rows.h in FastLsBuildUtils.cpp). To make it work on Windows with Visual Studio (2017), one has to edit the compileAllMex.m to add '-DWIN32' and '-D_USE_MATH_DEFINES' to the mex options.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 17,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "Matlab / libIGL",
        "Project URL": "http://www.cs.columbia.edu/~kaufman/BCQN/BCQN.html",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Geometry",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 5,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Yufeng",
                "family": "Zhu",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "University of British Columbia & Adobe Research"
                    }
                ]
            },
            {
                "given": "Robert",
                "family": "Bridson",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Autodesk & University of British Columbia"
                    }
                ]
            },
            {
                "given": "Danny M.",
                "family": "Kaufman",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Adobe Research"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Blending Liquids",
        "DOI": "10.1145/2601097.2601126",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No but pseudo-code in the PDF",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://www.cc.gatech.edu/~turk/my_papers/blending_liquids.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Animation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 33,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Animation",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": 1,
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Karthik",
                "family": "Raveendran",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Chris",
                "family": "Wojtan",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Nils",
                "family": "Thuerey",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Greg",
                "family": "Turk",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Body Talk: Crowdshaping Realistic 3D Avatars with Words",
        "DOI": "10.1145/2897824.2925981",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution, Other (web, research gate, semantic scholar,...)",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://files.is.tue.mpg.de/black/papers/BodyTalkSIGGRAPH2016.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Perception",
        "ACM 2": "Shape modeling",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 28,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2016,
        "Misc. comment": "Neither code nor experimental data were made available. In this particular case, the paper would be very hard to reproduce (requiring to re-perform an experiment involving 256 participants with MTurk for 25 min each).",
        "Software Type": "",
        "Topic": "Geometry",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": true,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Stephan",
                "family": "Streuber",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Max Planck Institute for Intelligent Systems, T\u00fcbingen, Germany"
                    }
                ]
            },
            {
                "given": "M. Alejandra",
                "family": "Quiros-Ramirez",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Max Planck Institute for Intelligent Systems, T\u00fcbingen, Germany"
                    }
                ]
            },
            {
                "given": "Matthew Q.",
                "family": "Hill",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of Texas at Dallas"
                    }
                ]
            },
            {
                "given": "Carina A.",
                "family": "Hahn",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of Texas at Dallas"
                    }
                ]
            },
            {
                "given": "Silvia",
                "family": "Zuffi",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "ITC-CNR, Milan, Italy"
                    }
                ]
            },
            {
                "given": "Alice",
                "family": "O'Toole",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of Texas at Dallas"
                    }
                ]
            },
            {
                "given": "Michael J.",
                "family": "Black",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Max Planck Institute for Intelligent Systems, T\u00fcbingen, Germany"
                    }
                ]
            }
        ],
        "Altmetric score": 230,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=230&types=mmmmmmmm",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=10061050"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Bounded distortion harmonic shape interpolation",
        "DOI": "10.1145/2897824.2925926",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on the authors website or project page (zip file, direct download...)",
        "Main languages": "Matlab / Mathematica / ..",
        "How long did take for you to evaluate the code this paper (if any)?": 10,
        "Build info / instructions": "README",
        "arXiv (page URL)": "",
        "code URL": "http://people.mpi-inf.mpg.de/~chen/bdh.zip",
        "code URL  2": "",
        "PDF URL": "https://people.mpi-inf.mpg.de/~chen/papers/bdhi.pdf",
        "License type": "unspecified",
        "Build mechanism": "IDE Project (VS,..), Not applicable (python, Matlab..)",
        "Mandatory Software dependencies": "Open-source libraries, Closed source (e.g. commercial) software or libraries free for research purposes",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 5,
        "Feedbacks [easy to configure/build (5=easy)]": 2,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": 2,
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 5,
        "Feedbacks [Interface user-friendly (5=easy)]": 5,
        "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions",
        "Authors": "Academia",
        "ACM 1": "Animation",
        "ACM 2": "Image manipulation",
        "ACM 3": "Shape analysis",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": 1,
        "OS of the test": "Windows",
        "General comments": "Launching the code using the compiled .exe gui is easy and runs smoothly. Just add mosek to matlab's path using\naddpath('C:\\Program Files\\Mosek\\9.1\\toolbox\\R2015a')\n\nHowever, if one want to recompile the gui, it is more involved.\nSome include paths are hardcoded, and you need to add the include path for eigen, freeglut, anttweakbar, and matlab includes (D:\\MatlabR2018a\\extern\\include) to the Visual Studio project.\nI had to recompile freeglut in multithread instead of multithread dll (in the code generation settings) otherwise I had linker errors.\n\nThen, due to changes in the support of complex variables in Matlab 2018a, you need to change a couple of functions:\n- in matlab_utils.h line 335, replace \n    v.real() = Eigen::Map<const Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::ColMajor> >(mxGetPr(m), dim[0], dim[1]);\n\n    if (mxIsComplex(m))\n        v.imag() = Eigen::Map<const Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::ColMajor> >(mxGetPi(m), dim[0], dim[1]);\n    else\n        v.imag().setZero();\nby\n\tif (mxIsComplex(m)) {\n\t\t//v.imag() = Eigen::Map<const Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::ColMajor> >(&((*pc).imag), dim[0], dim[1]);\n\t\tfor (int i = 0; i < dim[0] * dim[1]; i++) {\n\t\t\tv.data()[i].real(pc[i].real);\n\t\t\tv.data()[i].imag(pc[i].imag);\n\t\t}\n\t} \n\telse {\n\t\tfor (int i = 0; i < dim[0] * dim[1]; i++) {\n\t\t\tv.data()[i].real(pc[i].real);\n\t\t}\n\t\tv.imag().setZero();\n\t}\n\t\n- in matlab_utils.h line 353\n    MapMat(mxGetPr(m), dim[0], dim[1]) = vr;\n    MapMat(mxGetPi(m), dim[0], dim[1]) = vi;\n by\n mxComplexDouble *pc = mxGetComplexDoubles(m);\n\tfor (int i = 0; i < dim[0] * dim[1]; i++) {\n\t\tpc[i].real = vr[i];\n\t\tpc[i].imag = vi[i];\n\t}\n\t\nUltimately, the code runs and produce the expected results.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 17,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "cvx/mosek/glsl/opengl",
        "Project URL": "",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2016,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Geometry",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 5,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 1,
        "Paper authors": [
            {
                "given": "Edward",
                "family": "Chien",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Bar Ilan University, Israel"
                    }
                ]
            },
            {
                "given": "Renjie",
                "family": "Chen",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Max Planck Institute for Informatics, Germany"
                    }
                ]
            },
            {
                "given": "Ofir",
                "family": "Weber",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Bar Ilan University, Israel"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Box cutter: atlas refinement for efficient packing via void elimination",
        "DOI": "10.1145/3197517.3201328",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on the authors website or project page (zip file, direct download...)",
        "Main languages": "Cannot answer",
        "How long did take for you to evaluate the code this paper (if any)?": 3,
        "Build info / instructions": "README, LICENSE or explicit license (e.g. in the readme / headers)",
        "arXiv (page URL)": "",
        "code URL": "http://www.cs.ubc.ca/labs/imager/tr/2018/BoxCutter/BoxCutter_Executable.zip",
        "code URL  2": "",
        "PDF URL": "http://www.cs.ubc.ca/labs/imager/tr/2018/BoxCutter/Limper2018_BoxCutter.pdf",
        "License type": "MIT",
        "Build mechanism": "None",
        "Mandatory Software dependencies": "None",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "N/A",
        "Feedbacks [easy to configure/build (5=easy)]": "N/A",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "N/A",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "N/A",
        "Feedbacks [Interface user-friendly (5=easy)]": 5,
        "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions",
        "Authors": "Academia",
        "ACM 1": "Texturing",
        "ACM 2": "Mesh geometry models",
        "ACM 3": "Parametric curve and surface models",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Linux",
        "General comments": "can produce paper-like result on the girl data.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 2,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "http://www.cs.ubc.ca/labs/imager/tr/2018/BoxCutter/",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "Binary",
        "Topic": "Geometry",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 5,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 1,
        "Documentation score": 1,
        "Paper authors": [
            {
                "given": "Max",
                "family": "Limper",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Fraunhofer ICD / TU Darmstadt, Germany"
                    }
                ]
            },
            {
                "given": "Nicholas",
                "family": "Vining",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of British Columbia, Canada"
                    }
                ]
            },
            {
                "given": "ALLA",
                "family": "SHEFFER",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of British Columbia, Canada"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Boxelization: Folding 3D Objects into Boxes",
        "DOI": "10.1145/2601097.2601173",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution, Other (web, research gate, semantic scholar,...)",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://pdfs.semanticscholar.org/0048/c96e65f80803f587b5298e32b59e669847fb.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Randomness, geometry and discrete structures",
        "ACM 2": "Shape modeling",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 59,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "https://la.disneyresearch.com/publication/boxelization-folding-3d-objects-into-boxes-2/",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Geometry",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Yahan",
                "family": "Zhou",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Shinjiro",
                "family": "Sueda",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Wojciech",
                "family": "Matusik",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Ariel",
                "family": "Shamir",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 4.85,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=5&types=aaattttt",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=2585258"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Breathing Life into Shape: Capturing, Modeling and Animating 3D Human Breathing",
        "DOI": "10.1145/2601097.2601225",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution, Other (web, research gate, semantic scholar,...)",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://users.ics.forth.gr/~aggeliki/assets/pdf/siggraph14_breathing.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Animation",
        "ACM 2": "Simulation by animation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 39,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "http://users.ics.forth.gr/~aggeliki/papers.html",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Animation",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": true,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 4,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Aggeliki",
                "family": "Tsoli",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Naureen",
                "family": "Mahmood",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Michael J.",
                "family": "Black",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 3,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=3&types=aaaaaaaa",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=42969093"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Bridging the Gap: Automated Steady Scaffoldings for 3D Printing",
        "DOI": "10.1145/2601097.2601153",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://www.loria.fr/~jdumas/files/papers/scaffoldings/bridging-the-gap.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Computational geometry",
        "ACM 2": "Shape modeling",
        "ACM 3": "Graphics recognition and interpretation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 122,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Fabrication",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 4,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "J\u00e9r\u00e9mie",
                "family": "Dumas",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Jean",
                "family": "Hergel",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Sylvain",
                "family": "Lefebvre",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 6,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=6&types=aaaaaaaa",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=35268290"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Build-to-Last: Strength to Weight 3D Printed Objects",
        "DOI": "10.1145/2601097.2601168",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://homes.cs.washington.edu/~haisen/BuildtoLast/3DP_SIG2014.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Parametric curve and surface models",
        "ACM 2": "Volumetric models",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 224,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "https://homes.cs.washington.edu/~haisen/BuildtoLast/index.html",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Fabrication",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 3,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Lin",
                "family": "Lu",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Baoquan",
                "family": "Chen",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Andrei",
                "family": "Sharf",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Haisen",
                "family": "Zhao",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Yuan",
                "family": "Wei",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Qingnan",
                "family": "Fan",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Xuelin",
                "family": "Chen",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Yann",
                "family": "Savoye",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Changhe",
                "family": "Tu",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Daniel",
                "family": "Cohen-Or",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 6,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=6&types=aaaaaaaa",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=35256644"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Capturing and Stylizing Hair for 3D Fabrication",
        "DOI": "10.1145/2601097.2601133",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://studios.disneyresearch.com/wp-content/uploads/2019/03/Capturing-and-Stylizing-Hair-for-3D-Fabrication.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Image and video acquisition",
        "ACM 2": "Document scanning",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 41,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "https://studios.disneyresearch.com/2014/07/27/capturing-and-stylizing-hair-for-3d-fabrication/",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Fabrication",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 3,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Jose I.",
                "family": "Echevarria",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Derek",
                "family": "Bradley",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Diego",
                "family": "Gutierrez",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Thabo",
                "family": "Beeler",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 10,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=10&types=mmmmmmmm",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=2582840"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Cascaded Displays: Spatiotemporal Superresolution using Offset Pixel Layers",
        "DOI": "10.1145/2601097.2601120",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://research.nvidia.com/sites/default/files/pubs/2014-08_Cascaded-Displays-Spatiotemporal/cascaded_displays.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Private Companies",
        "ACM 1": "Rendering",
        "ACM 2": "Image manipulation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 43,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "https://research.nvidia.com/publication/cascaded-displays-spatiotemporal-superresolution-using-offset-pixel-layers",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Virtual Reality",
        "Deep learning": "True",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 4,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Felix",
                "family": "Heide",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Douglas",
                "family": "Lanman",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Dikpal",
                "family": "Reddy",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Jan",
                "family": "Kautz",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Kari",
                "family": "Pulli",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "David",
                "family": "Luebke",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Cinema 3D: Large Scale Automultiscopic Display",
        "DOI": "10.1145/2897824.2925921",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution, Other (web, research gate, semantic scholar,...)",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://www.wisdom.weizmann.ac.il/~netefrat/cinema3D/files/paperMain_low.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Displays and imagers",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 14,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "http://www.wisdom.weizmann.ac.il/~netefrat/cinema3D/",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2016,
        "Misc. comment": "There is no code as this paper is about hardware. However, there is a detailed description of hardware in the supplemental material, including .stl files, and the hardware seems simple enough to be reproducible (2 parallax barriers or lenticular sheets).",
        "Software Type": "",
        "Topic": "Virtual Reality",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": true,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Netalee",
                "family": "Efrat",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Weizmann Institute"
                    }
                ]
            },
            {
                "given": "Piotr",
                "family": "Didyk",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Saarland University"
                    }
                ]
            },
            {
                "given": "Mike",
                "family": "Foshey",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "MIT CSAIL"
                    }
                ]
            },
            {
                "given": "Wojciech",
                "family": "Matusik",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "MIT CSAIL"
                    }
                ]
            },
            {
                "given": "Anat",
                "family": "Levin",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Weizmann Institute"
                    }
                ]
            }
        ],
        "Altmetric score": 38.866,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=39&types=mmmmbbbr",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=10019420"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Codimensional Surface Tension Flow on Simplicial Complices",
        "DOI": "10.1145/2601097.2601201",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No but pseudo-code in the PDF",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 2,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://www.dartmouth.edu/~boolzhu/papers/codimensional_surface_tension.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Animation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 33,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "https://www.dartmouth.edu/~boolzhu/projects/codimension.htm",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Animation",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": 1,
        "Reviewer": 3,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Bo",
                "family": "Zhu",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Ed",
                "family": "Quigley",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Matthew",
                "family": "Cong",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Justin",
                "family": "Solomon",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Ronald",
                "family": "Fedkiw",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "CofiFab: Coarse-to-Fine Fabrication of Large 3D Objects",
        "DOI": "10.1145/2897824.2925876",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://songpenghit.github.io/Publication/projects/2016-SIGGRAPH-CofiFab/download/paper.highres.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Shape modeling",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 63,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "https://songpenghit.github.io/Publication/projects/2016-SIGGRAPH-CofiFab/index.html",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2016,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Fabrication",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Peng",
                "family": "Song",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "University of Science and Technology of China"
                    }
                ]
            },
            {
                "given": "Bailin",
                "family": "Deng",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of Hull"
                    }
                ]
            },
            {
                "given": "Ziqi",
                "family": "Wang",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of Science and Technology of China"
                    }
                ]
            },
            {
                "given": "Zhichao",
                "family": "Dong",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of Science and Technology of China"
                    }
                ]
            },
            {
                "given": "Wei",
                "family": "Li",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of Science and Technology of China"
                    }
                ]
            },
            {
                "given": "Chi-Wing",
                "family": "Fu",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "The Chinese University of Hong Kong"
                    }
                ]
            },
            {
                "given": "Ligang",
                "family": "Liu",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of Science and Technology of China"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Color Map Optimization for 3D Reconstruction with Consumer Depth Cameras",
        "DOI": "10.1145/2601097.2601134",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://vladlen.info/papers/color-mapping.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Computational geometry",
        "ACM 2": "Shape modeling",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 137,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "http://vladlen.info/publications/color-map-optimization-for-3d-reconstruction-with-consumer-depth-cameras/",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Geometry",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Qian-Yi",
                "family": "Zhou",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Vladlen",
                "family": "Koltun",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Compact Precomputed Voxelized Shadows",
        "DOI": "10.1145/2601097.2601221",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on the authors website or project page (zip file, direct download...)",
        "Main languages": "C/C++",
        "How long did take for you to evaluate the code this paper (if any)?": 10,
        "Build info / instructions": "README",
        "arXiv (page URL)": "",
        "code URL": "http://www.cse.chalmers.se/~d00sint/CPVS/CPVSStandalone.zip",
        "code URL  2": "",
        "PDF URL": "http://www.cse.chalmers.se/~d00sint/CompressedShadowsPreprint.pdf",
        "License type": "unspecified",
        "Build mechanism": "IDE Project (VS,..)",
        "Mandatory Software dependencies": "Open-source libraries, Closed source (e.g. commercial) software or libraries free for research purposes",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 3,
        "Feedbacks [easy to configure/build (5=easy)]": 3,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": 2,
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 5,
        "Feedbacks [Interface user-friendly (5=easy)]": 5,
        "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions, API documentation, Technical documentation (comments-doxygen...)",
        "Authors": "Academia",
        "ACM 1": "Texturing",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Windows",
        "General comments": "I compile the code with VS2017 and Cuda 10.2, which is quite far from the original project settings (VS2014 6.5). Step by step:\n- You need to edit the CPVS2014.vcxproj, replacing at line 55 <Import Project=\"$(VCTargetsPath)\\BuildCustomizations\\CUDA 6.5.props\" /> by the place where you have your Cuda 10 property sheets (in my case \"C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v10.2\\extras\\visual_studio_integration\\MSBuildExtensions\\CUDA 10.2.props\"). And similarly in line 185 for the Cuda targets (same folder). And then open the project with visual studio, update/retarget the project file.\n- You need to use a fresh wxWidget, since the one provided is precompiled for VS2014. Go to https://www.wxwidgets.org/downloads/ and download the precompiled binaries for windows (headers and release DLLs). Replace the original wxWidget folder with these downloads (same fold hierarchy).\n- add wxMSVC_VERSION=14x as a preprocessor directive for the projects CHAGApp and CPVS2014 and remove wxMSVC_VERSION_AUTO\n- replace compute_20,sm_20 in Cuda C/C++->Device->Code Generation to compute_30,sm_30 in the project CPVS2014\n- add #include <intrin.h> in CompressedShadow.cpp\n- Change WINVER=0x0400 to WINVER=0x0500 in the preprocessor directives of CHAGApp and CPVS2014\n- Change the library path ../wxWidgets/lib/vc120_x64_dll  to ../wxWidgets/lib/vc14x_x64_dll\n- Change the libraries being linked from wxmsw30u_core.lib and wxbase30u.lib to wxmsw31u_core.lib and wxbase31u.lib\n- In line 115 of GLSLProgramManager.cpp, replace return shader; by return \"#version 420 compatibility\\n\"+shader;  This is quite a hack, but works in my case. Remove *all* mentions of #version 400 or 420 in all shader files (Application.glsl, CPVSBuilder.glsl, Scene.glsl) since you are now only allowed a single call to \"#version\" in the first line of the shader.\n- Compile the code, and put the .exe and the wxWidgets dll in the CPVS2014 folder (where there is a subfolder \"media\").\nYou can now launch the .exe and play with it. There is a very nice Readme.pdf that gives step by step instructions to compress shadow maps. I lowered the reproducibility score for the main reason that the proposed implementation differs from what is explained in the paper (the Readme.pdf explains the differences), and for the secondary reason that the scene files used in the paper are not provided, so it is difficult to appreciate the differences between the new and original implementation in term of results. However, the code works well and shows crisp shadows.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 31,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "cuda / embree / glew / glut / wxWidgets",
        "Project URL": "",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Rendering",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 3,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 2,
        "Paper authors": [
            {
                "given": "Erik",
                "family": "Sintorn",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Viktor",
                "family": "K\u00e4mpe",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Ola",
                "family": "Olsson",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Ulf",
                "family": "Assarsson",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 1,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=1&types=tttttttt",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=2598119"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Compressive Epsilon Photography for Post-Capture Control in Digital Imaging",
        "DOI": "10.1145/2601097.2601207",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://www.ece.rice.edu/~av21/Documents/2014/CompressiveEpsilonPhotography.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia, Private Companies",
        "ACM 1": "3D imaging",
        "ACM 2": "Image representations",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 11,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "https://www.ece.rice.edu/~sst5/CompEpPhoto.html",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Image",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 4,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Atsushi",
                "family": "Ito",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Salil",
                "family": "Tambe",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Kaushik",
                "family": "Mitra",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Aswin C.",
                "family": "Sankaranarayanan",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Ashok",
                "family": "Veeraraghavan",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 3,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=3&types=wwwwwwww",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=3676985"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Computational Design of Linkage-Based Characters",
        "DOI": "10.1145/2601097.2601143",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://crl.ethz.ch/papers/SIG2014_linkages.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Animation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 97,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "https://www.ri.cmu.edu/publications/computational-design-of-linkage-based-characters/",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Fabrication",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 3,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Bernhard",
                "family": "Thomaszewski",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Stelian",
                "family": "Coros",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Damien",
                "family": "Gauge",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Vittorio",
                "family": "Megaro",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Eitan",
                "family": "Grinspun",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Markus",
                "family": "Gross",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Computational design of nanostructural color for additive manufacturing",
        "DOI": "10.1145/3197517.3201376",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://vccimaging.org/Publications/Auzinger2018NanoStructuralColor/Auzinger2018NanoStructuralColor.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Computer-aided manufacturing",
        "ACM 2": "Emerging optical and photonic technologies",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 7,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "http://visualcomputing.ist.ac.at/publications/2018/StructCol/",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Fabrication",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 1,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Thomas",
                "family": "Auzinger",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Institute of Science and Technology Austria, Austria"
                    }
                ]
            },
            {
                "given": "Wolfgang",
                "family": "Heidrich",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "King Abdullah University of Science and Technology, Kingdom of Saudi Arabia"
                    }
                ]
            },
            {
                "given": "Bernd",
                "family": "Bickel",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Institute of Science and Technology Austria, Austria"
                    }
                ]
            }
        ],
        "Altmetric score": 107.448,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=108&types=mmmmmmmb",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=46624618"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Computational Design of Reconfigurables",
        "DOI": "10.1145/2897824.2925900",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://www.cs.columbia.edu/cg/reconfigurables/computational-design-of-reconfigurables-siggraph-2016-garg-et-al.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Computer graphics",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 14,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "http://www.cs.columbia.edu/cg/reconfigurables/",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2016,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Fabrication",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Akash",
                "family": "Garg",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Columbia University"
                    }
                ]
            },
            {
                "given": "Alec",
                "family": "Jacobson",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Columbia University"
                    }
                ]
            },
            {
                "given": "Eitan",
                "family": "Grinspun",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Columbia University"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Computational Design of Stable Planar-Rod Structures",
        "DOI": "10.1145/2897824.2925978",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://www.gmrv.es/~edermiguel/docs/wire_bending.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Geometric topology",
        "ACM 2": "Computer-aided design",
        "ACM 3": "Shape modeling",
        "ACM 4": "Physical simulation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 19,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "http://visualcomputing.ist.ac.at/publications/2016/CDoSPRS/",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2016,
        "Misc. comment": "The preprint on the author's website has cross references issues ([?] everywhere) ; I could not find the paper elsewhere.",
        "Software Type": "",
        "Topic": "Fabrication",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Eder",
                "family": "Miguel",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "IST Austria"
                    }
                ]
            },
            {
                "given": "Mathias",
                "family": "Lepoutre",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "IST Austria"
                    }
                ]
            },
            {
                "given": "Bernd",
                "family": "Bickel",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "IST Austria"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Computational Imaging with Multi-Camera Time-of-Flight Systems",
        "DOI": "10.1145/2897824.2925928",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on the authors website or project page (zip file, direct download...)",
        "Main languages": "C/C++, Matlab / Mathematica / ..",
        "How long did take for you to evaluate the code this paper (if any)?": 3,
        "Build info / instructions": "README",
        "arXiv (page URL)": "",
        "code URL": "https://www.computationalimaging.org/publications/multi-camera-time-of-flight-systems/",
        "code URL  2": "http://web.stanford.edu/~gordonwz/download/tof/control_and_capture.zip",
        "PDF URL": "http://www.computationalimaging.org/wp-content/uploads/2016/05/MultiCameraToF-SIGGRAPH2016.pdf",
        "License type": "unspecified",
        "Build mechanism": "CMakeLists, Not applicable (python, Matlab..)",
        "Mandatory Software dependencies": "Open-source libraries, Paywall Closed source software or libraries",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "N/A",
        "Feedbacks [easy to configure/build (5=easy)]": "N/A",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "N/A",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "N/A",
        "Feedbacks [Interface user-friendly (5=easy)]": "N/A",
        "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions",
        "Authors": "Academia",
        "ACM 1": "3D imaging",
        "ACM 2": "Computational photography",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Mac OS",
        "General comments": "The project page provides many ressources for replicability (system diagrams, firmware, C++ libs for the controller). As the paper is a hardware-oriented research, it is not replicable in the sense of the current study.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 43,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "matlab / SWIG / flann / PCL",
        "Project URL": "https://www.computationalimaging.org/publications/multi-camera-time-of-flight-systems/",
        "Did I manage to perform a complete test (deps/build)?": "No due to missing specific hardware",
        "Year": 2016,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Image",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "N/A",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 3,
        "Documentation score": 1,
        "Paper authors": [
            {
                "given": "Shikhar",
                "family": "Shrestha",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Stanford University"
                    }
                ]
            },
            {
                "given": "Felix",
                "family": "Heide",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Stanford University and University of British Columbia"
                    }
                ]
            },
            {
                "given": "Wolfgang",
                "family": "Heidrich",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of British Columbia and KAUST"
                    }
                ]
            },
            {
                "given": "Gordon",
                "family": "Wetzstein",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Stanford University"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Computational Network Design from Functional Specifications",
        "DOI": "10.1145/2897824.2925935",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution, Other (web, research gate, semantic scholar,...)",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://geometry.cs.ucl.ac.uk/projects/2016/functional-network-design/paper_docs/PengEtAl_FuncNetworkDesign_SIGG16.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Shape analysis",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 24,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "http://geometry.cs.ucl.ac.uk/projects/2016/functional-network-design/",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2016,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Geometry",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": true,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Chi-Han",
                "family": "Peng",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "ASU and UCL"
                    }
                ]
            },
            {
                "given": "Yong-Liang",
                "family": "Yang",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Bath Univ."
                    }
                ]
            },
            {
                "given": "Fan",
                "family": "Bao",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "ASU"
                    }
                ]
            },
            {
                "given": "Daniel",
                "family": "Fink",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Urban Agency"
                    }
                ]
            },
            {
                "given": "Dong-Ming",
                "family": "Yan",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "KAUST and NLPR-CASIA"
                    }
                ]
            },
            {
                "given": "Peter",
                "family": "Wonka",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "KAUST and ASU"
                    }
                ]
            },
            {
                "given": "Niloy J.",
                "family": "Mitra",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "UCL"
                    }
                ]
            }
        ],
        "Altmetric score": 0.25,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=1&types=tttttttt",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=12703977"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Computational Thermoforming",
        "DOI": "10.1145/2897824.2925914",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on the authors website or project page (zip file, direct download...)",
        "Main languages": "Other",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "README",
        "arXiv (page URL)": "",
        "code URL": "https://igl.ethz.ch/projects/thermoforming/thermoforming-supplemental.zip",
        "code URL  2": "",
        "PDF URL": "https://igl.ethz.ch/projects/thermoforming/computational-thermoforming-2016.pdf",
        "License type": "unspecified",
        "Build mechanism": "Not applicable (python, Matlab..)",
        "Mandatory Software dependencies": "Paywall Closed source software or libraries",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "N/A",
        "Feedbacks [easy to configure/build (5=easy)]": "N/A",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "N/A",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "N/A",
        "Feedbacks [Interface user-friendly (5=easy)]": "N/A",
        "Documentation": "None",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Shape modeling",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Windows",
        "General comments": "The code consists in two Maple worksheets that generate C code. \n- membraneEnergy.mw generates the membrane energy, its gradient, Hessian and differentials\n- bendingEnergy.mw : same things for the bending energy.\nCreate a codegen subdirectory, otherwise it doesn't work. A calibration pattern is also provided.\nThe generated codes are of course not self-contained, are not really readable, and are just part of the software used to produce the paper results.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 36,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "Maple",
        "Project URL": "https://igl.ethz.ch/projects/thermoforming/",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2016,
        "Misc. comment": "",
        "Software Type": "Partial Code",
        "Topic": "Fabrication",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 1,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Christian",
                "family": "Sch\u00fcller",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "ETH Zurich"
                    }
                ]
            },
            {
                "given": "Daniele",
                "family": "Panozzo",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "ETH Zurich"
                    }
                ]
            },
            {
                "given": "Anselm",
                "family": "Grundh\u00f6fer",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Disney Research"
                    }
                ]
            },
            {
                "given": "Henning",
                "family": "Zimmer",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Disney Research"
                    }
                ]
            },
            {
                "given": "Evgeni",
                "family": "Sorkine",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "ETH Zurich"
                    }
                ]
            },
            {
                "given": "Olga",
                "family": "Sorkine-Hornung",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "ETH Zurich"
                    }
                ]
            }
        ],
        "Altmetric score": 15,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=15&types=mmmmmmmm",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=9726112"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Computing a high-dimensional euclidean embedding from an arbitrary smooth riemannian metric",
        "DOI": "10.1145/3197517.3201369",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No but pseudo-code in the PDF",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 2,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://personal.utdallas.edu/~xxg061000/HDE.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Parametric curve and surface models",
        "ACM 2": "Volumetric models",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 4,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Geometry",
        "Deep learning": "True",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": 3,
        "Reviewer": 1,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Zichun",
                "family": "Zhong",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Wayne State University"
                    }
                ]
            },
            {
                "given": "Wenping",
                "family": "Wang",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "The University of Hong Kong"
                    }
                ]
            },
            {
                "given": "Bruno",
                "family": "L\u00e9vy",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "INRIA Nancy - Grand Est"
                    }
                ]
            },
            {
                "given": "Jing",
                "family": "Hua",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Wayne State University"
                    }
                ]
            },
            {
                "given": "Xiaohu",
                "family": "Guo",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of Texas at Dallas"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Computing layouts with deformable templates",
        "DOI": "10.1145/2601097.2601164",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://peterwonka.net/Publications/pdfs/2014.SG.Peng.Computing_Layouts_with_Deformable_Templates.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Computational geometry",
        "ACM 2": "Shape modeling",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 34,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Geometry",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 4,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Chi-Han",
                "family": "Peng",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Yong-Liang",
                "family": "Yang",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Peter",
                "family": "Wonka",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 3,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=3&types=aaaaaaaa",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=41702040"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Connected Fermat Spirals for Layered Fabrication",
        "DOI": "10.1145/2897824.2925958",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://www.cs.sfu.ca/~haoz/pubs/zhao_sig16_fermat.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Parametric curve and surface models",
        "ACM 2": "Shape analysis",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 45,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "https://homes.cs.washington.edu/~haisen/CFS/index.html",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2016,
        "Misc. comment": "Additional results are provided in the project page. Note however that there is an alternate project page that is often referenced but that results in a 404 error: http://irc.cs.sdu.edu.cn/CFS/\nMore importantly, it seems that some (partial?) reimplementation of the paper by Ahmed H. Mahmoud (not an author) can be found at https://github.com/VccRobot/fermat3d",
        "Software Type": "",
        "Topic": "Fabrication",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Haisen",
                "family": "Zhao",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Shandong University"
                    }
                ]
            },
            {
                "given": "Baoquan",
                "family": "Chen",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Shandong University"
                    }
                ]
            },
            {
                "given": "Fanglin",
                "family": "Gu",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Shandong University"
                    }
                ]
            },
            {
                "given": "Qi-Xing",
                "family": "Huang",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "TTI Chicago"
                    }
                ]
            },
            {
                "given": "Jorge",
                "family": "Garcia",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Purdue University"
                    }
                ]
            },
            {
                "given": "Yong",
                "family": "Chen",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "USC"
                    }
                ]
            },
            {
                "given": "Changhe",
                "family": "Tu",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Shandong University"
                    }
                ]
            },
            {
                "given": "Bedrich",
                "family": "Benes",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Purdue University"
                    }
                ]
            },
            {
                "given": "Hao",
                "family": "Zhang",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Simon Fraser University"
                    }
                ]
            },
            {
                "given": "Daniel",
                "family": "Cohen-Or",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Tel-Aviv University"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Continuous Projection for Fast L1 Reconstruction",
        "DOI": "10.1145/2601097.2601172",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on the authors website or project page (zip file, direct download...)",
        "Main languages": "C/C++",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "README, LICENSE or explicit license (e.g. in the readme / headers), AUTHORS or explicitly mentioned",
        "arXiv (page URL)": "",
        "code URL": "https://users.cg.tuwien.ac.at/preiner/projects/clop/code/clopdemo-09.zip",
        "code URL  2": "",
        "PDF URL": "https://www.cg.tuwien.ac.at/research/publications/2014/preiner2014clop/preiner2014clop-paper_small.pdf",
        "License type": "custom",
        "Build mechanism": "IDE Project (VS,..)",
        "Mandatory Software dependencies": "None",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 5,
        "Feedbacks [easy to configure/build (5=easy)]": 5,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": 5,
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 5,
        "Feedbacks [Interface user-friendly (5=easy)]": "N/A",
        "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions, API documentation, Technical documentation (comments-doxygen...)",
        "Authors": "Academia",
        "ACM 1": "Randomness, geometry and discrete structures",
        "ACM 2": "Shape modeling",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Windows",
        "General comments": "Easy to compile with VS2017 using the VS2013 project provided and slight changes (adding preprocessor directive _SILENCE_STDEXT_HASH_DEPRECATION_WARNINGS ).\nHowever, it is only a partial reference implementation of the paper. While the paper sells speed over concurrent approaches, the reference monothreaded CPU implementation does not allow to reproduce the timings given in the paper. The implementation also does not reconstruct the surfaces (only the point projection is implemented) so the surfaces shown in the paper cannot be reproduced from this implementation. The implementation is also missing the normal projection step.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 28,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "https://www.cg.tuwien.ac.at/research/publications/2014/preiner2014clop/",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Geometry",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 2,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 2,
        "Paper authors": [
            {
                "given": "Reinhold",
                "family": "Preiner",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Oliver",
                "family": "Mattausch",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Murat",
                "family": "Arikan",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Renato",
                "family": "Pajarola",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Michael",
                "family": "Wimmer",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Controllable High-Fidelity Facial Performance Transfer",
        "DOI": "10.1145/2601097.2601210",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://faculty.cs.tamu.edu/jchai/projects/siggraph14-face/face-retargeting.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Animation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 23,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Animation",
        "Deep learning": "True",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Feng",
                "family": "Xu",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Jinxiang",
                "family": "Chai",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Yilong",
                "family": "Liu",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Xin",
                "family": "Tong",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Controlling Singular Values with Semidefinite Programming",
        "DOI": "10.1145/2601097.2601142",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution, On the author(s) repository (dropbox, github, drive, iCloud)",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on github, gitlab or other code platform",
        "Main languages": "Matlab / Mathematica / ..",
        "How long did take for you to evaluate the code this paper (if any)?": 4,
        "Build info / instructions": "README, LICENSE or explicit license (e.g. in the readme / headers), AUTHORS or explicitly mentioned",
        "arXiv (page URL)": "",
        "code URL": "https://github.com/shaharkov/ContSingVal",
        "code URL  2": "",
        "PDF URL": "http://sites.fas.harvard.edu/~cs277/papers/svcont.pdf",
        "License type": "provided as-is for academic use only and without any guarantees",
        "Build mechanism": "Not applicable (python, Matlab..)",
        "Mandatory Software dependencies": "Open-source libraries, Closed source (e.g. commercial) software or libraries free for research purposes",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 4,
        "Feedbacks [easy to configure/build (5=easy)]": 5,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": 5,
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 4,
        "Feedbacks [Interface user-friendly (5=easy)]": 5,
        "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions, Technical documentation (comments-doxygen...)",
        "Authors": "Academia",
        "ACM 1": "Computational geometry",
        "ACM 2": "Design and analysis of algorithms",
        "ACM 3": "Shape modeling",
        "ACM 4": "Mathematical optimization",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": 5,
        "OS of the test": "Linux",
        "General comments": "The provided code works equivalently with recommended or more recent dependencies (yalm R20190425 and mosek 9.1). The library addaxis, provided with the code, needs a simple fix (replace 'colorord' by 'ColorOrder' in addaxis/aa_splot.m).\nFigures 2 (exampleBarDeformation) and 1 (exampleExtremalQuasiConformal) can be partly reproduced.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 44,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "yalmip/mosek/matlab",
        "Project URL": "https://shaharkov.github.io/ContSingVal.html",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Geometry",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 4,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 4,
        "Documentation score": 1,
        "Paper authors": [
            {
                "given": "Shahar Z.",
                "family": "Kovalsky",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Noam",
                "family": "Aigerman",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Ronen",
                "family": "Basri",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Yaron",
                "family": "Lipman",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "CoreCavity: interactive shell decomposition for fabrication with two-piece rigid molds",
        "DOI": "10.1145/3197517.3201341",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://research-explorer.app.ist.ac.at/download/12/5360/IST-2018-1037-v1%2B1_CoreCavity-AuthorVersion.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Mesh generation",
        "ACM 2": "Graphical user interfaces",
        "ACM 3": "Shape analysis",
        "ACM 4": "Computer-aided manufacturing",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 6,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "http://visualcomputing.ist.ac.at/publications/2018/CoreCavity/",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Fabrication",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 3,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Kazutaka",
                "family": "Nakashima",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "The University of Tokyo"
                    }
                ]
            },
            {
                "given": "Thomas",
                "family": "Auzinger",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "IST Austria"
                    }
                ]
            },
            {
                "given": "Emmanuel",
                "family": "Iarussi",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "CONICET, IST Austria"
                    }
                ]
            },
            {
                "given": "Ran",
                "family": "Zhang",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "IST Austria"
                    }
                ]
            },
            {
                "given": "Takeo",
                "family": "Igarashi",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "The University of Tokyo"
                    }
                ]
            },
            {
                "given": "Bernd",
                "family": "Bickel",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "IST Austria"
                    }
                ]
            }
        ],
        "Altmetric score": 48.08,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=49&types=mmmmmbbt",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=46577504"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Creating and chaining camera moves for qadrotor videography",
        "DOI": "10.1145/3197517.3201284",
        "PDF availability (beside dl.acm)": "On an open archive arXiv or similar open archive",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "https://hal.inria.fr/hal-01819103",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://hal.inria.fr/hal-01819103/file/drone.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Interest point and salient region detections",
        "ACM 2": "Graphics systems and interfaces",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 10,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Animation",
        "Deep learning": "True",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 3,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Ke",
                "family": "Xie",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Shenzhen University"
                    }
                ]
            },
            {
                "given": "Hao",
                "family": "Yang",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Shenzhen University"
                    }
                ]
            },
            {
                "given": "Shengqiu",
                "family": "Huang",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Shenzhen University"
                    }
                ]
            },
            {
                "given": "Dani",
                "family": "Lischinski",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "The Hebrew University of Jerusalem"
                    }
                ]
            },
            {
                "given": "Marc",
                "family": "Christie",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Univ Rennes, INRIA"
                    }
                ]
            },
            {
                "given": "Kai",
                "family": "Xu",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Shenzhen University and National University of Defense Technology"
                    }
                ]
            },
            {
                "given": "Minglun",
                "family": "Gong",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Memorial University of Newfoundland"
                    }
                ]
            },
            {
                "given": "Daniel",
                "family": "Cohen-Or",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Shenzhen University and Tel Aviv University"
                    }
                ]
            },
            {
                "given": "Hui",
                "family": "Huang",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Shenzhen University"
                    }
                ]
            }
        ],
        "Altmetric score": 1,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=1&types=tttttttt",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=48116995"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Crowd-driven Mid-scale Layout Design",
        "DOI": "10.1145/2897824.2925894",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://www.kunzhou.net/2016/layout-sig16.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Modeling and simulation",
        "ACM 2": "Computational geometry",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 36,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "http://www.saikit.org/projects/layout/index.html",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2016,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Geometry",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Tian",
                "family": "Feng",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Singapore University of Technology and Design"
                    }
                ]
            },
            {
                "given": "Lap-Fai",
                "family": "Yu",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of Massachusetts Boston"
                    }
                ]
            },
            {
                "given": "Sai-Kit",
                "family": "Yeung",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Singapore University of Technology and Design"
                    }
                ]
            },
            {
                "given": "KangKang",
                "family": "Yin",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "National University of Singapore"
                    }
                ]
            },
            {
                "given": "Kun",
                "family": "Zhou",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Zhejiang University"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "cSculpt: A System for Collaborative Sculpting",
        "DOI": "10.1145/2897824.2925956",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://vcg.isti.cnr.it/Publications/2016/CSTP16/cScuplt.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Shape modeling",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 8,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "http://pellacini.di.uniroma1.it/publications/csculpt16/csculpt16.html",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2016,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Geometry",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Claudio",
                "family": "Calabrese",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Sapienza University of Rome"
                    }
                ]
            },
            {
                "given": "Gabriele",
                "family": "Salvati",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Sapienza University of Rome"
                    }
                ]
            },
            {
                "given": "Marco",
                "family": "Tarini",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "CNR-ISTI and Insubria University"
                    }
                ]
            },
            {
                "given": "Fabio",
                "family": "Pellacini",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Sapienza University of Rome"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Curved optimal delaunay triangulation",
        "DOI": "10.1145/3197517.3201358",
        "PDF availability (beside dl.acm)": "On an open archive arXiv or similar open archive, On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "https://hal.inria.fr/hal-01826055",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://www.geometry.caltech.edu/pubs/FABDD18.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Mesh generation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 8,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Geometry",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 3,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Leman",
                "family": "Feng",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Ecole des Ponts ParisTech"
                    }
                ]
            },
            {
                "given": "Pierre",
                "family": "Alliez",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Universit\u00e9 C\u00f4te d'Azur, Inria"
                    }
                ]
            },
            {
                "given": "Laurent",
                "family": "Bus\u00e9",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Universit\u00e9 C\u00f4te d'Azur, Inria"
                    }
                ]
            },
            {
                "given": "Herv\u00e9",
                "family": "Delingette",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Universit\u00e9 C\u00f4te d'Azur, Inria"
                    }
                ]
            },
            {
                "given": "Mathieu",
                "family": "Desbrun",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Caltech"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Darkroom: Compiling High-Level Image Processing Code into Hardware Pipelines",
        "DOI": "10.1145/2601097.2601174",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on github, gitlab or other code platform",
        "Main languages": "Other",
        "How long did take for you to evaluate the code this paper (if any)?": 2,
        "Build info / instructions": "README",
        "arXiv (page URL)": "",
        "code URL": "http://darkroom-lang.org",
        "code URL  2": "http://github.com/jameshegarty/darkroom",
        "PDF URL": "http://graphics.stanford.edu/papers/darkroom14/darkroom14.pdf",
        "License type": "MIT",
        "Build mechanism": "Commandline instructions in README",
        "Mandatory Software dependencies": "Open-source libraries",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 4,
        "Feedbacks [easy to configure/build (5=easy)]": "N/A",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "N/A",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "N/A",
        "Feedbacks [Interface user-friendly (5=easy)]": "N/A",
        "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions",
        "Authors": "Academia",
        "ACM 1": "Logic Design",
        "ACM 2": "Hardware Architecture",
        "ACM 3": "Graphics Processors",
        "ACM 4": "Methodology and Techniques\u2014Languages",
        "ACM 5": "General\u2014Image Processing Software",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Mac OS",
        "General comments": "I've installed the 2015-08-03 version of terra and tried to compile the examples but all examples failed due to some #include \"stdio.h\" issues.\n\n> import \"darkroom\"\n<buffer>:1:10: fatal error: 'stdio.h' file not found\n#include \"stdio.h\"\n         ^\ncompilation of included c code failed\n\nstack traceback:\n\tsrc/terralib.lua:3664: in function 'includec'\n\t./darkroom.t:1: in main chunk\n\t[C]: at 0x010690af60\n\t[C]: in function 'xpcall'\n\tsrc/terralib.lua:4506: in function <src/terralib.lua:4505>\n\n----\nSame issue on Linux",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 110,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "Terra",
        "Project URL": "http://graphics.stanford.edu/papers/darkroom14/",
        "Did I manage to perform a complete test (deps/build)?": "No due to technical issue",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Image",
        "Deep learning": "True",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "N/A",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 3,
        "Documentation score": 1,
        "Paper authors": [
            {
                "given": "James",
                "family": "Hegarty",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "John",
                "family": "Brunhaver",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Zachary",
                "family": "DeVito",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Jonathan",
                "family": "Ragan-Kelley",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Noy",
                "family": "Cohen",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Steven",
                "family": "Bell",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Artem",
                "family": "Vasilyev",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Mark",
                "family": "Horowitz",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Pat",
                "family": "Hanrahan",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 4,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=4&types=aaaatttt",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=2907273"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "DecoBrush: Drawing Structured Decorative Patterns by Example",
        "DOI": "10.1145/2601097.2601190",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://gfx.cs.princeton.edu/pubs/Lu_2014_DDS/Lu_2014_DDS.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Graphics systems and interfaces",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 37,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "https://gfx.cs.princeton.edu/pubs/Lu_2014_DDS/",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2014,
        "Misc. comment": "The project page provides a dataset with examples.",
        "Software Type": "",
        "Topic": "Image",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 3,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Jingwan",
                "family": "Lu",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Connelly",
                "family": "Barnes",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Connie",
                "family": "Wan",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Paul",
                "family": "Asente",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Radomir",
                "family": "Mech",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Adam",
                "family": "Finkelstein",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Deep appearance models for face rendering",
        "DOI": "10.1145/3197517.3201401",
        "PDF availability (beside dl.acm)": "On an open archive arXiv or similar open archive, On the author(s) website or its institution, On the author(s) repository (dropbox, github, drive, iCloud)",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "https://arxiv.org/abs/1808.00362",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://research.fb.com/wp-content/uploads/2018/08/Deep-Appearance-Models-for-Face-Rendering.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Private Companies",
        "ACM 1": "Neural networks",
        "ACM 2": "Image-based rendering",
        "ACM 3": "Virtual reality",
        "ACM 4": "Mesh models",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 28,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "https://research.fb.com/publications/deep-appearance-models-for-face-rendering/",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Rendering",
        "Deep learning": "True",
        "hasThumbnail": true,
        "Open access": true,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 1,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Stephen",
                "family": "Lombardi",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Facebook Reality Labs"
                    }
                ]
            },
            {
                "given": "Jason",
                "family": "Saragih",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Facebook Reality Labs"
                    }
                ]
            },
            {
                "given": "Tomas",
                "family": "Simon",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Facebook Reality Labs"
                    }
                ]
            },
            {
                "given": "Yaser",
                "family": "Sheikh",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Facebook Reality Labs"
                    }
                ]
            }
        ],
        "Altmetric score": 3.5,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=4&types=tttttttt",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=45909111"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Deep context-aware descreening and rescreening of halftone images",
        "DOI": "10.1145/3197517.3201377",
        "PDF availability (beside dl.acm)": "On the author(s) repository (dropbox, github, drive, iCloud)",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 2,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://github.com/thnkim/thnkim.github.com/raw/master/DeepHalftoneDescreening.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Computational photography",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 4,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "https://github.com/thnkim/thnkim.github.com",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Image",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 1,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Tae-Hoon",
                "family": "Kim",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Intel Corporation"
                    }
                ]
            },
            {
                "given": "Sang Il",
                "family": "Park",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Sejong University, Republic of Korea"
                    }
                ]
            }
        ],
        "Altmetric score": 3,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=3&types=wwwwwwww",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=54506049"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Deep convolutional priors for indoor scene synthesis",
        "DOI": "10.1145/3197517.3201362",
        "PDF availability (beside dl.acm)": "On the author(s) repository (dropbox, github, drive, iCloud)",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on github, gitlab or other code platform",
        "Main languages": "Python",
        "How long did take for you to evaluate the code this paper (if any)?": 2,
        "Build info / instructions": "README, LICENSE or explicit license (e.g. in the readme / headers)",
        "arXiv (page URL)": "",
        "code URL": "https://github.com/brownvc/deep-synth",
        "code URL  2": "",
        "PDF URL": "https://dritchie.github.io/pdf/deepsynth.pdf",
        "License type": "free for non commercial use",
        "Build mechanism": "Not applicable (python, Matlab..)",
        "Mandatory Software dependencies": "Open-source libraries, Closed source (e.g. commercial) software or libraries free for research purposes",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 5,
        "Feedbacks [easy to configure/build (5=easy)]": "N/A",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "N/A",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "Yes",
        "Available data (provided or url / ref)": "Training data",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "N/A",
        "Feedbacks [Interface user-friendly (5=easy)]": "N/A",
        "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions, API documentation",
        "Authors": "Academia",
        "ACM 1": "Probabilistic reasoning",
        "ACM 2": "Neural networks",
        "ACM 3": "Computer graphics",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Linux",
        "General comments": "Could not run due to missing data: the SUNCG database is no longer available, and no pretrained model is given",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 29,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "numpy/matplotlib/pytorch/CUDA/pybullet/numba/pyquaternion/scikit-learn/scipy",
        "Project URL": "",
        "Did I manage to perform a complete test (deps/build)?": "No due to technical issue",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Geometry",
        "Deep learning": "True",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "N/A",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 1,
        "Documentation score": 1,
        "Paper authors": [
            {
                "given": "Kai",
                "family": "Wang",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Brown University"
                    }
                ]
            },
            {
                "given": "Manolis",
                "family": "Savva",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Princeton University"
                    }
                ]
            },
            {
                "given": "Angel X.",
                "family": "Chang",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Princeton University"
                    }
                ]
            },
            {
                "given": "Daniel",
                "family": "Ritchie",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Brown University"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Deep exemplar-based colorization",
        "DOI": "10.1145/3197517.3201365",
        "PDF availability (beside dl.acm)": "On an open archive arXiv or similar open archive, On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on github, gitlab or other code platform",
        "Main languages": "C/C++, Python",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "README, LICENSE or explicit license (e.g. in the readme / headers), AUTHORS or explicitly mentioned",
        "arXiv (page URL)": "https://arxiv.org/abs/1807.06587",
        "code URL": "https://github.com/msracver/Deep-Exemplar-based-Colorization",
        "code URL  2": "",
        "PDF URL": "http://www.dongdongchen.bid/pubs/colorization_sig18.pdf",
        "License type": "MIT",
        "Build mechanism": "IDE Project (VS,..)",
        "Mandatory Software dependencies": "Open-source libraries, Closed source (e.g. commercial) software or libraries free for research purposes",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 5,
        "Feedbacks [easy to configure/build (5=easy)]": 5,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "N/A",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "Yes",
        "Available data (provided or url / ref)": "Pre-trained models / Hardcoded data / lookup tables /...",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 5,
        "Feedbacks [Interface user-friendly (5=easy)]": 5,
        "Documentation": "Technical documentation (comments-doxygen...)",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Computational photography",
        "ACM 2": "Neural networks",
        "ACM 3": "Image manipulation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Linux",
        "General comments": "As reviewer 1, I could not build the provided Visual Studio solution (see details of my attemp below).\nHowever, it appears that the code is shipped with precompiled demos I didn't find at the first look.\nBefore running the demo, I had to install the following dependencies (tested with Python 3.6):\n>pip install image opencv-python scikit-image\nThen, to install pytorch, I followed the instructions given at https://pytorch.org/get-started/locally/, for me it was\n>pip install torch===1.4.0 torchvision===0.5.0 -f https://download.pytorch.org/whl/torch_stable.html\n\nThen you need to download and put the data as described here: https://github.com/msracver/Deep-Exemplar-based-Colorization#download-models\n\nAnd then simply run the script demo\\run.bat. It should output two colored images in demo\\examples\\res\\.\n\nCompilation attempt:\n=================\nI could however compile caffe and other dependencies using CK (https://codereef.ai/portal/c/032630d041b4fd8a:7d5e081bda47dcbc/), namely opencv, boost, gflags, glogs, hd5f, lmbd and protobuf. I had to install precompiled version of \n\n\n---- Review 2 -----\nCould not test on Windows because Caffe is unavailable for VS2017. I spent multiple hours trying to compile Caffe with VS2017, but stopped after compiling the 13th dependency, ATLAS, that compiles unix-style with cygwin. Pre-built binaries *may* be found for VS2015. Caffe is not maintained as of 2019.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 29,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "zlib / Caffe / protobuf / protoc / boost / Glog / HDF5 / LMDB / Gflags / levelDB / Snappy / Cuda / CudNN / OpenCV / ATLAS / PyTorch / cuda",
        "Project URL": "",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Image",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 5,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 4,
        "Documentation score": 1,
        "Paper authors": [
            {
                "given": "Mingming",
                "family": "He",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Hong Kong UST"
                    }
                ]
            },
            {
                "given": "Dongdong",
                "family": "Chen",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of Science and Technology of China"
                    }
                ]
            },
            {
                "given": "Jing",
                "family": "Liao",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Microsoft Research"
                    }
                ]
            },
            {
                "given": "Pedro V.",
                "family": "Sander",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Hong Kong UST"
                    }
                ]
            },
            {
                "given": "Lu",
                "family": "Yuan",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Microsoft Research"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Deep image-based relighting from optimal sparse samples",
        "DOI": "10.1145/3197517.3201313",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on github, gitlab or other code platform",
        "Main languages": "Python",
        "How long did take for you to evaluate the code this paper (if any)?": 10,
        "Build info / instructions": "None",
        "arXiv (page URL)": "",
        "code URL": "https://github.com/zexiangxu/Deep-Relighting",
        "code URL  2": "",
        "PDF URL": "https://www.ics.uci.edu/~yug10/projects/megvii/ref/Xu%20-%202018%20-%20Deep%20Image-Based%20Relighting%20from%20Optimal%20Sparse%20Samples.pdf",
        "License type": "Disclaimer:This software and related data are published for academic and non-commercial use only.",
        "Build mechanism": "This software and related data are published for academic and non-commercial use only.",
        "Mandatory Software dependencies": "Open-source libraries",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 5,
        "Feedbacks [easy to configure/build (5=easy)]": "N/A",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "N/A",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "Yes",
        "Available data (provided or url / ref)": "Training data",
        "License for the data (if any)": "published for academic and non-commercial use only",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "N/A",
        "Feedbacks [Interface user-friendly (5=easy)]": "N/A",
        "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Rendering",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Linux",
        "General comments": "Unable to unzip the training data (320Go zip file) (64Go RAM computer).",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 20,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "tensorflow",
        "Project URL": "http://cseweb.ucsd.edu/~viscomp/projects/SIG18Relighting/",
        "Did I manage to perform a complete test (deps/build)?": "No due to technical issue",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Image",
        "Deep learning": "True",
        "hasThumbnail": true,
        "Open access": true,
        "Feedbacks [could reproduce results (5=highly confident)]": "N/A",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 1,
        "Documentation score": 1,
        "Paper authors": [
            {
                "given": "Zexiang",
                "family": "Xu",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "University of California"
                    }
                ]
            },
            {
                "given": "Kalyan",
                "family": "Sunkavalli",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Adobe Research"
                    }
                ]
            },
            {
                "given": "Sunil",
                "family": "Hadap",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Adobe Research"
                    }
                ]
            },
            {
                "given": "Ravi",
                "family": "Ramamoorthi",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of California"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Deep learning of biomimetic sensorimotor control for biomechanical human animation",
        "DOI": "10.1145/3197517.3201305",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://web.cs.ucla.edu/~nakada/pdfs/siggraph18_nakada.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Machine learning approaches",
        "ACM 2": "Animation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 11,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Animation",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 1,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Masaki",
                "family": "Nakada",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "University of California"
                    }
                ]
            },
            {
                "given": "Tao",
                "family": "Zhou",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of California"
                    }
                ]
            },
            {
                "given": "Honglin",
                "family": "Chen",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of California"
                    }
                ]
            },
            {
                "given": "Tomer",
                "family": "Weiss",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of California"
                    }
                ]
            },
            {
                "given": "Demetri",
                "family": "Terzopoulos",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of California"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Deep Video Portraits",
        "DOI": "10.1145/3197517.3201283",
        "PDF availability (beside dl.acm)": "On an open archive arXiv or similar open archive, On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "https://arxiv.org/abs/1805.11714",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://arxiv.org/pdf/1805.11714.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Appearance and texture representations",
        "ACM 2": "Neural networks",
        "ACM 3": "Animation",
        "ACM 4": "Rendering",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 89,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "https://gvv.mpi-inf.mpg.de/projects/DeepVideoPortraits/",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Image",
        "Deep learning": "True",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 3,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Hyeongwoo",
                "family": "Kim",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Max Planck Institute for Informatics, Germany"
                    }
                ]
            },
            {
                "given": "Christian",
                "family": "Theobalt",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Max Planck Institute for Informatics, Germany"
                    }
                ]
            },
            {
                "given": "Pablo",
                "family": "Carrido",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Technicolor, France"
                    }
                ]
            },
            {
                "given": "Ayush",
                "family": "Tewari",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Max Planck Institute for Informatics, Germany"
                    }
                ]
            },
            {
                "given": "Weipeng",
                "family": "Xu",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Max Planck Institute for Informatics, Germany"
                    }
                ]
            },
            {
                "given": "Justus",
                "family": "Thies",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Technical University of Munich, Germany"
                    }
                ]
            },
            {
                "given": "Matthias",
                "family": "Niessner",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Technical University of Munich, Germany"
                    }
                ]
            },
            {
                "given": "Patrick",
                "family": "P\u00e9rez",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Technicolor, France"
                    }
                ]
            },
            {
                "given": "Christian",
                "family": "Richardt",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of Bath, United Kingdom"
                    }
                ]
            },
            {
                "given": "Michael",
                "family": "Zollh\u00f6fer",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Stanford University"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "DeepMimic: example-guided deep reinforcement learning of physics-based character skills",
        "DOI": "10.1145/3197517.3201311",
        "PDF availability (beside dl.acm)": "On an open archive arXiv or similar open archive, On the author(s) repository (dropbox, github, drive, iCloud)",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on github, gitlab or other code platform",
        "Main languages": "C/C++, Python",
        "How long did take for you to evaluate the code this paper (if any)?": 3,
        "Build info / instructions": "README",
        "arXiv (page URL)": "https://arxiv.org/abs/1804.02717",
        "code URL": "https://github.com/xbpeng/DeepMimic",
        "code URL  2": "",
        "PDF URL": "https://xbpeng.github.io/projects/DeepMimic/2018_TOG_DeepMimic.pdf",
        "License type": "MIT",
        "Build mechanism": "Makefile, Not applicable (python, Matlab..)",
        "Mandatory Software dependencies": "Open-source libraries, Closed source (e.g. commercial) software or libraries free for research purposes",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 5,
        "Feedbacks [easy to configure/build (5=easy)]": 5,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "N/A",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 5,
        "Feedbacks [Interface user-friendly (5=easy)]": 5,
        "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions",
        "Authors": "Academia",
        "ACM 1": "Control methods",
        "ACM 2": "Reinforcement learning",
        "ACM 3": "Physical simulation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Linux",
        "General comments": "I was able to run and visualize pretrained policies + learned a policy training \"humanoid3d_spinkick_args.txt",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 165,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "libbullet/eigen3/opengl/freeglut/glew/swig/openmpi/tensorflow",
        "Project URL": "https://xbpeng.github.io/projects/DeepMimic/index.html",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Animation",
        "Deep learning": "True",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 5,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 1,
        "Documentation score": 1,
        "Paper authors": [
            {
                "given": "Xue Bin",
                "family": "Peng",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "University of California"
                    }
                ]
            },
            {
                "given": "Pieter",
                "family": "Abbeel",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of California"
                    }
                ]
            },
            {
                "given": "Sergey",
                "family": "Levine",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of California"
                    }
                ]
            },
            {
                "given": "Michiel",
                "family": "van de Panne",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of British Columbia"
                    }
                ]
            }
        ],
        "Altmetric score": 406.38,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=407&types=mbrttttf",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=36096210"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Defending Continuous Collision Detection against Errors",
        "DOI": "10.1145/2601097.2601114",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No but pseudo-code in the PDF",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 2,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://web.cse.ohio-state.edu/~wang.3602/Wang-2014-DCC/Wang-2014-DCC.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Animation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 40,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Animation",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": 4,
        "Reviewer": 1,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Huamin",
                "family": "Wang",
                "sequence": "first",
                "affiliation": []
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Denoising with kernel prediction and asymmetric loss functions",
        "DOI": "10.1145/3197517.3201388",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://graphics.pixar.com/library/MLDenoising2018/paper.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Private Companies",
        "ACM 1": "Ray tracing",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 26,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "https://graphics.pixar.com/library/MLDenoising2018/",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Rendering",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Thijs",
                "family": "Vogels",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Disney Research"
                    }
                ]
            },
            {
                "given": "Fabrice",
                "family": "Rousselle",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Disney Research"
                    }
                ]
            },
            {
                "given": "Brian",
                "family": "Mcwilliams",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Disney Research"
                    }
                ]
            },
            {
                "given": "Gerhard",
                "family": "R\u00f6thlin",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Disney Research"
                    }
                ]
            },
            {
                "given": "Alex",
                "family": "Harvill",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Pixar Animation Studios"
                    }
                ]
            },
            {
                "given": "David",
                "family": "Adler",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Walt Disney Animation Studios"
                    }
                ]
            },
            {
                "given": "Mark",
                "family": "Meyer",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Pixar Animation Studios"
                    }
                ]
            },
            {
                "given": "Jan",
                "family": "Nov\u00e1k",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Disney Research"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Design and Fabrication by Example",
        "DOI": "10.1145/2601097.2601127",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://fabbyexample.csail.mit.edu/fabByExample_preprint.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Randomness, geometry and discrete structures",
        "ACM 2": "Shape modeling",
        "ACM 3": "Graphics recognition and interpretation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 61,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "http://fabbyexample.csail.mit.edu",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2014,
        "Misc. comment": "Database of fabrication design available.",
        "Software Type": "",
        "Topic": "Fabrication",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 3,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Adriana",
                "family": "Schulz",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Ariel",
                "family": "Shamir",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "David I. W.",
                "family": "Levin",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Pitchaya",
                "family": "Sitthi-amorn",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Wojciech",
                "family": "Matusik",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Designing Inflatable Structures",
        "DOI": "10.1145/2601097.2601166",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://s3-us-west-1.amazonaws.com/disneyresearch/wp-content/uploads/20140808191506/Project_DesigningInflatableStructures_SIGGRAPH14_paper.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Geometric topology",
        "ACM 2": "Physical simulation",
        "ACM 3": "Shape modeling",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 71,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "https://la.disneyresearch.com/publication/designing-inflatable-structures/",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Fabrication",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 3,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "M\u00e9lina",
                "family": "Skouras",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Bernhard",
                "family": "Thomaszewski",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Peter",
                "family": "Kaufmann",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Akash",
                "family": "Garg",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Bernd",
                "family": "Bickel",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Eitan",
                "family": "Grinspun",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Markus",
                "family": "Gross",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 0.5,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=1&types=tttttttt",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=12671833"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Designing patterns using triangle-quad hybrid meshes",
        "DOI": "10.1145/3197517.3201306",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No but pseudo-code in the PDF",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 2,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://www.dmg.tuwien.ac.at/geom/ig/publications/pattern/pattern.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Mesh models",
        "ACM 2": "Mesh geometry models",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 4,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "https://repository.kaust.edu.sa/handle/10754/630175",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Geometry",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": 1,
        "Reviewer": 1,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Chi-Han",
                "family": "Peng",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "KAUST"
                    }
                ]
            },
            {
                "given": "Helmut",
                "family": "Pottmann",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "TU Wien"
                    }
                ]
            },
            {
                "given": "Peter",
                "family": "Wonka",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "KAUST"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Designing Structurally-Sound Ornamental Curve Networks",
        "DOI": "10.1145/2897824.2925888",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution, Other (web, research gate, semantic scholar,...)",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://www-labs.iro.umontreal.ca/~bernhard/PDF/CurveNetworks.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Shape modeling",
        "ACM 2": "Physical simulation",
        "ACM 3": "Geometric topology",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 34,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "https://disneyresearch.com/publication/designing-structurally-sound-ornamental-curve-networks/",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2016,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Fabrication",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Jonas",
                "family": "Zehnder",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Disney Research"
                    }
                ]
            },
            {
                "given": "Stelian",
                "family": "Coros",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Carnegie Mellon University"
                    }
                ]
            },
            {
                "given": "Bernhard",
                "family": "Thomaszewski",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Disney Research"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Detailed Water with Coarse Grids: Combining Surface Meshes and Adaptive Discontinuous Galerkin",
        "DOI": "10.1145/2601097.2601167",
        "PDF availability (beside dl.acm)": "Other (web, research gate, semantic scholar,...)",
        "Is the code or software publicly available ?": "No but pseudo-code in the PDF",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.639.8920&rep=rep1&type=pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Physical simulation",
        "ACM 2": "Shape modeling",
        "ACM 3": "Geometric topology",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 35,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Animation",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": 1,
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Essex",
                "family": "Edwards",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Robert",
                "family": "Bridson",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Developability of triangle meshes",
        "DOI": "10.1145/3197517.3201303",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on github, gitlab or other code platform",
        "Main languages": "C/C++",
        "How long did take for you to evaluate the code this paper (if any)?": 5,
        "Build info / instructions": "README, LICENSE or explicit license (e.g. in the readme / headers), AUTHORS or explicitly mentioned",
        "arXiv (page URL)": "",
        "code URL": "https://github.com/odedstein/DevelopabilityOfTriangleMeshes",
        "code URL  2": "",
        "PDF URL": "https://www.cs.cmu.edu/~kmcrane/Projects/DiscreteDevelopable/paper.pdf",
        "License type": "GPL",
        "Build mechanism": "Makefile, CMakeLists",
        "Mandatory Software dependencies": "Open-source libraries",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "N/A",
        "Feedbacks [easy to configure/build (5=easy)]": "N/A",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "N/A",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "N/A",
        "Feedbacks [Interface user-friendly (5=easy)]": "N/A",
        "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions",
        "Authors": "Academia",
        "ACM 1": "Discretization",
        "ACM 2": "Mesh geometry models",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Linux",
        "General comments": "The code requires an old version of libigl (the current master is not compatible). We have tried to checkout several versions (2018, end 2017) but none of them was fine.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 12,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "libigl",
        "Project URL": "http://www.cs.columbia.edu/cg/developability/",
        "Did I manage to perform a complete test (deps/build)?": "No due to technical issue",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Geometry",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "N/A",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 1,
        "Documentation score": 1,
        "Paper authors": [
            {
                "given": "Oded",
                "family": "Stein",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Columbia University"
                    }
                ]
            },
            {
                "given": "Eitan",
                "family": "Grinspun",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Columbia University"
                    }
                ]
            },
            {
                "given": "Keenan",
                "family": "Crane",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Carnegie Mellon University"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Dexterous manipulation and control with volumetric muscles",
        "DOI": "10.1145/3197517.3201330",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on github, gitlab or other code platform, on software heritage",
        "Main languages": "C/C++",
        "How long did take for you to evaluate the code this paper (if any)?": 3,
        "Build info / instructions": "README",
        "arXiv (page URL)": "",
        "code URL": "https://github.com/lsw9021/DexterousManipulation",
        "code URL  2": "",
        "PDF URL": "http://mrl.snu.ac.kr/research/ProjectDexterous/paper.pdf",
        "License type": "unspecified",
        "Build mechanism": "CMakeLists",
        "Mandatory Software dependencies": "Open-source libraries",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 3,
        "Feedbacks [easy to configure/build (5=easy)]": 5,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": 4,
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "N/A",
        "Feedbacks [Interface user-friendly (5=easy)]": "N/A",
        "Documentation": "None",
        "Authors": "Academia",
        "ACM 1": "Physical simulation",
        "ACM 2": "Motion processing",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Linux",
        "General comments": "Several unspecified dependencies (tinyxml, OpenGL, glut...). I had to change few paths in the source code to locate OpenGL properly. Unable to check the output of the executables (no explanations in the readme). Note that the code is not mentioned in the project page but available on one of the authors github page. vmcon fails after a long series of NaN and nothing to render.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 13,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "DART / Boost / Eigen / IPOPT / tinyxml / OpenGL / glut",
        "Project URL": "http://mrl.snu.ac.kr/research/ProjectDexterous/Page.htm",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Animation",
        "Deep learning": "True",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 1,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 3,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Seunghwan",
                "family": "Lee",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Seoul National University"
                    }
                ]
            },
            {
                "given": "Ri",
                "family": "Yu",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Seoul National University"
                    }
                ]
            },
            {
                "given": "Jungnam",
                "family": "Park",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Seoul National University"
                    }
                ]
            },
            {
                "given": "Mridul",
                "family": "Aanjaneya",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Rutgers University"
                    }
                ]
            },
            {
                "given": "Eftychios",
                "family": "Sifakis",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of Wisconsin-Madison"
                    }
                ]
            },
            {
                "given": "Jehee",
                "family": "Lee",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Seoul National University"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Differentiable Programming for Image Processing and Deep Learning in Halide",
        "DOI": "10.1145/3197517.3201383",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on github, gitlab or other code platform",
        "Main languages": "C/C++",
        "How long did take for you to evaluate the code this paper (if any)?": 10,
        "Build info / instructions": "README, LICENSE or explicit license (e.g. in the readme / headers), AUTHORS or explicitly mentioned",
        "arXiv (page URL)": "",
        "code URL": "https://github.com/halide/Halide",
        "code URL  2": "",
        "PDF URL": "https://people.csail.mit.edu/tzumao/gradient_halide/gradient_halide.pdf",
        "License type": "MIT",
        "Build mechanism": "Makefile, CMakeLists",
        "Mandatory Software dependencies": "Open-source libraries",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 5,
        "Feedbacks [easy to configure/build (5=easy)]": 5,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "N/A",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 5,
        "Feedbacks [Interface user-friendly (5=easy)]": "N/A",
        "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions, API documentation, Technical documentation (comments-doxygen...)",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Image processing",
        "ACM 2": "Machine learning",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Linux",
        "General comments": "I was able to perform automatic differentiation (gamma correction example in the paper) however most filter examples in the paper did not come with code to reproduce and I was unable to reproduce them in a timely manner.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 26,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "llvm",
        "Project URL": "https://people.csail.mit.edu/tzumao/gradient_halide/",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Image",
        "Deep learning": "True",
        "hasThumbnail": true,
        "Open access": true,
        "Feedbacks [could reproduce results (5=highly confident)]": 3,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 1,
        "Documentation score": 2,
        "Paper authors": [
            {
                "given": "Tzu-Mao",
                "family": "Li",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "MIT CSAIL"
                    }
                ]
            },
            {
                "given": "Micha\u00ebl",
                "family": "Gharbi",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "MIT CSAIL"
                    }
                ]
            },
            {
                "given": "Andrew",
                "family": "Adams",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Facebook AI Research"
                    }
                ]
            },
            {
                "given": "Fr\u00e9do",
                "family": "Durand",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "MIT CSAIL"
                    }
                ]
            },
            {
                "given": "Jonathan",
                "family": "Ragan-Kelley",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "UC Berkeley & Google"
                    }
                ]
            }
        ],
        "Altmetric score": 0.75,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=1&types=tttttttt",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=46630053"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Discrete Stochastic Microfacet Models",
        "DOI": "10.1145/2601097.2601186",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on the authors website or project page (zip file, direct download...), on github, gitlab or other code platform",
        "Main languages": "C/C++, Python",
        "How long did take for you to evaluate the code this paper (if any)?": 10,
        "Build info / instructions": "README, LICENSE or explicit license (e.g. in the readme / headers), AUTHORS or explicitly mentioned",
        "arXiv (page URL)": "",
        "code URL": "http://www.mitsuba-renderer.org/",
        "code URL  2": "https://github.com/mitsuba-renderer/mitsuba",
        "PDF URL": "http://www.cs.cornell.edu/projects/stochastic-sg14/stochastic.pdf",
        "License type": "GPL",
        "Build mechanism": "SCONS",
        "Mandatory Software dependencies": "Open-source libraries",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 5,
        "Feedbacks [easy to configure/build (5=easy)]": 3,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": 3,
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 5,
        "Feedbacks [Interface user-friendly (5=easy)]": 3,
        "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions, API documentation, Technical documentation (comments-doxygen...)",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Texturing",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Linux",
        "General comments": "The project's webpage links to mitsuba, but no microfacet method in mitsuba references the paper (it references other microfacets papers). The examples to reproduce the experiments are not provided, so I was not able to reproduce the results of the paper. To compile mitsuba on ubuntu 18.04, in config.py I changed -std=c++11 into -std=gnu++11 ; in mitsuba/build/release/mtsgui I changed QtCore, QtOpenGL (and so on) into Qt5Core, Qt5OpenGL (and so on) ; in data/scons/qt5.py,line 392 changed QtCore into Qt5Core.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 52,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "qt5/libpng/fftw3/libpcrecpp/eigen3/openexr/boost/xerces/ilmbase/jpeg/glewmx/libxxf86vm",
        "Project URL": "http://www.cs.cornell.edu/projects/stochastic-sg14/",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2014,
        "Misc. comment": "There appears to be an implementation of the paper by a different author: https://github.com/lxs137/glint_mitsuba",
        "Software Type": "Code",
        "Topic": "Rendering",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 1,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 1,
        "Documentation score": 2,
        "Paper authors": [
            {
                "given": "Wenzel",
                "family": "Jakob",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Milo\u0161",
                "family": "Ha\u0161an",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Ling-Qi",
                "family": "Yan",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Jason",
                "family": "Lawrence",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Ravi",
                "family": "Ramamoorthi",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Steve",
                "family": "Marschner",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Displaced Dynamic Expression Regression for Real-time Facial Tracking and Animation",
        "DOI": "10.1145/2601097.2601204",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://houqiming.net/res/DDEregression.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Graphics input devices",
        "ACM 2": "Graphics systems and interfaces",
        "ACM 3": "Animation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 257,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "http://kunzhou.net/zjugaps/DDE/",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Animation",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Chen",
                "family": "Cao",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Qiming",
                "family": "Hou",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Kun",
                "family": "Zhou",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 3,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=3&types=aaaaaaaa",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=42947758"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Drucker-Prager Elastoplasticity for Sand Animation",
        "DOI": "10.1145/2897824.2925906",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://www.seas.upenn.edu/~cffjiang/research/sand/paper.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Physical simulation",
        "ACM 2": "Continuous simulation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 58,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2016,
        "Misc. comment": "There may exist an unofficial implementation by Ziwei Zhu at https://github.com/2iw31Zhv/AnisotropicElastoplasticity",
        "Software Type": "",
        "Topic": "Animation",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Gergely",
                "family": "Kl\u00e1r",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "University of California, Los Angeles"
                    }
                ]
            },
            {
                "given": "Theodore",
                "family": "Gast",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of California, Los Angeles"
                    }
                ]
            },
            {
                "given": "Andre",
                "family": "Pradhana",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of California, Los Angeles"
                    }
                ]
            },
            {
                "given": "Chuyuan",
                "family": "Fu",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of California, Los Angeles"
                    }
                ]
            },
            {
                "given": "Craig",
                "family": "Schroeder",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of California, Los Angeles"
                    }
                ]
            },
            {
                "given": "Chenfanfu",
                "family": "Jiang",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of California, Los Angeles"
                    }
                ]
            },
            {
                "given": "Joseph",
                "family": "Teran",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of California, Los Angeles"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "DSCarver: decompose-and-spiral-carve for subtractive manufacturing",
        "DOI": "10.1145/3197517.3201338",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://homes.cs.washington.edu/~haisen/DSCarver/files/DSCarver.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Shape analysis",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 7,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "https://homes.cs.washington.edu/~haisen/DSCarver/index.html",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Fabrication",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 3,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Haisen",
                "family": "Zhao",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Shandong University"
                    }
                ]
            },
            {
                "given": "Hao",
                "family": "Zhang",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Simon Fraser University"
                    }
                ]
            },
            {
                "given": "Shiqing",
                "family": "Xin",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Shandong University"
                    }
                ]
            },
            {
                "given": "Yuanmin",
                "family": "Deng",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Shandong University"
                    }
                ]
            },
            {
                "given": "Changhe",
                "family": "Tu",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Shandong University"
                    }
                ]
            },
            {
                "given": "Wenping",
                "family": "Wang",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Hong Kong University"
                    }
                ]
            },
            {
                "given": "Daniel",
                "family": "Cohen-Or",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Tel Aviv University"
                    }
                ]
            },
            {
                "given": "Baoquan",
                "family": "Chen",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Shandong University and Peking University"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Dynamic kelvinlets: secondary motions based on fundamental solutions of elastodynamics",
        "DOI": "10.1145/3197517.3201280",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on the authors website or project page (zip file, direct download...)",
        "Main languages": "C/C++",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "README, LICENSE or explicit license (e.g. in the readme / headers), AUTHORS or explicitly mentioned",
        "arXiv (page URL)": "",
        "code URL": "http://graphics.pixar.com/library/DynaKelvinlets/code.zip",
        "code URL  2": "",
        "PDF URL": "https://graphics.pixar.com/library/DynaKelvinlets/paper.pdf",
        "License type": "Pixar license permission granted for non-commercial use",
        "Build mechanism": "Makefile, CMakeLists",
        "Mandatory Software dependencies": "Open-source libraries",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 5,
        "Feedbacks [easy to configure/build (5=easy)]": 5,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "N/A",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 4,
        "Feedbacks [Interface user-friendly (5=easy)]": 5,
        "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions, API documentation, Technical documentation (comments-doxygen...)",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Procedural animation",
        "ACM 2": "Physical simulation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Linux",
        "General comments": "The output format is .obj mesh files, can be read by many open source software. The authors provide a viewer as a  houdini plugin that can be used with the non-commercial version of houdini and runs smoothly. I was able to reproduce grid deformations similar to the ones in the paper, but not on meshes.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 5,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "http://graphics.pixar.com/library/DynaKelvinlets/",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Animation",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": true,
        "Feedbacks [could reproduce results (5=highly confident)]": 4,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 1,
        "Documentation score": 2,
        "Paper authors": [
            {
                "given": "Fernando",
                "family": "De Goes",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Pixar Animation Studios"
                    }
                ]
            },
            {
                "given": "Doug L.",
                "family": "James",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Pixar Animation Studios and Stanford University"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Dynamic Ray Stream Traversal",
        "DOI": "10.1145/2601097.2601222",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on github, gitlab or other code platform",
        "Main languages": "C/C++",
        "How long did take for you to evaluate the code this paper (if any)?": 2,
        "Build info / instructions": "LICENSE or explicit license (e.g. in the readme / headers)",
        "arXiv (page URL)": "",
        "code URL": "https://code.google.com/archive/p/drst/source/default/source",
        "code URL  2": "",
        "PDF URL": "http://cseweb.ucsd.edu/~ravir/274/15/papers/drst.pdf",
        "License type": "Intel Corporation",
        "Build mechanism": "IDE Project (VS,..)",
        "Mandatory Software dependencies": "Open-source libraries",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 5,
        "Feedbacks [easy to configure/build (5=easy)]": 5,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": 5,
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 3,
        "Feedbacks [Interface user-friendly (5=easy)]": 5,
        "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions",
        "Authors": "Academia",
        "ACM 1": "Ray tracing",
        "ACM 2": "Texturing",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Windows",
        "General comments": "The code was easy to run on Windows with VS2017. I only needed to upgrade the solution and retarget the project. I do not have the required Intel C++ Compiler XE 14.0, but the code compiled directly when changing the Intel C++ compiler target to Visual Studio 2017 (Configuration properties -> General -> Platform Toolset), probably at the expense of slower runtimes.\nI managed to get the crown to run at about 12 down to 8 Mrays/s as time passes, using BVH4, on a 2017 laptop with a 4-core Intel Core i7-7700 HQ @ 2.8GHz (the paper gives 10Mrays/s in 2014 for this scene on a lower end laptop with \"a 4-core Intel Haswell Core i7-4750HQ CPU clocked at 2.0 GHz and with a turbo frequency of 3.2 GHz\" but compiled with the Intel compiler).",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 33,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "embree",
        "Project URL": "http://fileadmin.cs.lth.se/graphics/research/papers/2014/drst/",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Rendering",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 5,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 1,
        "Paper authors": [
            {
                "given": "Rasmus",
                "family": "Barringer",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Tomas",
                "family": "Akenine-M\u00f6ller",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Efficient and Precise Interactive Hand Tracking Through Joint, Continuous Optimization of Pose and Correspondences",
        "DOI": "10.1145/2897824.2925965",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://www.samehkhamis.com/taylor-siggraph2016.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Virtual reality",
        "ACM 2": "Interaction techniques",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 168,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2016,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Virtual Reality",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Jonathan",
                "family": "Taylor",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Microsoft Research"
                    }
                ]
            },
            {
                "given": "Benjamin",
                "family": "Luff",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of Abertay"
                    }
                ]
            },
            {
                "given": "Arran",
                "family": "Topalian",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of Abertay"
                    }
                ]
            },
            {
                "given": "Erroll",
                "family": "Wood",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of Cambridge"
                    }
                ]
            },
            {
                "given": "Sameh",
                "family": "Khamis",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Microsoft Research"
                    }
                ]
            },
            {
                "given": "Pushmeet",
                "family": "Kohli",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Microsoft Research"
                    }
                ]
            },
            {
                "given": "Shahram",
                "family": "Izadi",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Microsoft Research"
                    }
                ]
            },
            {
                "given": "Richard",
                "family": "Banks",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Microsoft Research"
                    }
                ]
            },
            {
                "given": "Andrew",
                "family": "Fitzgibbon",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Microsoft Research"
                    }
                ]
            },
            {
                "given": "Jamie",
                "family": "Shotton",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Microsoft Research"
                    }
                ]
            },
            {
                "given": "Lucas",
                "family": "Bordeaux",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Microsoft Research"
                    }
                ]
            },
            {
                "given": "Thomas",
                "family": "Cashman",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Microsoft Research"
                    }
                ]
            },
            {
                "given": "Bob",
                "family": "Corish",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Microsoft Research"
                    }
                ]
            },
            {
                "given": "Cem",
                "family": "Keskin",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Microsoft Research"
                    }
                ]
            },
            {
                "given": "Toby",
                "family": "Sharp",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Microsoft Research"
                    }
                ]
            },
            {
                "given": "Eduardo",
                "family": "Soto",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "McMaster University"
                    }
                ]
            },
            {
                "given": "David",
                "family": "Sweeney",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Microsoft Research"
                    }
                ]
            },
            {
                "given": "Julien",
                "family": "Valentin",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of Oxford"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Efficient dynamic skinning with low-rank helper bone controllers",
        "DOI": "10.1145/2897824.2925905",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://mukai-lab.org/content/S2016Mukai.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Animation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 15,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "https://mukai-lab.org/publications/siggraph2016/",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2016,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Animation",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Tomohiko",
                "family": "Mukai",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Tokai University"
                    }
                ]
            },
            {
                "given": "Shigeru",
                "family": "Kuriyama",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Toyohashi University of Technology"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Efficient GPU Rendering of Subdivision Surfaces using Adaptive Quadtrees",
        "DOI": "10.1145/2897824.2925874",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://graphics.stanford.edu/~niessner/papers/2016/4subdiv/brainerd2016efficient.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Rasterization",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 12,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "http://www.niessnerlab.org/projects/brainerd2016efficient.html",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2016,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Rendering",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Wade",
                "family": "Brainerd",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Activision"
                    }
                ]
            },
            {
                "given": "Tim",
                "family": "Foley",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "NVIDIA"
                    }
                ]
            },
            {
                "given": "Manuel",
                "family": "Kraemer",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "NVIDIA"
                    }
                ]
            },
            {
                "given": "Henry",
                "family": "Moreton",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "NVIDIA"
                    }
                ]
            },
            {
                "given": "Matthias",
                "family": "Nie\u00dfner",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Stanford University"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Efficient reflectance capture using an autoencoder",
        "DOI": "10.1145/3197517.3201279",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://www.cad.zju.edu.cn/home/hwu/publications/autoenc/LDAE_SIG18_lq.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Reflectance modeling",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 11,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "http://www.cad.zju.edu.cn/home/hwu/publications/autoenc/project.html",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Rendering",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 1,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Kaizhang",
                "family": "Kang",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Zhejiang University, China"
                    }
                ]
            },
            {
                "given": "Zimin",
                "family": "Chen",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Zhejiang University, China"
                    }
                ]
            },
            {
                "given": "Jiaping",
                "family": "Wang",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Sinovation Ventures"
                    }
                ]
            },
            {
                "given": "Kun",
                "family": "Zhou",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Zhejiang University, China"
                    }
                ]
            },
            {
                "given": "Hongzhi",
                "family": "Wu",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Zhejiang University, China"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Efficient rendering of layered materials using an atomic decomposition with statistical operators",
        "DOI": "10.1145/3197517.3201289",
        "PDF availability (beside dl.acm)": "On an open archive arXiv or similar open archive, On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on the authors website or project page (zip file, direct download...)",
        "Main languages": "C/C++, Shader language",
        "How long did take for you to evaluate the code this paper (if any)?": 3,
        "Build info / instructions": "README",
        "arXiv (page URL)": "https://hal.archives-ouvertes.fr/hal-01785457/",
        "code URL": "https://hal.archives-ouvertes.fr/hal-01785457v3/file/suppl.zip",
        "code URL  2": "",
        "PDF URL": "https://hal.archives-ouvertes.fr/hal-01785457/document",
        "License type": "unspecified",
        "Build mechanism": "Commandline instructions in README",
        "Mandatory Software dependencies": "Open-source libraries",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 3,
        "Feedbacks [easy to configure/build (5=easy)]": 5,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "N/A",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 5,
        "Feedbacks [Interface user-friendly (5=easy)]": 5,
        "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions, None",
        "Authors": "Private Companies",
        "ACM 1": "Reflectance modeling",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Linux",
        "General comments": "Many webgl demo are provided to validate many steps or approximation of the paper.\n The mitsuba plugin works well by carefully following the steps described in the readme and with an already working version of mitsuba. Scripts for reproducing figs 12 and 13 are provided.\nEasy to find/install dependencies: 2 because installing mitsuba on linux requires several changes on ubuntu 19.10.\n** In config.py I changed -std=c++11 into -std=gnu++11 ;\n** In mitsuba/build/release/mtsgui I changed QtCore, QtOpenGL (and so on) into Qt5Core, Qt5OpenGL (and so on)\n** in data/scons/qt5.py,line 392 changed QtCore into Qt5Core.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 11,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "mitsuba",
        "Project URL": "https://belcour.github.io/blog/research/2018/05/05/brdf-realtime-layered.html",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Rendering",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 5,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 1,
        "Documentation score": 1,
        "Paper authors": [
            {
                "given": "Laurent",
                "family": "Belcour",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Unity Technologies, FRANCE"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Eigenmode Compression for Modal Sound Models",
        "DOI": "10.1145/2601097.2601177",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://www.cs.cornell.edu/projects/Sound/modec/modec.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Geometric topology",
        "ACM 2": "Physical simulation",
        "ACM 3": "Shape modeling",
        "ACM 4": "Virtual reality",
        "ACM 5": "Simulation by animation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 38,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "http://www.cs.cornell.edu/projects/Sound/modec/",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2014,
        "Misc. comment": "project webpage states \"Code and Model Data Coming Soon!",
        "ACM 6": "Music retrieval",
        "ACM 7": "Sound and music computing",
        "Software Type": "",
        "Topic": "Animation",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 1,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Timothy R.",
                "family": "Langlois",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Steven S.",
                "family": "An",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Kelvin K.",
                "family": "Jin",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Doug L.",
                "family": "James",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 3,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=3&types=aaaaaaaa",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=49790013"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Embree: a kernel framework for efficient CPU ray tracing",
        "DOI": "10.1145/2601097.2601199",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on the authors website or project page (zip file, direct download...), on github, gitlab or other code platform",
        "Main languages": "C/C++",
        "How long did take for you to evaluate the code this paper (if any)?": 3,
        "Build info / instructions": "README, LICENSE or explicit license (e.g. in the readme / headers)",
        "arXiv (page URL)": "",
        "code URL": "https://github.com/embree/embree.git",
        "code URL  2": "",
        "PDF URL": "https://www.embree.org/papers/2014-Siggraph-Embree.pdf",
        "License type": "Apache License version 2.0",
        "Build mechanism": "Makefile, CMakeLists",
        "Mandatory Software dependencies": "Open-source libraries",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 5,
        "Feedbacks [easy to configure/build (5=easy)]": 5,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "N/A",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 5,
        "Feedbacks [Interface user-friendly (5=easy)]": "N/A",
        "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions, API documentation, Technical documentation (comments-doxygen...)",
        "Authors": "Private Companies",
        "ACM 1": "Ray tracing",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Linux",
        "General comments": "Very well maintained library. I tested the latest version of the library",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 248,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "libtbb/libglfw3/ispc(optional)",
        "Project URL": "https://www.embree.org/",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Rendering",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 5,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 1,
        "Documentation score": 2,
        "Paper authors": [
            {
                "given": "Ingo",
                "family": "Wald",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Sven",
                "family": "Woop",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Carsten",
                "family": "Benthin",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Gregory S.",
                "family": "Johnson",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Manfred",
                "family": "Ernst",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Emulating Displays with Continuously Varying Frame Rates",
        "DOI": "10.1145/2897824.2925879",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://resources.mpi-inf.mpg.de/FrameRateEmulation/paper.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Perception",
        "ACM 2": "Image processing",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 11,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "http://resources.mpi-inf.mpg.de/FrameRateEmulation/",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2016,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Image",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Krzysztof",
                "family": "Templin",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "MPI Informatik"
                    }
                ]
            },
            {
                "given": "Piotr",
                "family": "Didyk",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Saarland University, MMCI and MPI Informatik"
                    }
                ]
            },
            {
                "given": "Karol",
                "family": "Myszkowski",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "MPI Informatik"
                    }
                ]
            },
            {
                "given": "Hans-Peter",
                "family": "Seidel",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "MPI Informatik"
                    }
                ]
            }
        ],
        "Altmetric score": 1,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=1&types=tttttttt",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=10276300"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "End-to-end Optimization of Optics and Image Processing for Achromatic Extended Depth of Field and Super-resolution Imaging",
        "DOI": "10.1145/3197517.3201333",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution, On the author(s) repository (dropbox, github, drive, iCloud)",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on github, gitlab or other code platform",
        "Main languages": "Python",
        "How long did take for you to evaluate the code this paper (if any)?": 5,
        "Build info / instructions": "README",
        "arXiv (page URL)": "",
        "code URL": "https://github.com/vsitzmann/deepoptics",
        "code URL  2": "",
        "PDF URL": "https://drive.google.com/file/d/1Xums2qyqSGP_z_24HnYpM9gbRm1_uAzY/view",
        "License type": "unspecified",
        "Build mechanism": "Not applicable (python, Matlab..)",
        "Mandatory Software dependencies": "Open-source libraries, Closed source (e.g. commercial) software or libraries free for research purposes",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 4,
        "Feedbacks [easy to configure/build (5=easy)]": 5,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "N/A",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "Yes",
        "Available data (provided or url / ref)": "Training data",
        "License for the data (if any)": "Data is provided \"as is\" and without any express or implied warranties, including, without limitation, the implied warranties of merchantability and fitness for a particular purpose. External provider: Inria.",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 3,
        "Feedbacks [Interface user-friendly (5=easy)]": 5,
        "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions",
        "Authors": "Academia",
        "ACM 1": "Computational photography",
        "ACM 2": "Reconstruction",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Linux",
        "General comments": "I had to patch the environment.yml file to use up-to-date pip packages.\nI could train the network and see image results using tensorboard, however  it is not clear how this images should be compared with the results shown in the paper.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 26,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "tensorflow-gpu / protobuf / poppy",
        "Project URL": "https://vsitzmann.github.io/deepoptics/",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Image",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 3,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 4,
        "Documentation score": 1,
        "Paper authors": [
            {
                "given": "Vincent",
                "family": "Sitzmann",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Stanford University"
                    }
                ]
            },
            {
                "given": "Steven",
                "family": "Diamond",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Stanford University"
                    }
                ]
            },
            {
                "given": "Yifan",
                "family": "Peng",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "The University of British Columbia and Canada and Stanford University"
                    }
                ]
            },
            {
                "given": "Xiong",
                "family": "Dun",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "King Abdullah University of Science and Technology, Saudi Arabia"
                    }
                ]
            },
            {
                "given": "Stephen",
                "family": "Boyd",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Stanford University"
                    }
                ]
            },
            {
                "given": "Wolfgang",
                "family": "Heidrich",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "King Abdullah University of Science and Technology, Saudi Arabia"
                    }
                ]
            },
            {
                "given": "Felix",
                "family": "Heide",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Stanford University"
                    }
                ]
            },
            {
                "given": "Gordon",
                "family": "Wetzstein",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Stanford University"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Entropic Metric Alignment for Correspondence Problems",
        "DOI": "10.1145/2897824.2925903",
        "PDF availability (beside dl.acm)": "On an open archive arXiv or similar open archive, On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on the authors website or project page (zip file, direct download...), on github, gitlab or other code platform",
        "Main languages": "Matlab / Mathematica / ..",
        "How long did take for you to evaluate the code this paper (if any)?": 8,
        "Build info / instructions": "README",
        "arXiv (page URL)": "https://hal.archives-ouvertes.fr/hal-01305808",
        "code URL": "https://github.com/gpeyre/2016-SIGGRAPH-gw",
        "code URL  2": "https://people.csail.mit.edu/jsolomon/assets/gromovWassersteinDistance.m",
        "PDF URL": "https://people.csail.mit.edu/jsolomon/assets/gw.pdf",
        "License type": "unspecified",
        "Build mechanism": "Not applicable (python, Matlab..)",
        "Mandatory Software dependencies": "Paywall Closed source software or libraries",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 3,
        "Feedbacks [easy to configure/build (5=easy)]": 3,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": 3,
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 5,
        "Feedbacks [Interface user-friendly (5=easy)]": "N/A",
        "Documentation": "None",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Shape analysis",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": 5,
        "OS of the test": "Windows",
        "General comments": "The code would be a model in term of replicability as there is one matlab file for each figure in the paper.\nTo install the code, put the toolbox_fast_marching directory and labelpoints.m inside the external folder, and for some matlab files, install the CVX toolbox, which is done easily. You may need to recompile the toolbox_fast_marching in 64bits, which can be done by running compile_mex from the toolbox folder. \n\nHowever, for the toolbox to compile, you will need to change \nint dims[3] = {n,p,q};\nto\nmwSize dims[3] = {n,p,q};\nin perform_front_propagation_3d_mex.cpp, line 86.\n\nAlso in compile_mex.m, you need to change line 7, from\nmex mex/anisotropic-fm//perform_front_propagation_anisotropic.cpp\nto\nmex mex/perform_front_propagation_anisotropic.cpp\nAlso, in perform_front_propagation_anisotropic.cpp, lines 2-3, change \n#include \"anisotropic-fm/AnisotropicTensorDistance.h\"\n#include \"anisotropic-fm/AnisotropicTensorDistanceConfidence.h\"\nto\n#include \"anisotropic-fm-feth/AnisotropicTensorDistance.h\"\n#include \"anisotropic-fm-feth/AnisotropicTensorDistanceConfidence.h\"\nand more importantly download these missing files at http://read.pudn.com/downloads144/sourcecode/windows/system/627786/toolbox_fast_marching/mex/anisotropic-fm/AnisotropicTensorDistance.h__.htm\nhttp://read.pudn.com/downloads144/sourcecode/windows/system/627786/toolbox_fast_marching/mex/anisotropic-fm/AnisotropicTensorDistanceConfidence.h__.htm\n\nBeware the version at\nhttps://gforge.inria.fr/scm/viewvc.php/gcm/src/AnisotropicTensorDistanceConfidence.h?revision=10&view=co\ndoes not contain the appropriate constructor that takes a voronoi map as input.\n\nSimilarly, the missing GenericPradosSchemesForFastMarching_3D.h , Globals.h , FastMarching_WithOptimalDynamics.h , FastMarching.h, PriorityQueue.h can be downloaded at \nhttp://read.pudn.com/downloads144/sourcecode/windows/system/627786/toolbox_fast_marching/mex/anisotropic-fm/GenericPradosSchemesForFastMarching_3D.h__.htm\nhttps://gforge.inria.fr/scm/viewvc.php/gcm/src/Globals.h?revision=10&view=co\nhttp://read.pudn.com/downloads144/sourcecode/windows/system/627786/toolbox_fast_marching/mex/anisotropic-fm/FastMarching_WithOptimalDynamics.h__.htm\nhttp://read.pudn.com/downloads144/sourcecode/windows/system/627786/toolbox_fast_marching/mex/anisotropic-fm/FastMarching.h__.htm\nand be put in the same directory.\n\n- in perform_front_propagation_anisotropic.cpp line 45, replace\nint dims[3] = {w, h, d};\nby\nmwSize dims[3] = {w, h, d};\n\n- in fm2dAniso.cpp line 15, replace\nconst int* dim_h = mxGetDimensions(prhs[0]);\nby\nconst mwSize* dim_h = mxGetDimensions(prhs[0]);\n\n- in fm2dAniso.cpp line 45:\nint dims[2] = {Nx,Ny};\nto\nmwSize dims[2] = {Nx,Ny};\n\nThe necessary \"data\" folder is only available upon request due to copyrighted materials. We did not contact authors in such cases.\nIn practice, the following codes run without data folder: generateConvexFigure, generateInitialGuessFigure2, generateTimingFigure, testGWComputation2d, testNNMF, testPartial2DMatch (out of 33 test files).\nWhen running generateMeshExampleFigure with my own .off files, I run into an \"Undefined function 'sparse' for input arguments of type 'int64') which can be solved by addin \"|| ...\n   strcmp(version,'9.4.0.813654 (R2018a)')\" in line 54 of cotLaplacian.m (or type 'version' to know your matlab version).\n\nAfter that, the code works well and results in reasonables mappings.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 64,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "matlab / cvx / labelpoints / toolbox_fast_marching",
        "Project URL": "",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2016,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Geometry",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 5,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Justin",
                "family": "Solomon",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "MIT"
                    }
                ]
            },
            {
                "given": "Gabriel",
                "family": "Peyr\u00e9",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "CNRS & Univ. Paris-Dauphine"
                    }
                ]
            },
            {
                "given": "Vladimir G.",
                "family": "Kim",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Adobe Research"
                    }
                ]
            },
            {
                "given": "Suvrit",
                "family": "Sra",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "MIT"
                    }
                ]
            }
        ],
        "Altmetric score": 1,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=1&types=tttttttt",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=65665583"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Erosion thickness on medial axes of 3D shapes",
        "DOI": "10.1145/2897824.2925938",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on github, gitlab or other code platform",
        "Main languages": "C/C++",
        "How long did take for you to evaluate the code this paper (if any)?": 2,
        "Build info / instructions": "README, LICENSE or explicit license (e.g. in the readme / headers), AUTHORS or explicitly mentioned",
        "arXiv (page URL)": "",
        "code URL": "https://github.com/danielyan86129/ET",
        "code URL  2": "https://yajieyan.github.io/et_sig16/et.v2.zip",
        "PDF URL": "https://www.cse.wustl.edu/~taoju/research/et.pdf",
        "License type": "MPL",
        "Build mechanism": "IDE Project (VS,..)",
        "Mandatory Software dependencies": "Open-source libraries",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 5,
        "Feedbacks [easy to configure/build (5=easy)]": 4,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "N/A",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 4,
        "Feedbacks [Interface user-friendly (5=easy)]": 3,
        "Documentation": "API documentation, Technical documentation (comments-doxygen...)",
        "Authors": "Academia",
        "ACM 1": "Shape analysis",
        "ACM 2": "Computational geometry",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Windows",
        "General comments": "Compiling the project with Qt 5.12.6 instead of 5.7.0 (~40GB install) is relatively easy.\n- EtDev.sln: replace  qt5.7_msvc2015 by qt5.12_msvc2017\n- EtDev.vcxproj: replace Qt5Version_x0020_x64=\"qt5.7_msvc2015\" by  Qt5Version_x0020_x64=\"qt5.12_msvc2017\"\n- EtDev.vcxproj.user: replace C:\\Libs\\Qt\\Qt5.7.0\\5.7\\msvc2015_64 by the actual path of your Qt install (e.g., C:\\Libs\\Qt\\5.12.6\\msvc2017_64).\n- trimesh/include/Vec.h, line 819: #if (_MSC_VER != 1900)  should be replaced by #if (_MSC_VER <= 1900)\nThe program compiles and produces the same executable as the one provided on the author website. It is however not very easy to use, and it is undocumented. The startup is intuitive (load the hand medial axis, model and radius files provided in the sample data), but then parameter tuning and what steps need to be performed were not trivial to find. I managed to produce a clean hand skeleton nevertheless that somewhat looks like results shown in the paper.\nI assume the .r file contains a radius for each vertex of the medial axis .off file, so that should be relatively easy to produce given a medial axis code (not provided).\nWhile results were convincing on the hand model, models used in the paper are not provided.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 22,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "Qt / gflags / trimesh / Eigen / boost / CGAL / oglplus / glew",
        "Project URL": "https://yajieyan.github.io/project/et/",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2016,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Geometry",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 4,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 1,
        "Paper authors": [
            {
                "given": "Yajie",
                "family": "Yan",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Washington Univ. in St. Louis"
                    }
                ]
            },
            {
                "given": "Kyle",
                "family": "Sykes",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "St. Louis Univ."
                    }
                ]
            },
            {
                "given": "Erin",
                "family": "Chambers",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "St. Louis Univ."
                    }
                ]
            },
            {
                "given": "David",
                "family": "Letscher",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "St. Louis Univ."
                    }
                ]
            },
            {
                "given": "Tao",
                "family": "Ju",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Washington Univ. in St. Louis"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Estimating Image Depth Using Shape Collections",
        "DOI": "10.1145/2601097.2601159",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 2,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://ai.stanford.edu/~haosu/SIG14/imageShapeNet.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Randomness, geometry and discrete structures",
        "ACM 2": "Shape modeling",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 88,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "http://ai.stanford.edu/~haosu/SIG14/depthtransfer.html",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2014,
        "Misc. comment": "The 2014 paper project page mentions two followup papers (sigasia 2015 and ICCV 2015) that may contain some relevant code if we want to reimplement the paper (without more details). We have decided not to evaluate the replicability of the paper.",
        "Software Type": "",
        "Topic": "Image",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 3,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Hao",
                "family": "Su",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Qixing",
                "family": "Huang",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Niloy J.",
                "family": "Mitra",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Yangyan",
                "family": "Li",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Leonidas",
                "family": "Guibas",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Eulerian-on-lagrangian cloth simulation",
        "DOI": "10.1145/3197517.3201281",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on github, gitlab or other code platform",
        "Main languages": "C/C++",
        "How long did take for you to evaluate the code this paper (if any)?": 5,
        "Build info / instructions": "README, LICENSE or explicit license (e.g. in the readme / headers), AUTHORS or explicitly mentioned",
        "arXiv (page URL)": "",
        "code URL": "https://github.com/sueda/eol-cloth",
        "code URL  2": "",
        "PDF URL": "http://faculty.cs.tamu.edu/sueda/projects/eol-cloth/WPLS2018.pdf",
        "License type": "MIT",
        "Build mechanism": "CMakeLists",
        "Mandatory Software dependencies": "Open-source libraries, Closed source (e.g. commercial) software or libraries free for research purposes",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 4,
        "Feedbacks [easy to configure/build (5=easy)]": 4,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": 5,
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "N/A",
        "Feedbacks [Interface user-friendly (5=easy)]": "N/A",
        "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions",
        "Authors": "Academia",
        "ACM 1": "Physical simulation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Mac OS",
        "General comments": "Hardcoded path in the CMakeLists\n\nNeeds MOSEK or GUROBI (commercial free for academic) for the \"online\" mode (optional)\n\nNeeded to replace path\\file to path/file\nOpenmp not mentioned in the deps (I have commented the #include<omp.h>)\n\nBuild issue :\n                                                ^\n/Users/tmp/eol-cloth/src/parseParams.cpp:52:3: error: call to function 'parse'\n      that is neither visible in the template definition nor found by argument-dependent lookup",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 4,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "http://faculty.cs.tamu.edu/sueda/projects/eol-cloth/",
        "Did I manage to perform a complete test (deps/build)?": "No due to technical issue",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Animation",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "N/A",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 3,
        "Documentation score": 1,
        "Paper authors": [
            {
                "given": "Nicholas J.",
                "family": "Weidner",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Texas A&M University"
                    }
                ]
            },
            {
                "given": "Kyle",
                "family": "Piddington",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "California Polytechnic State University"
                    }
                ]
            },
            {
                "given": "David I. W.",
                "family": "Levin",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "The University of Toronto"
                    }
                ]
            },
            {
                "given": "Shinjiro",
                "family": "Sueda",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Texas A&M University"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Example-based Plastic Deformation of Rigid Bodies",
        "DOI": "10.1145/2897824.2925979",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No but pseudo-code in the PDF",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://cal.cs.umbc.edu/Papers/Jones-2016-EPD/Jones-2016-EPD.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Physical simulation",
        "ACM 2": "Simulation by animation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 16,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "https://cal.cs.umbc.edu/Papers/Jones-2016-EPD/",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2016,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Animation",
        "Deep learning": "True",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": 1,
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Ben",
                "family": "Jones",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "University of Denver"
                    }
                ]
            },
            {
                "given": "Nils",
                "family": "Thuerey",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Technical University of Munich"
                    }
                ]
            },
            {
                "given": "Tamar",
                "family": "Shinar",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of California, Riverside"
                    }
                ]
            },
            {
                "given": "Adam W.",
                "family": "Bargteil",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of Maryland, Baltimore County"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Example-based Turbulence Style Transfer",
        "DOI": "10.1145/3197517.3201398",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No but code pseudo-code in the PDF",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 2,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://nishitalab.org/user/syuhei/TurbuStyleTrans/paper.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Physical simulation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 8,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "http://nishitalab.org/user/syuhei/TurbuStyleTrans/turbu_styletrans.html",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Animation",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": true,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": 2,
        "Reviewer": 3,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Syuhei",
                "family": "Sato",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Dwango CG Research"
                    }
                ]
            },
            {
                "given": "Yoshinori",
                "family": "Dobashi",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Hokkaido University and Dwango CG Research"
                    }
                ]
            },
            {
                "given": "Theodore",
                "family": "Kim",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Pixar Animation Studios"
                    }
                ]
            },
            {
                "given": "Tomoyuki",
                "family": "Nishita",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Dwango CG Research and Hiroshima Shudo University"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Exploratory Font Selection Using Crowdsourced Attributes",
        "DOI": "10.1145/2601097.2601110",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on the authors website or project page (zip file, direct download...)",
        "Main languages": "Matlab / Mathematica / ..",
        "How long did take for you to evaluate the code this paper (if any)?": 2,
        "Build info / instructions": "README, LICENSE or explicit license (e.g. in the readme / headers), AUTHORS or explicitly mentioned",
        "arXiv (page URL)": "",
        "code URL": "http://www.dgp.toronto.edu/~donovan/font/similarity.zip",
        "code URL  2": "",
        "PDF URL": "http://www.dgp.toronto.edu/~donovan/font/fontSelection.pdf",
        "License type": "Creative Commons license:  Attribution-NonCommercial (CC BY-NC)",
        "Build mechanism": "Not applicable (python, Matlab..)",
        "Mandatory Software dependencies": "Paywall Closed source software or libraries",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 5,
        "Feedbacks [easy to configure/build (5=easy)]": 5,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "N/A",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "Yes",
        "Available data (provided or url / ref)": "Pre-trained models / Hardcoded data / lookup tables /...",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 3,
        "Feedbacks [Interface user-friendly (5=easy)]": 3,
        "Documentation": "None",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Integrated and visual development environments",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Linux",
        "General comments": "The code works out of the box for learning the similarity. However only the metric learning part is provided and it is not trivial to test it on two new fonts since it would require computing features for which no code is provided.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 91,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "matlab",
        "Project URL": "http://www.dgp.toronto.edu/~donovan/font/",
        "Did I manage to perform a complete test (deps/build)?": "No due to technical issue",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Image",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 3,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 1,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Peter",
                "family": "O'Donovan",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "J\u0101nis",
                "family": "L\u012bbeks",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Aseem",
                "family": "Agarwala",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Aaron",
                "family": "Hertzmann",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Extending the graphics pipeline with adaptive, multi-rate shading",
        "DOI": "10.1145/2601097.2601105",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No but pseudo-code in the PDF",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 2,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://graphics.cs.cmu.edu/projects/multirate/multirate.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Graphics processors",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 42,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "http://graphics.cs.cmu.edu/projects/multirate/",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2014,
        "Misc. comment": "Shader snippets very precisely describer.",
        "Software Type": "",
        "Topic": "Rendering",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": 4,
        "Reviewer": 1,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Yong",
                "family": "He",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Yan",
                "family": "Gu",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Kayvon",
                "family": "Fatahalian",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 9,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=9&types=aaaaaaaa",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=10772874"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Eyeglasses-free Display: Towards Correcting Visual Aberrations with Computational Light Field Displays",
        "DOI": "10.1145/2601097.2601122",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on the authors website or project page (zip file, direct download...)",
        "Main languages": "Matlab / Mathematica / ..",
        "How long did take for you to evaluate the code this paper (if any)?": 5,
        "Build info / instructions": "README, LICENSE or explicit license (e.g. in the readme / headers), AUTHORS or explicitly mentioned",
        "arXiv (page URL)": "",
        "code URL": "http://graphics.berkeley.edu/papers/Huang-EFD-2014-08/supplement.zip",
        "code URL  2": "",
        "PDF URL": "http://graphics.berkeley.edu/papers/Huang-EFD-2014-08/Huang-EFD-2014-08.pdf",
        "License type": "Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:      * Redistributions of source code must retain the above copyright       notice, this list of conditions and the following disclaimer.     * Redistributions in binary form must reproduce the above copyright       notice, this list of conditions and the following disclaimer in       the documentation and/or other materials provided with the distribution     * Neither the name of the University of British Columbia nor the names       of its contributors may be used to endorse or promote products derived       from this software without specific prior written permission.",
        "Build mechanism": "Not applicable (python, Matlab..)",
        "Mandatory Software dependencies": "Open-source libraries, Paywall Closed source software or libraries",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "N/A",
        "Feedbacks [easy to configure/build (5=easy)]": "N/A",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": 5,
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 4,
        "Feedbacks [Interface user-friendly (5=easy)]": 4,
        "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions, API documentation, Technical documentation (comments-doxygen...)",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Image manipulation",
        "ACM 2": "Rendering",
        "ACM 3": "Human computer interaction (HCI)",
        "ACM 4": "Displays and imagers",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Linux",
        "General comments": "I had to use another version of l-bfgs-b to make it work with Matlab2019b on linux. I found it at https://github.com/stephenbeckr/L-BFGS-B-C. Simply copied the lbfgsb_wrapper.mexa64  and all .m files from the downloaded L-BFGS-B-C/Matlab to LBFGSB/ directory in the provided code. Most images of the paper, and the code runs on it, however the hardware to actually see the result was not available.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 94,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "matlab/L-BFGS-B",
        "Project URL": "http://graphics.berkeley.edu/papers/Huang-EFD-2014-08/index.html",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Virtual Reality",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 4,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 1,
        "Documentation score": 2,
        "Paper authors": [
            {
                "given": "Fu-Chung",
                "family": "Huang",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Gordon",
                "family": "Wetzstein",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Brian A.",
                "family": "Barsky",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Ramesh",
                "family": "Raskar",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 42.008,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=43&types=maaabbbw",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=2545324"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Fabricating reflectors for displaying multiple images",
        "DOI": "10.1145/3197517.3201400",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://ksakurai.sakura.ne.jp/SG18/SG18_pv/fabricating_reflector_sig2018_fin2.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Reflectance modeling",
        "ACM 2": "Image manipulation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 1,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "http://ksakurai.sakura.ne.jp/SG18/",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Fabrication",
        "Deep learning": "True",
        "hasThumbnail": true,
        "Open access": true,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Kaisei",
                "family": "Sakurai",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Dwango CG Research"
                    }
                ]
            },
            {
                "given": "Yoshinori",
                "family": "Dobashi",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Hokkaido University and Dwango CG Research"
                    }
                ]
            },
            {
                "given": "Kei",
                "family": "Iwasaki",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Wakayama University and Dwango CG Research"
                    }
                ]
            },
            {
                "given": "Tomoyuki",
                "family": "Nishita",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Dwango CG Research and Hiroshima Shudo University"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Faceshop: deep sketch-based face image editing",
        "DOI": "10.1145/3197517.3201393",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://home.inf.unibe.ch/~porteni/projects/faceshop/files/paper_final_author_version.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Image manipulation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 27,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "https://home.inf.unibe.ch/~porteni/projects/faceshop/",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Image",
        "Deep learning": "True",
        "hasThumbnail": true,
        "Open access": true,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 3,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Tiziano",
                "family": "Portenier",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "University of Bern, Switzerland"
                    }
                ]
            },
            {
                "given": "Qiyang",
                "family": "Hu",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of Bern, Switzerland"
                    }
                ]
            },
            {
                "given": "Attila",
                "family": "Szab\u00f3",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of Bern, Switzerland"
                    }
                ]
            },
            {
                "given": "Siavash Arjomand",
                "family": "Bigdeli",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of Bern, Switzerland"
                    }
                ]
            },
            {
                "given": "Paolo",
                "family": "Favaro",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of Bern, Switzerland"
                    }
                ]
            },
            {
                "given": "Matthias",
                "family": "Zwicker",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of Maryland"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Factored Axis-Aligned Filtering for Rendering Multiple Distribution Effects",
        "DOI": "10.1145/2601097.2601113",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://cseweb.ucsd.edu/~ravir/aaf.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 21,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "http://graphics.berkeley.edu/papers/Udaymehta-FAA-2014-07/index.html",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2014,
        "Misc. comment": "Project page returns 404 error",
        "Software Type": "",
        "Topic": "Rendering",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": true,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 4,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Soham Uday",
                "family": "Mehta",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "JiaXian",
                "family": "Yao",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Ravi",
                "family": "Ramamoorthi",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Fredo",
                "family": "Durand",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 3,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=3&types=aaaaaaaa",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=49750604"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Fast and deep deformation approximations",
        "DOI": "10.1145/3197517.3201300",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://graphics.berkeley.edu/papers/Bailey-FDD-2018-08/Bailey-FDD-2018-08.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Neural networks",
        "ACM 2": "Animation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 9,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "http://graphics.berkeley.edu/papers/Bailey-FDD-2018-08/index.html",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Animation",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 3,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Stephen W.",
                "family": "Bailey",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "University of California"
                    }
                ]
            },
            {
                "given": "Dave",
                "family": "Otte",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "DreamWorks Animation"
                    }
                ]
            },
            {
                "given": "Paul",
                "family": "Dilorenzo",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "DreamWorks Animation"
                    }
                ]
            },
            {
                "given": "James F.",
                "family": "O'Brien",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of California"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Fast and Exact Discrete Geodesic Computation Based on Triangle-Oriented Wavefront Propagation",
        "DOI": "10.1145/2897824.2925930",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution, Other (web, research gate, semantic scholar,...)",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on github, gitlab or other code platform",
        "Main languages": "C/C++",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "README",
        "arXiv (page URL)": "",
        "code URL": "https://github.com/YipengQin/VTP_source_code",
        "code URL  2": "",
        "PDF URL": "https://i.cs.hku.hk/~yzyu/publication/VTPgeodesic-sig2016.pdf",
        "License type": "unspecified",
        "Build mechanism": "None",
        "Mandatory Software dependencies": "None",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "N/A",
        "Feedbacks [easy to configure/build (5=easy)]": 5,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": 5,
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 5,
        "Feedbacks [Interface user-friendly (5=easy)]": "N/A",
        "Documentation": "Technical documentation (comments-doxygen...)",
        "Authors": "Academia",
        "ACM 1": "Shape modeling",
        "ACM 2": "Computational geometry",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Windows",
        "General comments": "The code comes with no makefile, but it is straightforward to compile it (a single main.cpp and a few .h, with no external dependencies, which is ideal). Given the stdafx.h, I compiled it with Visual Studio 2017, creating a solution in no effort. \nHowever, std::auto_ptr is soon to be deprecated. Right now, you need to #include <memory> in  geodesic_memory.h to compile it. Some people mention the preprocessor directive _HAS_AUTO_PTR_ETC=1 but this was not useful for me (perhaps VS2019).\nData were not provided, so I computed geodesics on meshes of my own. I managed to compute single source/all destinations geodesics of a 474K triangle mesh in 4.8 seconds on a 2.8GHz laptop, which matches timings in the paper (382K triangles in 4.13 seconds, on a 3.4GHz desktop machine).",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 24,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2016,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Geometry",
        "Deep learning": "True",
        "hasThumbnail": true,
        "Open access": true,
        "Feedbacks [could reproduce results (5=highly confident)]": 5,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 1,
        "Paper authors": [
            {
                "given": "Yipeng",
                "family": "Qin",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Bournemouth University"
                    }
                ]
            },
            {
                "given": "Xiaoguang",
                "family": "Han",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "The University of Hong Kong"
                    }
                ]
            },
            {
                "given": "Hongchuan",
                "family": "Yu",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Bournemouth University"
                    }
                ]
            },
            {
                "given": "Yizhou",
                "family": "Yu",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "The University of Hong Kong"
                    }
                ]
            },
            {
                "given": "Jianjun",
                "family": "Zhang",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Bournemouth University"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Fast approximations for boundary element based brittle fracture simulation",
        "DOI": "10.1145/2897824.2925902",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on github, gitlab or other code platform",
        "Main languages": "C/C++",
        "How long did take for you to evaluate the code this paper (if any)?": 10,
        "Build info / instructions": "README, LICENSE or explicit license (e.g. in the readme / headers), AUTHORS or explicitly mentioned",
        "arXiv (page URL)": "",
        "code URL": "https://github.com/david-hahn/FractureRB",
        "code URL  2": "",
        "PDF URL": "http://pub.ist.ac.at/group_wojtan/projects/2016_Hahn_FastFracture/download/2016_Hahn_FastFracture.pdf",
        "License type": "GPL",
        "Build mechanism": "CMakeLists",
        "Mandatory Software dependencies": "Open-source libraries",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 5,
        "Feedbacks [easy to configure/build (5=easy)]": 3,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": 1,
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "N/A",
        "Feedbacks [Interface user-friendly (5=easy)]": "N/A",
        "Documentation": "None",
        "Authors": "Academia",
        "ACM 1": "Physical Simulation",
        "ACM 2": "Integral Equations",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Linux",
        "General comments": "I was unable to compile. I fixed the CMakeLists to include HyENA (provided as a .so library) and openvdb as well as zlib, tbb and eigen properly, so configuration works. However the version of openvdb is not compatible: MeshToVolume is not a type anymore in openvdb and I was not able to find the corresponding type (FractureRB/src/VDBWrapper.cpp:78:16: error: \u2018MeshToVolume\u2019 is not a member of \u2018openvdb::v5_0::tools\u2019).",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 13,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "Openvdb/eigen/zlib/tbb/HyENA",
        "Project URL": "http://pub.ist.ac.at/group_wojtan/projects/2016_Hahn_FastFracture/",
        "Did I manage to perform a complete test (deps/build)?": "No due to technical issue",
        "Year": 2016,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Animation",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": true,
        "Feedbacks [could reproduce results (5=highly confident)]": "N/A",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 1,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "David",
                "family": "Hahn",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "IST Austria"
                    }
                ]
            },
            {
                "given": "Chris",
                "family": "Wojtan",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "IST Austria"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Fast Multipole Representation of Diffusion Curves and Points",
        "DOI": "10.1145/2601097.2601187",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution, Other (web, research gate, semantic scholar,...)",
        "Is the code or software publicly available ?": "No but pseudo-code in the PDF",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://www.cs.columbia.edu/cg/fmr/fmdci-lowres.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Rendering",
        "ACM 2": "Image manipulation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 18,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "http://www.cs.columbia.edu/cg/fmr/",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2014,
        "Misc. comment": "The pseudo-code in the paper is relatively detailed, however the propose approach relies on the diffusion curves, which requires some effort to be implemented and ensure reproducilibity.",
        "Software Type": "",
        "Topic": "Image",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": 2,
        "Reviewer": 4,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Timothy",
                "family": "Sun",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Papoj",
                "family": "Thamjaroenporn",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Changxi",
                "family": "Zheng",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Fast winding numbers for soups and clouds",
        "DOI": "10.1145/3197517.3201337",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on github, gitlab or other code platform, as a module/component of an existing opensource library/software",
        "Main languages": "C/C++",
        "How long did take for you to evaluate the code this paper (if any)?": 3,
        "Build info / instructions": "README, LICENSE or explicit license (e.g. in the readme / headers)",
        "arXiv (page URL)": "",
        "code URL": "https://github.com/GavinBarill/fast-winding-number-soups",
        "code URL  2": "https://github.com/libigl/libigl",
        "PDF URL": "http://www.dgp.toronto.edu/projects/fast-winding-numbers/fast-winding-numbers-for-soups-and-clouds-siggraph-2018-barill-et-al.pdf",
        "License type": "Mozilla Public License",
        "Build mechanism": "CMakeLists",
        "Mandatory Software dependencies": "Open-source libraries",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 5,
        "Feedbacks [easy to configure/build (5=easy)]": 5,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "N/A",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 5,
        "Feedbacks [Interface user-friendly (5=easy)]": 2,
        "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions, API documentation",
        "Authors": "Academia",
        "ACM 1": "Mesh models",
        "ACM 2": "Point-based models",
        "ACM 3": "Volumetric models",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Mac OS",
        "General comments": "The program outputs  a \".dmat\" (libigl dense matrix format) and there is no explanation. The 717 tutorial in libigl (dev branch)  provides an example of the fast triangule soup approach.\n\n\n-- Additionnal test on windows --\nTested on Windows, for both clouds and soups: CMakeFile not useful (insists on building dependencies for which I already downloaded precompiled binaries - for soups). Relatively easy to make a new Visual Studio solution (minor things to take care: _CRT_SECURE_NO_WARNINGS and _USE_MATH_DEFINES), and install several dependencies (glad, glfw, ...). Data from the paper not provided, but some examples are given. For the libIGL tutorial, it was easy to build but it was not documented that the fast winding number code was in the dev branch (not the master) and that the corresponding tutorial is tutorial 717 and not 702 (which also provides supports for winding numbers).",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 8,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "libigl",
        "Project URL": "http://www.dgp.toronto.edu/projects/fast-winding-numbers/",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Geometry",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 3,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 3,
        "Documentation score": 1,
        "Paper authors": [
            {
                "given": "Gavin",
                "family": "Barill",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "University of Toronto, Canada"
                    }
                ]
            },
            {
                "given": "Neil G.",
                "family": "Dickson",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Side Effects Software Inc., Canada"
                    }
                ]
            },
            {
                "given": "Ryan",
                "family": "Schmidt",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Gradientspace, Canada"
                    }
                ]
            },
            {
                "given": "David I. W.",
                "family": "Levin",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of Toronto, Canada"
                    }
                ]
            },
            {
                "given": "Alec",
                "family": "Jacobson",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of Toronto, Canada"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "FEPR: Fast Energy Projection for Real-Time Simulation of Deformable Objects",
        "DOI": "10.1145/3197517.3201277",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://www.cs.utah.edu/~ladislav/dinev18FEPR/dinev18FEPR.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Physical simulation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 3,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "https://www.cs.utah.edu/~ladislav/dinev18FEPR/dinev18FEPR.html",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Animation",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 1,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Dimitar",
                "family": "Dinev",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "University of Utah"
                    }
                ]
            },
            {
                "given": "Tiantian",
                "family": "Liu",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of Pennsylvania"
                    }
                ]
            },
            {
                "given": "Jing",
                "family": "Li",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of Utah"
                    }
                ]
            },
            {
                "given": "Bernhard",
                "family": "Thomaszewski",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Universit\u00e9 de Montr\u00e9al"
                    }
                ]
            },
            {
                "given": "Ladislav",
                "family": "Kavan",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of Utah"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Fidelity vs. Simplicity: a Global Approach to Line Drawing Vectorization",
        "DOI": "10.1145/2897824.2925946",
        "PDF availability (beside dl.acm)": "On an open archive arXiv or similar open archive, On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on the authors website or project page (zip file, direct download...)",
        "Main languages": "Cannot answer",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "None",
        "arXiv (page URL)": "https://hal.inria.fr/hal-01309271",
        "code URL": "http://www-sop.inria.fr/reves/Basilic/2016/FLB16/2016sig_line_drawing_vectorization_executable_x64.zip",
        "code URL  2": "",
        "PDF URL": "https://hal.inria.fr/hal-01309271/document",
        "License type": "unspecified",
        "Build mechanism": "Not applicable (python, Matlab..)",
        "Mandatory Software dependencies": "None",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "N/A",
        "Feedbacks [easy to configure/build (5=easy)]": "N/A",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "N/A",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 1,
        "Feedbacks [Interface user-friendly (5=easy)]": 5,
        "Documentation": "None",
        "Authors": "Academia",
        "ACM 1": "Reconstruction",
        "ACM 2": "Parametric curve and surface models",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Windows",
        "General comments": "The software is quite intuitive and easy to use. There is a zipped data file that can be downloaded that includes the drawings for all figures in the paper which is ideal. However, there seems to be some parameter fiddling to obtain the results. For instance, in Fig. 11, I had to specify a \"min region size\" of 8 instead of the default 7 to reproduce the two rightmost images (and this parameter set also works for the two leftmost images).",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 41,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "http://www-sop.inria.fr/reves/Basilic/2016/FLB16/",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2016,
        "Misc. comment": "",
        "Software Type": "Binary",
        "Topic": "Image",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 5,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Jean-Dominique",
                "family": "Favreau",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Inria"
                    }
                ]
            },
            {
                "given": "Florent",
                "family": "Lafarge",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Inria"
                    }
                ]
            },
            {
                "given": "Adrien",
                "family": "Bousseau",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Inria"
                    }
                ]
            }
        ],
        "Altmetric score": 1,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=1&types=tttttttt",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=20676124"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "First-person Hyper-lapse videos",
        "DOI": "10.1145/2601097.2601195",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on the authors website or project page (zip file, direct download...)",
        "Main languages": "Cannot answer",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "None",
        "arXiv (page URL)": "",
        "code URL": "https://www.microsoft.com/en-us/download/details.aspx?id=52379",
        "code URL  2": "",
        "PDF URL": "https://www.microsoft.com/en-us/research/wp-content/uploads/2014/08/Kopf-Hyperlapse-SG14.pdf",
        "License type": "Commercial",
        "Build mechanism": "None",
        "Mandatory Software dependencies": "None",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "N/A",
        "Feedbacks [easy to configure/build (5=easy)]": "N/A",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "N/A",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 1,
        "Feedbacks [Interface user-friendly (5=easy)]": 5,
        "Documentation": "None",
        "Authors": "Private Companies",
        "ACM 1": "Computer graphics",
        "ACM 2": "Graphics recognition and interpretation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Windows",
        "General comments": "This paper has become a commercial product called \"Microsoft Hyperlapse Pro\". I can only suppose the software implements this paper (a link to this software is present on one of the author's page about this paper). The videos used in the paper are not shared, so I could only test on my own videos. It seems to work well overall, and the interface is very easy (2 clicks: import video and process).",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 165,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "Binary",
        "Topic": "Image",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 4,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Johannes",
                "family": "Kopf",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Michael F.",
                "family": "Cohen",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Richard",
                "family": "Szeliski",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 12,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=12&types=aaaaaaaa",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=41364266"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Fitting Procedural Yarn Models for Realistic Cloth Rendering",
        "DOI": "10.1145/2897824.2925932",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution, Other (web, research gate, semantic scholar,...)",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on the authors website or project page (zip file, direct download...)",
        "Main languages": "C/C++, Matlab / Mathematica / ..",
        "How long did take for you to evaluate the code this paper (if any)?": 10,
        "Build info / instructions": "README, LICENSE or explicit license (e.g. in the readme / headers)",
        "arXiv (page URL)": "",
        "code URL": "http://www.cs.cornell.edu/~kb/projects/ctcloth/code_data_v2.zip",
        "code URL  2": "",
        "PDF URL": "https://www.cs.cornell.edu/~kb/publications/SIG16ProceduralYarn.pdf",
        "License type": "custom",
        "Build mechanism": "IDE Project (VS,..), Not applicable (python, Matlab..)",
        "Mandatory Software dependencies": "Open-source libraries, Paywall Closed source software or libraries",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 4,
        "Feedbacks [easy to configure/build (5=easy)]": 4,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": 4,
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 5,
        "Feedbacks [Interface user-friendly (5=easy)]": "N/A",
        "Documentation": "None",
        "Authors": "Academia",
        "ACM 1": "Rendering",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Windows",
        "General comments": "The program comes with microCT scans and a window executable, which also launches matlab code. To be able to recompile the code with Visual Studio 2017, you need a number of steps :\n\n- MicroCT.cpp, line 1270, replace :\n std:vector<float> ellipse_s_vec(loopNum), ellipse_l_vec(loopNum), yarn_radius_vec(loopNum);\nby\nstd::vector<float> ellipse_s_vec(loopNum), ellipse_l_vec(loopNum), yarn_radius_vec(loopNum);\n(note the :: instead of : )\n\n- Util.h, line 99, remove the round function.\n\n- add the preprocessor directive _CRT_SECURE_NO_WARNINGS\n\n* The provided precompiled OpenCV was causing issues ; perhaps it had been compiled in 32 bits (?). I used a fresh OpenCV install instead, which led to a couple of additional edits :\n\n- in MicroCT.h, replace the opencv includes \n#include \"opencv/include/opencv/cv.h\"\n#include \"opencv/include/opencv/highgui.h\"\n#include \"opencv/include/opencv2/opencv.hpp\"\nby\n#include <opencv2/highgui.hpp>\n#include \"opencv2/opencv.hpp\"\n#include <opencv2/core/types_c.h>\n#include <opencv2/highgui/highgui_c.h>\n\n-replace opencv_core249.lib;opencv_highgui249.lib;opencv_features2d249.lib;opencv_imgproc249.lib; by opencv_world420.lib in the project linked libraries.\n\n- in MicroCT.cpp, line 784, replace \n\tellipse(Mat(displayImg), Point(C1.x, C1.y), Size(l, s), (double)rot_angle, 0, 360, Scalar(1.f, 0.f, 0.f));\n\tellipse(Mat(displayImg), Point(C2.x, C2.y), Size(l, s), (double)rot_angle, 0, 360, Scalar(0.f, 1.f, 0.f));\nby\n\tellipse(cv::cvarrToMat(displayImg), Point(C1.x, C1.y), Size(l, s), (double)rot_angle, 0, 360, Scalar(1.f, 0.f, 0.f));\n\tellipse(cv::cvarrToMat(displayImg), Point(C2.x, C2.y), Size(l, s), (double)rot_angle, 0, 360, Scalar(0.f, 1.f, 0.f));\n\n- in MicroCT.cpp, line 818, replace cv::Mat mat = cv::Mat(img, true); by cv::Mat mat = cv::cvarrToMat(img, true);\n\n- in MicroCT.cpp, line 1422, replace:\n\tellipse(Mat(displayImg), Point(C1.x, C1.y), Size(cvEL, cvES), (double)rot_angle, 0, 360, Scalar(1.f, 1.f, 1.f));\n\tellipse(Mat(displayImg), Point(C2.x, C2.y), Size(cvEL, cvES), (double)rot_angle, 0, 360, Scalar(1.f, 1.f, 1.f));\nby\n\tellipse(cv::cvarrToMat(displayImg), Point(C1.x, C1.y), Size(cvEL, cvES), (double)rot_angle, 0, 360, Scalar(1.f, 1.f, 1.f));\n\tellipse(cv::cvarrToMat(displayImg), Point(C2.x, C2.y), Size(cvEL, cvES), (double)rot_angle, 0, 360, Scalar(1.f, 1.f, 1.f));\n\n- in MicroCT.cpp, line 1610, replace\n\tellipse(Mat(displayImg), Point(C1.x, C1.y), Size(e_l, e_s), (double)rot1, 0, 360, Scalar(1.f, 1.f, 1.f));\n\tellipse(Mat(displayImg), Point(C2.x, C2.y), Size(e_l, e_s), (double)rot2, 0, 360, Scalar(1.f, 1.f, 1.f));\n\tellipse(Mat(displayImg), Point(C3.x, C3.y), Size(e_l, e_s), (double)rot3, 0, 360, Scalar(1.f, 1.f, 1.f));\nto\n\tellipse(cv::cvarrToMat(displayImg), Point(C1.x, C1.y), Size(e_l, e_s), (double)rot1, 0, 360, Scalar(1.f, 1.f, 1.f));\n\tellipse(cv::cvarrToMat(displayImg), Point(C2.x, C2.y), Size(e_l, e_s), (double)rot2, 0, 360, Scalar(1.f, 1.f, 1.f));\n\tellipse(cv::cvarrToMat(displayImg), Point(C3.x, C3.y), Size(e_l, e_s), (double)rot3, 0, 360, Scalar(1.f, 1.f, 1.f));\n\n* Ultimately, the code runs. I didn't have to change my matlab settings as proposed (in fact, I do not have the option 'Location based on Matlab startup rules' but only 'Last working folder from previous Matlab session').\nHowever, the code only produces text files that contain strands. I do not know how to render this .txt in Mitsuba, but it was easy to grasp the file structure and code a loader in my own path tracer (though with circular cross section for simplicity instead of elliptical as suggested in Algorithm 1). The file merely contains the number of fibers, and then, for each fiber, the number of segments, for each segment the X, Y, Z coordinates.\n\nNevertheless, the paper mentions a modified Mitsuba to be able to make the renderings, and the paper shows (impressive) renderings of fabrics, not just strands... Also, which reflectance model was used to render the fibers ?",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 29,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "matlab / opencv",
        "Project URL": "http://www.cs.cornell.edu/projects/ctcloth/",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2016,
        "Misc. comment": "Most of the time was spent in trying to visualize the results ; here, coding my own loader and renderer.",
        "Software Type": "Code",
        "Topic": "Rendering",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 3,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Shuang",
                "family": "Zhao",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "University of California, Irvine"
                    }
                ]
            },
            {
                "given": "Fujun",
                "family": "Luan",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Cornell University"
                    }
                ]
            },
            {
                "given": "Kavita",
                "family": "Bala",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Cornell University"
                    }
                ]
            }
        ],
        "Altmetric score": 78,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=78&types=mmmmmmmm",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=10784626"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Floating Scale Surface Reconstruction",
        "DOI": "10.1145/2601097.2601163",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on github, gitlab or other code platform",
        "Main languages": "C/C++",
        "How long did take for you to evaluate the code this paper (if any)?": 3,
        "Build info / instructions": "README, LICENSE or explicit license (e.g. in the readme / headers), AUTHORS or explicitly mentioned",
        "arXiv (page URL)": "",
        "code URL": "https://github.com/simonfuhrmann/mve",
        "code URL  2": "https://github.com/andre-schulz/mve",
        "PDF URL": "https://www.gcc.tu-darmstadt.de/media/gcc/papers/Fuhrmann-2014-FSS.pdf",
        "License type": "BSD",
        "Build mechanism": "CMakeLists",
        "Mandatory Software dependencies": "Open-source libraries",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 5,
        "Feedbacks [easy to configure/build (5=easy)]": 5,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "N/A",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 5,
        "Feedbacks [Interface user-friendly (5=easy)]": 5,
        "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions, API documentation, Technical documentation (comments-doxygen...)",
        "Authors": "Academia",
        "ACM 1": "Randomness, geometry and discrete structures",
        "ACM 2": "Shape modeling",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Windows",
        "General comments": "Contained in the MVE library. Very easy to build on windows using the CMAKE branch of the github project, especially given the number of dependencies (all shipped in a 3rd party directory). The dependencies I listed are the one required by the entire MVE library, but they may not be all used by the fssrecon app.\nIt was long to compile all dependencies, but it worked out of the box without any effort. A single very simple example (corresponding to Fig. 2 : four overlapping planar patches) is provided so it is hard to tell how well it works on reasonably complex cases.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 113,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "glew / zlib / libpng / libjpeg-turbo / libtiff / gtest / Qt5",
        "Project URL": "https://www.gcc.tu-darmstadt.de/home/proj/fssr/index.en.jsp",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Geometry",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 4,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 2,
        "Paper authors": [
            {
                "given": "Simon",
                "family": "Fuhrmann",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Michael",
                "family": "Goesele",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Flow-Guided Warping for Image-Based Shape Manipulation",
        "DOI": "10.1145/2897824.2925937",
        "PDF availability (beside dl.acm)": "On an open archive arXiv or similar open archive, On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 2,
        "Build info / instructions": "",
        "arXiv (page URL)": "https://hal.inria.fr/hal-01307571/",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://hal.inria.fr/hal-01307571/document",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Image manipulation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 2,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2016,
        "Misc. comment": "The authors mentioned a demo IOS app (http://bonneau.meylan.free.fr/ShwarpIt/ShwarpIt.html) but the app is not available anymore.",
        "Software Type": "",
        "Topic": "Image",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 3,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Romain",
                "family": "Vergne",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Univ. Grenoble Alpes, CNRS and Inria"
                    }
                ]
            },
            {
                "given": "Pascal",
                "family": "Barla",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Inria"
                    }
                ]
            },
            {
                "given": "Georges-Pierre",
                "family": "Bonneau",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Univ. Grenoble Alpes, CNRS and Inria"
                    }
                ]
            },
            {
                "given": "Roland W.",
                "family": "Fleming",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Justus Liebig Universitat Gie\u00dfen"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Flower Modeling via X-ray Computed Tomography",
        "DOI": "10.1145/2601097.2601124",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on the authors website or project page (zip file, direct download...)",
        "Main languages": "Cannot answer",
        "How long did take for you to evaluate the code this paper (if any)?": 2,
        "Build info / instructions": "README",
        "arXiv (page URL)": "",
        "code URL": "http://www2.riken.jp/brict/Ijiri/flowerctlib/takaflower2.zip",
        "code URL  2": "",
        "PDF URL": "http://takashiijiri.com/papers/ijiri_SIGGRAPH14_takaflower2.pdf",
        "License type": "unspecified",
        "Build mechanism": "Not applicable (python, Matlab..), None",
        "Mandatory Software dependencies": "Closed source (e.g. commercial) software or libraries free for research purposes",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 5,
        "Feedbacks [easy to configure/build (5=easy)]": 5,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": 5,
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 1,
        "Feedbacks [Interface user-friendly (5=easy)]": 1,
        "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions",
        "Authors": "Academia",
        "ACM 1": "Computational geometry",
        "ACM 2": "Shape modeling",
        "ACM 3": "Graphics systems and interfaces",
        "ACM 4": "Interest point and salient region detections",
        "ACM 5": "Graphics input devices",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Windows",
        "General comments": "The authors provide a user documentation to describe how to use their tool. They also mention a video on youtube (https://www.youtube.com/watch?v=yD_cSRJ7Gho) which allows to see how to use the GUI in practice (I couldn't use the tool without watching the video). \n\nNote that the tools depend on nvidia cgtoolkit, which is deprecated but still available for now (might not last for long).",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 27,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "nvidia cg toolkit",
        "Project URL": "http://www2.riken.jp/brict/Ijiri/flowerctlib/index.html",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "Binary",
        "Topic": "Geometry",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 5,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 4,
        "Documentation score": 1,
        "Paper authors": [
            {
                "given": "Takashi",
                "family": "Ijiri",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Shin",
                "family": "Yoshizawa",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Hideo",
                "family": "Yokota",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Takeo",
                "family": "Igarashi",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Fluid directed rigid body control using deep reinforcement learning",
        "DOI": "10.1145/3197517.3201334",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No but pseudo-code in the PDF",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 2,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://gamma.cs.unc.edu/DRL_FluidRigid/CoupleSolidFluidController.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Physical simulation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 10,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "http://gamma.cs.unc.edu/DRL_FluidRigid/",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Animation",
        "Deep learning": "True",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": 3,
        "Reviewer": 1,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Pingchuan",
                "family": "Ma",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Nankai University, China"
                    }
                ]
            },
            {
                "given": "Yunsheng",
                "family": "Tian",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Nankai University, China"
                    }
                ]
            },
            {
                "given": "Zherong",
                "family": "Pan",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of North Carolina at Chapel Hill"
                    }
                ]
            },
            {
                "given": "Bo",
                "family": "Ren",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Nankai University, China"
                    }
                ]
            },
            {
                "given": "Dinesh",
                "family": "Manocha",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of Maryland at College Park"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Foldsketch: enriching garments with physically reproducible folds",
        "DOI": "10.1145/3197517.3201310",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://www.cs.ubc.ca/labs/imager/tr/2018/FoldSketch/doc/FoldSketch.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Physical simulation",
        "ACM 2": "Mesh geometry models",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 10,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "http://www.cs.ubc.ca/labs/imager/tr/2018/FoldSketch/",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Fabrication",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 1,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Minchen",
                "family": "Li",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "The University of British Columbia"
                    }
                ]
            },
            {
                "given": "Alla",
                "family": "Sheffer",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "The University of British Columbia"
                    }
                ]
            },
            {
                "given": "Eitan",
                "family": "Grinspun",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Columbia University"
                    }
                ]
            },
            {
                "given": "Nicholas",
                "family": "Vining",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "The University of British Columbia"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Form-finding with polyhedral meshes made simple",
        "DOI": "10.1145/2601097.2601213",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://www.geometrie.tugraz.at/wallner/formfinding2.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Parametric curve and surface models",
        "ACM 2": "Volumetric models",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 80,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Geometry",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 4,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Chengcheng",
                "family": "Tang",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Xiang",
                "family": "Sun",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Alexandra",
                "family": "Gomes",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Johannes",
                "family": "Wallner",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Helmut",
                "family": "Pottmann",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Frame Fields: Anisotropic and Non-Orthogonal Cross Fields",
        "DOI": "10.1145/2601097.2601179",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on the authors website or project page (zip file, direct download...), on github, gitlab or other code platform",
        "Main languages": "C/C++",
        "How long did take for you to evaluate the code this paper (if any)?": 10,
        "Build info / instructions": "None",
        "arXiv (page URL)": "",
        "code URL": "http://vcg.isti.cnr.it/Publications/2014/PPTS14/source-code.zip",
        "code URL  2": "https://github.com/libigl",
        "PDF URL": "http://vcg.isti.cnr.it/Publications/2014/PPTS14/frame-fields.pdf",
        "License type": "unspecified",
        "Build mechanism": "None",
        "Mandatory Software dependencies": "Open-source libraries",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 2,
        "Feedbacks [easy to configure/build (5=easy)]": 2,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": 2,
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 3,
        "Feedbacks [Interface user-friendly (5=easy)]": 5,
        "Documentation": "Technical documentation (comments-doxygen...)",
        "Authors": "Academia",
        "ACM 1": "Parametric curve and surface models",
        "ACM 2": "Volumetric models",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Windows",
        "General comments": "The code provided on the project website consists in a single downloadable main.cpp file. It is unclear if the core implementation is in libigl (mentioned in the includes) or in the main.cpp. To make the main compile, it has to be updated since it relies on a very old libigl :\n- replace #include <igl/viewer/Viewer.h> by #include <igl/opengl/glfw/Viewer.h>\n- replace #include <igl/comiso/nrosy.h>,  <igl/comiso/miq.h> and <igl/comiso/frame_field.h> by #include <igl/copyleft/comiso/nrosy.h>,  <igl/copyleft/comiso/miq.h>, and <igl/copyleft/comiso/frame_field.h>\n- replace igl::Viewer& viewer by igl::opengl::glfw::Viewer& viewer in key_down(..)\n- replace igl::Viewer viewer; by igl::opengl::glfw::Viewer viewer; in main()\n- replace all viewer.data. by viewer.data(). (24 times)\n- replace viewer.core.show_lines by viewer.data().show_lines \n- replace viewer.core.show_texture by viewer.data().show_texture\n- replace igl::nrosy, igl::miq and igl::frame_field  by igl::copyleft::comiso::nrosy, igl::copyleft::comiso::miq and igl::copyleft::comiso::frame_field\n- replace Eigen::Matrix<char,Eigen::Dynamic,Eigen::Dynamic> texture_R, texture_G, texture_B; by Eigen::Matrix<unsigned char,Eigen::Dynamic,Eigen::Dynamic> texture_R, texture_G, texture_B; (otherwise you get an YOU_MIXED_DIFFERENT_NUMERIC_TYPES__YOU_NEED_TO_USE_THE_CAST_METHOD_OF_MATRIXBASE_TO_CAST_NUMERIC_TYPES_EXPLICITLY error in Eigen) ; you similarly need to change the parameters of line_texture by replacing char with unsigned char.\n- add #include <igl/local_basis.h> and #include <igl/rotate_vectors.h>\n- *** IGL bug *** : in igl/grad.cpp, in lines 226 and 228, grad_tri and grad_tet should be replaced by igl::grad_tri and igl::grad_tet since they are outside of the namespace.\nSince no CMakeList is given, you need to add the following preprocessor directives (tested on Visual Studio 2017) :\n- EIGEN_NO_DEPRECATED_WARNING; since Eigen::DynamicSparseMatrix is deprecated (and might just not work in the near future)\n- _CRT_SECURE_NO_WARNINGS; _SCL_SECURE_NO_DEPRECATE ; IGL_STATIC_LIBRARY (to prevent linking issues with Comiso), _USE_MATH_DEFINES\n- the blas shipped with Eigen should be compiled and linked to the project (it compiles smoothly with the provided CMakeList).\n- my list of linked libraries looks like: igl_opengl_glfw.lib;igl_opengl.lib;igl.lib;comiso.lib;igl_comiso.lib;eigen_blas_static.lib;glad.lib;glfw3.lib\n- I had to compile it in Multithread (MT), not the default Multithread DLL, due to the way igl is compiled by default (it seems).\nUltimately, I managed to run the provided example. The data is shipped with the IGL tutorial data. This is the only object provided with constraints stored as a dmat file (how can I generate one ?). All the figure results are provided in a separate archive, but without the constraint file, I cannot test whether it works.\nI also couldn't get the cross frame to render like in the paper : part of the shape show cross frames over a red mesh (by pressing '1'), but part of the shape remains white with no frames. This might be due to the char -> unsigned char bug fix (?).",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 60,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "libigl / comiso / eigen / glad / glfw /",
        "Project URL": "http://vcg.isti.cnr.it/Publications/2014/PPTS14/",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Geometry",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 3,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 1,
        "Paper authors": [
            {
                "given": "Daniele",
                "family": "Panozzo",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Enrico",
                "family": "Puppo",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Marco",
                "family": "Tarini",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Olga",
                "family": "Sorkine-Hornung",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "From capture to simulation: connecting forward and inverse problems in fluids",
        "DOI": "10.1145/2601097.2601147",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No but pseudo-code in the PDF",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 2,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://www.cs.ubc.ca/labs/imager/tr/2014/FromCaptureToSimulation/FromCaptureToSimulation_Gregson2014.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Image manipulation",
        "ACM 2": "Document scanning",
        "ACM 3": "Graphics recognition and interpretation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 51,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "http://www.cs.ubc.ca/labs/imager/tr/2014/FromCaptureToSimulation/",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Animation",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": 4,
        "Reviewer": 1,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "James",
                "family": "Gregson",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Ivo",
                "family": "Ihrke",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Nils",
                "family": "Thuerey",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Wolfgang",
                "family": "Heidrich",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 45,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=45&types=mmmmmmmm",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=3805099"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Full 3D Reconstruction of Transparent Objects",
        "DOI": "10.1145/3197517.3201286",
        "PDF availability (beside dl.acm)": "On an open archive arXiv or similar open archive",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on github, gitlab or other code platform",
        "Main languages": "C/C++, Matlab / Mathematica / ..",
        "How long did take for you to evaluate the code this paper (if any)?": 2,
        "Build info / instructions": "README",
        "arXiv (page URL)": "https://arxiv.org/abs/1805.03482",
        "code URL": "https://github.com/BojianWu/TransRecon",
        "code URL  2": "",
        "PDF URL": "https://vcc.tech/file/upload_file//image/research/att201805151205/FRT.pdf",
        "License type": "unspecified",
        "Build mechanism": "Not applicable (python, Matlab..)",
        "Mandatory Software dependencies": "Closed source (e.g. commercial) software or libraries free for research purposes",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 5,
        "Feedbacks [easy to configure/build (5=easy)]": "N/A",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "N/A",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "N/A",
        "Feedbacks [Interface user-friendly (5=easy)]": "N/A",
        "Documentation": "None",
        "Authors": "Academia",
        "ACM 1": "Point-based models",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": 1,
        "OS of the test": "Linux",
        "General comments": "We could not test it because we don't have the communication toolbox in matlab and it could not be translated to octave (missing functions).",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 5,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "matlab/matlab communication toolbox",
        "Project URL": "https://vcc.tech/research/2018/FRT",
        "Did I manage to perform a complete test (deps/build)?": "No due to missing specific hardware",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Image",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "N/A",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 1,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Bojian",
                "family": "Wu",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Shenzhen University, and University of Chinese Academy of Sciences"
                    }
                ]
            },
            {
                "given": "Yang",
                "family": "Zhou",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Shenzhen University and Huazhong University of Science & Technology"
                    }
                ]
            },
            {
                "given": "Yiming",
                "family": "Qian",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of Alberta"
                    }
                ]
            },
            {
                "given": "Minglun",
                "family": "Cong",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Memorial University of Newfoundland"
                    }
                ]
            },
            {
                "given": "Hui",
                "family": "Huang",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Shenzhen University"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Functional Map Networks for Analyzing and Browsing Large Shape Collections",
        "DOI": "10.1145/2601097.2601111",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://cs233.stanford.edu/ReferencedPapers/cycleS_hwg-fmnaelsc-14.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Computational geometry",
        "ACM 2": "Shape modeling",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 106,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Geometry",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 3,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Qixing",
                "family": "Huang",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Fan",
                "family": "Wang",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Leonidas",
                "family": "Guibas",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Fusion4D: Real-time Performance Capture of Challenging Scenes",
        "DOI": "10.1145/2897824.2925969",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution, Other (web, research gate, semantic scholar,...)",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://www.samehkhamis.com/dou-siggraph2016.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Private Companies",
        "ACM 1": "Motion capture",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 199,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2016,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Animation",
        "Deep learning": "True",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Mingsong",
                "family": "Dou",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Microsoft Research"
                    }
                ]
            },
            {
                "given": "Jonathan",
                "family": "Taylor",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Microsoft Research"
                    }
                ]
            },
            {
                "given": "Pushmeet",
                "family": "Kohli",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Microsoft Research"
                    }
                ]
            },
            {
                "given": "Vladimir",
                "family": "Tankovich",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Microsoft Research"
                    }
                ]
            },
            {
                "given": "Shahram",
                "family": "Izadi",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Microsoft Research"
                    }
                ]
            },
            {
                "given": "Sameh",
                "family": "Khamis",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Microsoft Research"
                    }
                ]
            },
            {
                "given": "Yury",
                "family": "Degtyarev",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Microsoft Research"
                    }
                ]
            },
            {
                "given": "Philip",
                "family": "Davidson",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Microsoft Research"
                    }
                ]
            },
            {
                "given": "Sean Ryan",
                "family": "Fanello",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Microsoft Research"
                    }
                ]
            },
            {
                "given": "Adarsh",
                "family": "Kowdle",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Microsoft Research"
                    }
                ]
            },
            {
                "given": "Sergio Orts",
                "family": "Escolano",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Microsoft Research"
                    }
                ]
            },
            {
                "given": "Christoph",
                "family": "Rhemann",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Microsoft Research"
                    }
                ]
            },
            {
                "given": "David",
                "family": "Kim",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Microsoft Research"
                    }
                ]
            }
        ],
        "Altmetric score": 3.9,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=4&types=tttttttf",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=9653839"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "G1 Non-Uniform Catmull-Clark Surfaces",
        "DOI": "10.1145/2897824.2925924",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution, Other (web, research gate, semantic scholar,...)",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://staff.ustc.edu.cn/~lixustc/Figs/2016_Eigen.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Parametric curve and surface models",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 9,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2016,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Geometry",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Xin",
                "family": "Li",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "USTC"
                    }
                ]
            },
            {
                "given": "G. Thomas",
                "family": "Finnigan",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Autodesk, Inc."
                    }
                ]
            },
            {
                "given": "Thomas W.",
                "family": "Sederberg",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Brigham Young University"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Gaussian material synthesis",
        "DOI": "10.1145/3197517.3201307",
        "PDF availability (beside dl.acm)": "On an open archive arXiv or similar open archive, On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on the authors website or project page (zip file, direct download...)",
        "Main languages": "Python",
        "How long did take for you to evaluate the code this paper (if any)?": 10,
        "Build info / instructions": "README, LICENSE or explicit license (e.g. in the readme / headers), AUTHORS or explicitly mentioned",
        "arXiv (page URL)": "https://arxiv.org/abs/1804.08369",
        "code URL": "https://users.cg.tuwien.ac.at/zsolnai/wp/wp-content/uploads/2018/04/gms-supplementary.zip",
        "code URL  2": "",
        "PDF URL": "https://users.cg.tuwien.ac.at/~zsolnai/wp/wp-content/uploads/2018/04/gms.pdf",
        "License type": "MIT",
        "Build mechanism": "Not applicable (python, Matlab..)",
        "Mandatory Software dependencies": "Open-source libraries",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 4,
        "Feedbacks [easy to configure/build (5=easy)]": "N/A",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": 4,
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "Yes",
        "Available data (provided or url / ref)": "Training data, Pre-trained models / Hardcoded data / lookup tables /...",
        "License for the data (if any)": "MIT",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 4,
        "Feedbacks [Interface user-friendly (5=easy)]": "N/A",
        "Documentation": "Technical documentation (comments-doxygen...)",
        "Authors": "Academia",
        "ACM 1": "Gaussian processes",
        "ACM 2": "Neural networks",
        "ACM 3": "Ray tracing",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Windows",
        "General comments": "There are minor bugs that need to be fixed, that include mixes of tab and space in the Python code (l.70 and 406 of gms.py), the syntax `i+1`.zfill(4) was deemed incorrect by my Python 3.6.8 (l.512, 674 and 690 of gms.py ; replaced by str(i+1).zfill(4)). Error as well on line 20 : from sklearn.gaussian_process import GaussianProcess ; it seems sklearn has evolved and doesn't have GaussianProcess (now separated as classifier or regressor). This line can be commented out.\nThe main issue for making it run was the lack of documentation both for installing and for running the code, appart from a short readme. In practice :\nGPy is a Gaussian Process library that needs to be installed with pip (I was looking for a GPy.py in the source folder!), sklearn needs to be installed, as well as climin, keras and tensorflow. Regarding tensorflow, it needs to be sufficiently recent to have tf_utils (1.14.0 worked, but not my older install).\nAlso, Pillow needs to be installed with pip. However, the trick is that it needs to be installed *with the Python provided with Blender* and not your usual Python install !\nUltimately, I could run gms.py and nn-predict.py (which both produce images) but I could not get the Python script within material-loader.blend to run : this script merely erased all .png images of the directory (included reference.png and resolution.png needed to run gms.py and nn-predict.py), and doesn't seem to produce anything. The code within this script is obscure : for instance, the file which likely should contain the output (called \"output.txt\") is merely erased at the begining of the code if it already exists, and then never used again later in the code for writing.\nI was expecting some kind of user interface (similarly to the one shown in the paper) to navigate within the latent space of BRDFs, but I didn't see one. Since there isn't much documentation, I am not sure what I am looking at and how to use the code.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 11,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "keras / tensorflow / blender / pillow / GPy / sklearn / climin",
        "Project URL": "https://users.cg.tuwien.ac.at/zsolnai/gfx/gaussian-material-synthesis/",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Rendering",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": true,
        "Feedbacks [could reproduce results (5=highly confident)]": 2,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 1,
        "Paper authors": [
            {
                "given": "K\u00e1roly",
                "family": "Zsolnai-Feh\u00e9r",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "TU Wien, Vienna, Austria"
                    }
                ]
            },
            {
                "given": "Peter",
                "family": "Wonka",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "KAUST, Thuwal, Kingdom of Saudi Arabia"
                    }
                ]
            },
            {
                "given": "Michael",
                "family": "Wimmer",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "TU Wien, Vienna, Austria"
                    }
                ]
            }
        ],
        "Altmetric score": 10.5,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=11&types=mttttttt",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=39014597"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "GazeStereo3D: Seamless Disparity Manipulations",
        "DOI": "10.1145/2897824.2925866",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on the authors website or project page (zip file, direct download...)",
        "Main languages": "Cannot answer",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "README",
        "arXiv (page URL)": "",
        "code URL": "http://resources.mpi-inf.mpg.de/GazeStereo3D/SeamlessRemappingDemo.zip",
        "code URL  2": "",
        "PDF URL": "http://resources.mpi-inf.mpg.de/GazeStereo3D/GazeStereo3D.pdf",
        "License type": "unspecified",
        "Build mechanism": "Not applicable (python, Matlab..)",
        "Mandatory Software dependencies": "None",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "N/A",
        "Feedbacks [easy to configure/build (5=easy)]": "N/A",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "N/A",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 1,
        "Feedbacks [Interface user-friendly (5=easy)]": 5,
        "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions",
        "Authors": "Academia",
        "ACM 1": "Perception",
        "ACM 2": "Image processing",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Windows",
        "General comments": "It is a windows binary only. Not all results in the paper are provided, but the software works well for the examples provided. However I could not test on a polarized screen.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 18,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "http://resources.mpi-inf.mpg.de/GazeStereo3D/",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2016,
        "Misc. comment": "",
        "Software Type": "Binary",
        "Topic": "Virtual Reality",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 5,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 1,
        "Paper authors": [
            {
                "given": "Petr",
                "family": "Kellnhofer",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "MIT CSAIL and MPI Informatik"
                    }
                ]
            },
            {
                "given": "Piotr",
                "family": "Didyk",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "MPI Informatik and Saarland University, MMCI"
                    }
                ]
            },
            {
                "given": "Karol",
                "family": "Myszkowski",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "MPI Informatik"
                    }
                ]
            },
            {
                "given": "Mohamed M.",
                "family": "Hefeeda",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Qatar Computing Research Institute"
                    }
                ]
            },
            {
                "given": "Hans-Peter",
                "family": "Seidel",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "MPI Informatik"
                    }
                ]
            },
            {
                "given": "Wojciech",
                "family": "Matusik",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "MIT CSAIL"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "genBRDF: Discovering New Analytic BRDFs with Genetic Programming",
        "DOI": "10.1145/2601097.2601193",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://web.eecs.umich.edu/~weimerw/p/brady_sig14.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Texturing",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 42,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2014,
        "Misc. comment": "The grammar of the genetic framework is given in the paper but not really a pseudo-code.",
        "Software Type": "",
        "Topic": "Rendering",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 3,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Adam",
                "family": "Brady",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Jason",
                "family": "Lawrence",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Pieter",
                "family": "Peers",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Westley",
                "family": "Weimer",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Generalized motorcycle graphs for imperfect quad-dominant meshes",
        "DOI": "10.1145/3197517.3201389",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on github, gitlab or other code platform",
        "Main languages": "C/C++",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "README, AUTHORS or explicitly mentioned",
        "arXiv (page URL)": "",
        "code URL": "https://github.com/NSchertler/GeneralizedMotorcycleGraph",
        "code URL  2": "",
        "PDF URL": "https://cims.nyu.edu/gcl/papers/2018-GMG.pdf",
        "License type": "unspecified",
        "Build mechanism": "Makefile, CMakeLists",
        "Mandatory Software dependencies": "Open-source libraries",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 5,
        "Feedbacks [easy to configure/build (5=easy)]": 5,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "N/A",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "N/A",
        "Feedbacks [Interface user-friendly (5=easy)]": "N/A",
        "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions, API documentation",
        "Authors": "Academia",
        "ACM 1": "Texturing",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Linux",
        "General comments": "Compilation successful and interface launched well but not able to load a mesh (nothing appears, many opengl invalid framebuffer errors).",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 2,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "boots/glu",
        "Project URL": "https://nyuscholars.nyu.edu/en/publications/generalized-motorcycle-graphs-for-imperfect-quad-dominant-meshes",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Geometry",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 1,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 1,
        "Documentation score": 1,
        "Paper authors": [
            {
                "given": "Nico",
                "family": "Schertler",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "TU Dresden, Germany"
                    }
                ]
            },
            {
                "given": "Daniele",
                "family": "Panozzo",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "New York University"
                    }
                ]
            },
            {
                "given": "Stefan",
                "family": "Gumhold",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "TU Dresden, Germany"
                    }
                ]
            },
            {
                "given": "Marco",
                "family": "Tarini",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Universit\u00e0 degli Studi di Milano, Italy and ISTI-CNR, Italy"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Generalized Non-Reflecting Boundaries for Fluid Re-Simulation",
        "DOI": "10.1145/2897824.2925963",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on the authors website or project page (zip file, direct download...)",
        "Main languages": "C/C++, Other",
        "How long did take for you to evaluate the code this paper (if any)?": 4,
        "Build info / instructions": "README, LICENSE or explicit license (e.g. in the readme / headers), AUTHORS or explicitly mentioned",
        "arXiv (page URL)": "",
        "code URL": "http://pub.ist.ac.at/group_wojtan/projects/2016_Bojsen-Hansen_GNRBfFRS/2016_Bojsen-Hansen_GNRBfFRS.zip",
        "code URL  2": "",
        "PDF URL": "http://pub.ist.ac.at/group_wojtan/projects/2016_Bojsen-Hansen_GNRBfFRS/2016_Bojsen-Hansen_GNRBfFRS.pdf",
        "License type": "MIT",
        "Build mechanism": "Makefile",
        "Mandatory Software dependencies": "Closed source (e.g. commercial) software or libraries free for research purposes",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 5,
        "Feedbacks [easy to configure/build (5=easy)]": 4,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": 3,
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 4,
        "Feedbacks [Interface user-friendly (5=easy)]": 4,
        "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions",
        "Authors": "Academia",
        "ACM 1": "Volumetric models",
        "ACM 2": "Modeling and simulation",
        "ACM 3": "Partial differential equations",
        "ACM 4": "Discretization",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Linux",
        "General comments": "To compile with Houdini 18.0.287, I needed to do the following changes in SIM_PMLAdvect.cpp: change \nUT_VoxelProbeCubeF srcProbe --> UT_VoxelProbeCube<fpreal32> srcProbe; (l278 and l358)\nand\nsrcProbe.setPlusArray(src->field()); --> srcProbe.setConstPlusArray(src->field()); (l283 and l363)",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 6,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "houdini",
        "Project URL": "http://alas.dk/publications/2016/GNRBfFRS/",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2016,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Animation",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": true,
        "Feedbacks [could reproduce results (5=highly confident)]": 3,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 1,
        "Documentation score": 1,
        "Paper authors": [
            {
                "given": "Morten",
                "family": "Bojsen-Hansen",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "IST Austria"
                    }
                ]
            },
            {
                "given": "Chris",
                "family": "Wojtan",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "IST Austria"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Generalizing Locomotion Style to New Animals With Inverse Optimal Regression",
        "DOI": "10.1145/2601097.2601192",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://grail.cs.washington.edu/projects/inverse_locomotion/paper/animal_motion_joint_inverse.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Animation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 24,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "https://grail.cs.washington.edu/projects/inverse_locomotion/",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Animation",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 4,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Kevin",
                "family": "Wampler",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Zoran",
                "family": "Popovi\u0107",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Jovan",
                "family": "Popovi\u0107",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 1,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=1&types=tttttttt",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=4523942"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Globally Optimal Toon Tracking",
        "DOI": "10.1145/2897824.2925872",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://www.cse.cuhk.edu.hk/~ttwong/papers/toontrack/toontrack.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Fine arts",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 5,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "https://www.cse.cuhk.edu.hk/~ttwong/papers/toontrack/toontrack.html",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2016,
        "Misc. comment": "In practice, a (partial?) unofficial reimplementation has been proposed in C# https://github.com/furaga/DemoShapeComperer",
        "Software Type": "",
        "Topic": "Image",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Haichao",
                "family": "Zhu",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "The Chinese University of Hong Kong"
                    }
                ]
            },
            {
                "given": "Xueting",
                "family": "Liu",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "The Chinese University of Hong Kong"
                    }
                ]
            },
            {
                "given": "Tien-Tsin",
                "family": "Wong",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "The Chinese University of Hong Kong"
                    }
                ]
            },
            {
                "given": "Pheng-Ann",
                "family": "Heng",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "The Chinese University of Hong Kong"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Gradient-domain processing within a texture atlas",
        "DOI": "10.1145/3197517.3201317",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on github, gitlab or other code platform",
        "Main languages": "C/C++",
        "How long did take for you to evaluate the code this paper (if any)?": 3,
        "Build info / instructions": "README, LICENSE or explicit license (e.g. in the readme / headers), AUTHORS or explicitly mentioned",
        "arXiv (page URL)": "",
        "code URL": "https://github.com/mkazhdan/TextureSignalProcessing",
        "code URL  2": "",
        "PDF URL": "http://hhoppe.com/atlasfilter.pdf",
        "License type": "BSD",
        "Build mechanism": "Makefile, IDE Project (VS,..)",
        "Mandatory Software dependencies": "Open-source libraries",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 5,
        "Feedbacks [easy to configure/build (5=easy)]": 4,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": 5,
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 4,
        "Feedbacks [Interface user-friendly (5=easy)]": 3,
        "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Computer graphics",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Linux",
        "General comments": "I had to rename a \"triangle.h\" to \"Triangle.h\" file.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 4,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "glew/glut/opengl",
        "Project URL": "http://hhoppe.com/proj/atlasfilter/",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Geometry",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 5,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 3,
        "Documentation score": 1,
        "Paper authors": [
            {
                "given": "Fabi\u00e1n",
                "family": "Prada",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Johns Hopkins University"
                    }
                ]
            },
            {
                "given": "Misha",
                "family": "Kazhdan",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Johns Hopkins University"
                    }
                ]
            },
            {
                "given": "Ming",
                "family": "Chuang",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Perceptln Inc."
                    }
                ]
            },
            {
                "given": "Hugues",
                "family": "Hoppe",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Google Inc."
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Gradient-domain Volumetric Photon Density Estimation",
        "DOI": "10.1145/3197517.3201363",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on github, gitlab or other code platform",
        "Main languages": "C/C++",
        "How long did take for you to evaluate the code this paper (if any)?": 5,
        "Build info / instructions": "README, LICENSE or explicit license (e.g. in the readme / headers), AUTHORS or explicitly mentioned",
        "arXiv (page URL)": "",
        "code URL": "https://github.com/gradientpm/gvpm",
        "code URL  2": "",
        "PDF URL": "http://www.cim.mcgill.ca/~derek/files/gdvpm_author.pdf",
        "License type": "GPL",
        "Build mechanism": "Makefile, CMakeLists",
        "Mandatory Software dependencies": "Open-source libraries",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 3,
        "Feedbacks [easy to configure/build (5=easy)]": 5,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "N/A",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 5,
        "Feedbacks [Interface user-friendly (5=easy)]": 5,
        "Documentation": "README with explanation of the possible rendering options",
        "Authors": "Academia",
        "ACM 1": "Ray tracing",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Linux",
        "General comments": "Compiled and worked out of the box. Download a scene on the project website and run mitsuba name_of_your_scene.xml (mitsuba found in the \"binaries\" folder of the project).\nEasy to find/install dependencies: 2 because installing mitsuba on linux requires several changes on ubuntu 19.10.\n** In config.py I changed -std=c++11 into -std=gnu++11 ;\n** In mitsuba/build/release/mtsgui I changed QtCore, QtOpenGL (and so on) into Qt5Core, Qt5OpenGL (and so on)\n** in data/scons/qt5.py,line 392 changed QtCore into Qt5Core.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 7,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "mitsuba/boost/xerces/collada/eigen/fftw3/glew/IlmBase/OpenEXR",
        "Project URL": "https://beltegeuse.github.io/research/publication/2018_gradientvolumetricpm/",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Rendering",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 5,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 1,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Adrien",
                "family": "Gruson",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "The University of Tokyo and JFLI CNRS UMI"
                    }
                ]
            },
            {
                "given": "Binh-Son",
                "family": "Hua",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "The University of Tokyo and Singapore University of Technology and Design"
                    }
                ]
            },
            {
                "given": "Nicolas",
                "family": "Vibert",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "McGill University"
                    }
                ]
            },
            {
                "given": "Derek",
                "family": "Nowrouzezahrai",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "McGill University"
                    }
                ]
            },
            {
                "given": "Toshiya",
                "family": "Hachisuka",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "The University of Tokyo"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "HeadOn: Real-time Reenactment of Human Portrait Videos",
        "DOI": "10.1145/3197517.3201350",
        "PDF availability (beside dl.acm)": "On an open archive arXiv or similar open archive, On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "https://arxiv.org/abs/1805.11729",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://zollhoefer.com/papers/SG2018_HeadOn/paper.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Computer vision",
        "ACM 2": "Computer graphics",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 17,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "http://zollhoefer.com/papers/SG2018_HeadOn/page.html",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Image",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Justus",
                "family": "Thies",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Technical University of Munich"
                    }
                ]
            },
            {
                "given": "Michael",
                "family": "Zollh\u00f6fer",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Stanford University"
                    }
                ]
            },
            {
                "given": "Christian",
                "family": "Theobalt",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Max-Planck-Institute for Informatics"
                    }
                ]
            },
            {
                "given": "Marc",
                "family": "Stamminger",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of Erlangen-Nuremberg"
                    }
                ]
            },
            {
                "given": "Matthias",
                "family": "Niessner",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Technical University of Munich"
                    }
                ]
            }
        ],
        "Altmetric score": 3,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=3&types=tttttttt",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=43025166"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "HexEx: Robust Hexahedral Mesh Extraction",
        "DOI": "10.1145/2897824.2925976",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on github, gitlab or other code platform",
        "Main languages": "C/C++",
        "How long did take for you to evaluate the code this paper (if any)?": 3,
        "Build info / instructions": "README, LICENSE or explicit license (e.g. in the readme / headers), AUTHORS or explicitly mentioned",
        "arXiv (page URL)": "",
        "code URL": "https://graphics.rwth-aachen.de:9000/HexEx/libHexEx",
        "code URL  2": "",
        "PDF URL": "https://www.graphics.rwth-aachen.de/media/papers/HexEx_lowres.pdf",
        "License type": "GPL",
        "Build mechanism": "Makefile, CMakeLists",
        "Mandatory Software dependencies": "Open-source libraries",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 5,
        "Feedbacks [easy to configure/build (5=easy)]": 5,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "N/A",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 5,
        "Feedbacks [Interface user-friendly (5=easy)]": 3,
        "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions",
        "Authors": "Academia",
        "ACM 1": "Computer-aided design",
        "ACM 2": "Physical simulation",
        "ACM 3": "Shape modeling",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Linux",
        "General comments": "The code works out of the box for compilation following the Building instructions.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 26,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "OpenVolumeMesh",
        "Project URL": "https://www.graphics.rwth-aachen.de/publication/03260/",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2016,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Geometry",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 4,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 1,
        "Documentation score": 1,
        "Paper authors": [
            {
                "given": "Max",
                "family": "Lyon",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "RWTH Aachen"
                    }
                ]
            },
            {
                "given": "David",
                "family": "Bommes",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "RWTH Aachen"
                    }
                ]
            },
            {
                "given": "Leif",
                "family": "Kobbelt",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "RWTH Aachen"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "High-contrast Computational Caustic Design",
        "DOI": "10.1145/2601097.2601200",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No but pseudo-code in the PDF",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://lgg.epfl.ch/publications/2014/Caustics/paper.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Geometric topology",
        "ACM 2": "Physical simulation",
        "ACM 3": "Shape modeling",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 74,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "https://lgg.epfl.ch/publications/2014/Caustics/",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Fabrication",
        "Deep learning": "True",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": 1,
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Yuliy",
                "family": "Schwartzburg",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Romain",
                "family": "Testuz",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Andrea",
                "family": "Tagliasacchi",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Mark",
                "family": "Pauly",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 3,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=3&types=aaaaaaaa",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=21008847"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "High-fidelity facial reflectance and geometry inference from an unconstrained image",
        "DOI": "10.1145/3197517.3201364",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://vgl.ict.usc.edu/Research/HFFRGI/siggraph2018HFFRGIFUI.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Mesh geometry models",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 26,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "http://vgl.ict.usc.edu/Research/HFFRGI/",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Image",
        "Deep learning": "True",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 1,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Shuco",
                "family": "Yamaguchi",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Waseda University and USC Institute for Creative Technologies"
                    }
                ]
            },
            {
                "given": "Shunsuke",
                "family": "Saito",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of Southern California, and USC Institute for Creative Technologies"
                    }
                ]
            },
            {
                "given": "Koki",
                "family": "Nagano",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Pinscreen"
                    }
                ]
            },
            {
                "given": "Yajie",
                "family": "Zhao",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "USC Institute for Creative Technologies"
                    }
                ]
            },
            {
                "given": "Weikai",
                "family": "Chen",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "USC Institute for Creative Technologies"
                    }
                ]
            },
            {
                "given": "Kyle",
                "family": "Olszewski",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of Southern California, and USC Institute for Creative Technologies"
                    }
                ]
            },
            {
                "given": "Shigeo",
                "family": "Morishima",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Waseda University"
                    }
                ]
            },
            {
                "given": "Hao",
                "family": "Li",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of Southern California, and USC Institute for Creative Technologies"
                    }
                ]
            }
        ],
        "Altmetric score": 1,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=1&types=gggggggg",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=47112794"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "High-order diffraction and diffuse reflections for interactive sound propagation in large environments",
        "DOI": "10.1145/2601097.2601216",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://gamma.cs.unc.edu/HIGHDIFF/paper.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Geometric topology",
        "ACM 2": "Physical simulation",
        "ACM 3": "Shape modeling",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 61,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "http://gamma.cs.unc.edu/HIGHDIFF/",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Animation",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 1,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Carl",
                "family": "Schissler",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Ravish",
                "family": "Mehra",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Dinesh",
                "family": "Manocha",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 3,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=3&types=aaaaaaaa",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=43012654"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "High-Order Similarity Relations in Radiative Transfer",
        "DOI": "10.1145/2601097.2601104",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on the authors website or project page (zip file, direct download...)",
        "Main languages": "Matlab / Mathematica / ..",
        "How long did take for you to evaluate the code this paper (if any)?": 3,
        "Build info / instructions": "README, LICENSE or explicit license (e.g. in the readme / headers)",
        "arXiv (page URL)": "",
        "code URL": "http://www.cs.cornell.edu/projects/translucency/downloads/similarity-sg14-code.zip",
        "code URL  2": "",
        "PDF URL": "http://www.cs.cornell.edu/projects/translucency/downloads/similarity-sg14.pdf",
        "License type": "unspecified",
        "Build mechanism": "Not applicable (python, Matlab..)",
        "Mandatory Software dependencies": "Paywall Closed source software or libraries",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "N/A",
        "Feedbacks [easy to configure/build (5=easy)]": "N/A",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": 5,
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "Cannot answer",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 5,
        "Feedbacks [Interface user-friendly (5=easy)]": 5,
        "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions, API documentation",
        "Authors": "Academia",
        "ACM 1": "3D imaging",
        "ACM 2": "Animation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Linux",
        "General comments": "To make it work with matlab 2019b, in ComputeAlteredParameters.m, change the matlab solver from 'active-set' to 'interior-point-convex' : line 119, opt = optimset('LargeScale', 'off',             'Algorithm', 'interior-point-convex', 'Display', 'off', 'MaxIter', 10000); method 'active-set' no longer exists. Reproduces figs 1 and 8 in the paper (file demo.m)",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 19,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "Matlab",
        "Project URL": "http://www.cs.cornell.edu/projects/translucency/",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Rendering",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 5,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 1,
        "Documentation score": 1,
        "Paper authors": [
            {
                "given": "Shuang",
                "family": "Zhao",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Ravi",
                "family": "Ramamoorthi",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Kavita",
                "family": "Bala",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 1,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=1&types=eeeeeeee",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=10045347"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "How do people edit light fields?",
        "DOI": "10.1145/2601097.2601125",
        "PDF availability (beside dl.acm)": "On an open archive arXiv or similar open archive, On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on the authors website or project page (zip file, direct download...)",
        "Main languages": "C/C++",
        "How long did take for you to evaluate the code this paper (if any)?": 10,
        "Build info / instructions": "LICENSE or explicit license (e.g. in the readme / headers)",
        "arXiv (page URL)": "https://hal.inria.fr/hal-01060860/",
        "code URL": "http://giga.cps.unizar.es/~ajarabo/pubs/lfeiSIG14/code/downloads/LFEI_v0.9.zip",
        "code URL  2": "",
        "PDF URL": "http://giga.cps.unizar.es/~ajarabo/pubs/lfeiSIG14/downloads/Jarabo_sig14.pdf",
        "License type": "custom",
        "Build mechanism": "IDE Project (VS,..)",
        "Mandatory Software dependencies": "Open-source libraries",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 5,
        "Feedbacks [easy to configure/build (5=easy)]": 2,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": 1,
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "Yes",
        "Available data (provided or url / ref)": "Images for experiment",
        "License for the data (if any)": "custom",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "N/A",
        "Feedbacks [Interface user-friendly (5=easy)]": 5,
        "Documentation": "Technical documentation (comments-doxygen...)",
        "Authors": "Academia",
        "ACM 1": "Graphics systems and interfaces",
        "ACM 2": "Graphics input devices",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Windows",
        "General comments": "I had numerous issues compiling and running the software in part due to outdated dependencies and to the lack of documentation.\nTo compile the code using a recent Qt (Qt 5.12.6, which needs to be installed and takes about 45GB!) and somewhat recent Visual Studio 2017 :\n- upgrade and retarget the VS project file (almost automatic)\n- change all includes that contain QtGui/QAction, QtGui/QApplication, QtGui/QButtonGroup, QtGui/QComboBox, QtGui/QDialog, QtGui/QHeaderView, QtGui/QLabel, QtGui/QPushButton in DialogQ6.h, Dialog7.h, and DialogQYear2.h, and change them to QtWidgets/QAction etc.\n- change the includes QFrame, QColorDialog and QFileDialog in qframemousepos.h, interface.cpp, main.cpp, lightfield.cpp and lightfieldViewer.cpp to QtWidgets/QFrame, QtWidgets/QColorDialog and QtWidgets/QFileDialog \n- add QT_DISABLE_DEPRECATED_BEFORE to the preprocessor directives due to some deprecated functions since Qt5\n- In lightfieldViewer.cpp, change all occurences of updateGL(); to update(); (changed since QGLViewer 2.7.0)\n- In lightfieldViewer's constructor, parameter should be a QOpenGLWidget*, not a QGLWidget*. The call to QGLViewer(parent,shareWidget) in the constructor can be safely changed to QGLViewer(parent).\n- You need to install libQGLViewer. In the config.h of QGLViewer, you may want to change #include <QOpenGLWidget> to QtWidgets/QOpenGLWidget (if you keep the search path for Qt includes unchanged, or otherwise add QtWidgets to the search path)\n- update the linked libraries in the project from Qt4 to Qt5 ; add Qt5Widgets.lib\n- do not use the glew32.lib provided but use a fresh glew, otherwise there are link errors\n- replace all hard coded instances of D:/Users/Adrian/Desktop/LF to the path where the lightfields were downloaded in main.cpp  (170 instances, don't do it manually)\n- In the downloaded lightfield dataset, rename Wanner to HCI, Kim_et_al to Disney, and Synthetic to Training. Move the TaskY2 folder within your lightfield data folder.\n- You can now run the software with the experiment number as a parameter. This parameter is an integer between 1 and 41. Some experiments cannot be run due to missing files (e.g., number 41 due to missing 11_Bike6.jpg or 31 due to missing 01_Couch.jpg).\nUltimately, once everything compiles and run, I managed to see the interface. Only in debug mode did I manage to see the lightfield show up. And in both release and debug mode, the interface seemed to be frozen : I could not complete a single task. I assume this is mostly due to changes in Qt over time.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 44,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "Qt / QGlViewer / glew",
        "Project URL": "http://giga.cps.unizar.es/~ajarabo/pubs/lfeiSIG14/index.html",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Virtual Reality",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 2,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 1,
        "Paper authors": [
            {
                "given": "Adrian",
                "family": "Jarabo",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Belen",
                "family": "Masia",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Adrien",
                "family": "Bousseau",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Fabio",
                "family": "Pellacini",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Diego",
                "family": "Gutierrez",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 6,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=6&types=aaaaaaaa",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=35520692"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Hyper-reduced projective dynamics",
        "DOI": "10.1145/3197517.3201387",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on the authors website or project page (zip file, direct download...)",
        "Main languages": "C/C++",
        "How long did take for you to evaluate the code this paper (if any)?": 5,
        "Build info / instructions": "README, LICENSE or explicit license (e.g. in the readme / headers), AUTHORS or explicitly mentioned",
        "arXiv (page URL)": "",
        "code URL": "https://graphics.tudelft.nl/~klaus/code/HRPD.zip",
        "code URL  2": "",
        "PDF URL": "https://graphics.tudelft.nl/~klaus/papers/hrpd.pdf",
        "License type": "MIT",
        "Build mechanism": "None",
        "Mandatory Software dependencies": "Open-source libraries",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 4,
        "Feedbacks [easy to configure/build (5=easy)]": 4,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": 5,
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 5,
        "Feedbacks [Interface user-friendly (5=easy)]": 5,
        "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions, API documentation, Technical documentation (comments-doxygen...)",
        "Authors": "Academia",
        "ACM 1": "Real-time simulation",
        "ACM 2": "Physical simulation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Windows",
        "General comments": "Minor adjustments to make it work : viewer.core().is_animating instead of view.core.is_animating (HDRP.cpp line 237 probably due to a change in igl). Also, it has to be compiled with the eigen provided with igl. Compiling it with the latest Eigen produces an error \"THE_EVAL_EVALTO_FUNCTION_SHOULD_NEVER_BE_CALLED_FOR_DENSE_OBJECTS\" in Eigen.\nA single example (armadillo) is provided for the demo, but I believe it should reproduce the examples shown in the paper as the result is reasonable.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 13,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "libigl / glad / tetgen / eigen / glfw",
        "Project URL": "https://graphics.tudelft.nl/Publications-new/2018/BEH18/",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Animation",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 5,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 2,
        "Paper authors": [
            {
                "given": "Christopher",
                "family": "Brandt",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Delft University of Technology, The Netherlands"
                    }
                ]
            },
            {
                "given": "Elmar",
                "family": "Eisemann",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Delft University of Technology, The Netherlands"
                    }
                ]
            },
            {
                "given": "Klaus",
                "family": "Hildebrandt",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Delft University of Technology, The Netherlands"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Image Completion using Planar Structure Guidance",
        "DOI": "10.1145/2601097.2601205",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on github, gitlab or other code platform",
        "Main languages": "Matlab / Mathematica / ..",
        "How long did take for you to evaluate the code this paper (if any)?": 4,
        "Build info / instructions": "README, AUTHORS or explicitly mentioned",
        "arXiv (page URL)": "",
        "code URL": "https://github.com/jbhuang0604/StructCompletion",
        "code URL  2": "",
        "PDF URL": "https://www.microsoft.com/en-us/research/wp-content/uploads/2017/01/structure_completion_small.pdf",
        "License type": "unspecified",
        "Build mechanism": "Not applicable (python, Matlab..)",
        "Mandatory Software dependencies": "Open-source libraries, Paywall Closed source software or libraries",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 4,
        "Feedbacks [easy to configure/build (5=easy)]": 5,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": 4,
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 2,
        "Feedbacks [Interface user-friendly (5=easy)]": 5,
        "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions, API documentation, Technical documentation (comments-doxygen...)",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Computer graphics",
        "ACM 2": "Graphics recognition and interpretation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": 1,
        "OS of the test": "Windows",
        "General comments": "The current version in the repository (latest commit 25668de in Nov. 2015) has merge conflicts in sc_complete.m (<<<<<<< HEAD .... >>>>>>> 80fe71bd858652004119dc8946439915385cc282) and I am not sure why the image filename is also a parameter of the function. A 'cache' and 'result' directories need to be created in the root directory (otherwise it crashes). I also had to download binaries for VLFeat 0.9.20 at http://www.vlfeat.org/download/ since I could not compile it (this library does not seem maintained). \nThe code to detect vanishing points is not provided (the paper just refers to the classical book of Hartley and Zisserman) but instead a binary Windows executable is.\nUltimately, the code runs in about 5 min for one image in 3216x2136, or 40s in 640x480.\nHowever, it produces results that are very far from the quality of the results shown in the paper. I tried reproducing Fig 8 and obtained the results at https://pasteboard.co/ILTnRz4.jpg (images scaled and cropped to roughly match Fig. 8). I did 3 runs per image to make sure I didn't get unlucky random seeds. A note says this is a matlab reimplementation of the paper (by the paper first author), not the original code used to produce the images though. Also, a todo.txt present in the github seems to indicate there is no spatial coherence cost in this implementation, which could explain the discrepancy between advertised and obtained results, but I am not sure which term exactly this corresponds to in the paper (E_proximity?).",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 253,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "matlab / vlfeat / vgg / imrender / MeanShift",
        "Project URL": "",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Image",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 1,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 2,
        "Paper authors": [
            {
                "given": "Jia-Bin",
                "family": "Huang",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Sing Bing",
                "family": "Kang",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Narendra",
                "family": "Ahuja",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Johannes",
                "family": "Kopf",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 6,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=6&types=aaaaaaaa",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=35514628"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Immersion of self-intersecting solids and surfaces",
        "DOI": "10.1145/3197517.3201327",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on the authors website or project page (zip file, direct download...), as a module/component of an existing opensource library/software",
        "Main languages": "C/C++",
        "How long did take for you to evaluate the code this paper (if any)?": 10,
        "Build info / instructions": "README, LICENSE or explicit license (e.g. in the readme / headers), CONTRIBUTING or explicitly mentions how to contribute to the code",
        "arXiv (page URL)": "",
        "code URL": "http://run.usc.edu/vega/form.php?VegaFEM-v4.0.zip",
        "code URL  2": "",
        "PDF URL": "http://run.usc.edu/immersion/LiBarbic-SIGGRAPH2018.pdf",
        "License type": "BSD",
        "Build mechanism": "Makefile",
        "Mandatory Software dependencies": "Open-source libraries, Closed source (e.g. commercial) software or libraries free for research purposes",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 2,
        "Feedbacks [easy to configure/build (5=easy)]": 2,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "N/A",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "N/A",
        "Feedbacks [Interface user-friendly (5=easy)]": 4,
        "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions, API documentation, Technical documentation (comments-doxygen...)",
        "Authors": "Academia",
        "ACM 1": "Physical simulation",
        "ACM 2": "Volumetric models",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Linux",
        "General comments": "On Linux: multiple dependencies needed libmkl and pardiso for edit with ARAP. Was able to replicate a similar torus experiment. Many small examples already configured are provided in the example section of the code.\n\n-- Alternative test on windows --\nCould not compile on Windows despite the provided Visual Studio solution file. This is due to the very long list of dependencies and errors in the Visual Studio solution (some files do not exist like tribox2.cpp, some paths are hardcoded...). I assume it could be done with significant efforts.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 3,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "boost / glut / glew / CGAL / MKL / Eigen / libigl / Pardiso / glui / CORE / Cg / WxWidgets",
        "Project URL": "http://run.usc.edu/immersion/",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Geometry",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 5,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 1,
        "Documentation score": 2,
        "Paper authors": [
            {
                "given": "Yijing",
                "family": "Li",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "University of Southern California"
                    }
                ]
            },
            {
                "given": "Jernej",
                "family": "Barbi\u010d",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of Southern California"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Instant 3D photography",
        "DOI": "10.1145/3197517.3201384",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://visual.cs.ucl.ac.uk/pubs/instant3d/instant3d_siggraph_2018.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Computational photography",
        "ACM 2": "Reconstruction",
        "ACM 3": "Image-based rendering",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 9,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "http://visual.cs.ucl.ac.uk/pubs/instant3d/",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Image",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": true,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 3,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Peter",
                "family": "Hedman",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "University College London"
                    }
                ]
            },
            {
                "given": "Johannes",
                "family": "Kopf",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Facebook"
                    }
                ]
            }
        ],
        "Altmetric score": 1,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=1&types=tttttttt",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=64696078"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Interactive exploration of design trade-offs",
        "DOI": "10.1145/3197517.3201385",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://homes.cs.washington.edu/~adriana/tradeoffs/aschulz2018.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Graphics systems and interfaces",
        "ACM 2": "Shape modeling",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 3,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "https://homes.cs.washington.edu/~adriana/tradeoffs/index.html",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Fabrication",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 1,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Adriana",
                "family": "Schulz",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Massachusetts Institute of Technology"
                    }
                ]
            },
            {
                "given": "Harrison",
                "family": "Wang",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Massachusetts Institute of Technology"
                    }
                ]
            },
            {
                "given": "Eitan",
                "family": "Crinspun",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Columbia University"
                    }
                ]
            },
            {
                "given": "Justin",
                "family": "Solomon",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Massachusetts Institute of Technology"
                    }
                ]
            },
            {
                "given": "Wojciech",
                "family": "Matusik",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Massachusetts Institute of Technology"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Interactive Manipulation of Large-Scale Crowd Animation",
        "DOI": "10.1145/2601097.2601170",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://mrl.snu.ac.kr/research/ProjectCrowdEditing/crowd_editing_preprint.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Virtual reality",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 34,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "http://mrl.snu.ac.kr/research/ProjectCrowdEditing/CrowdEditing.htm",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Animation",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Jongmin",
                "family": "Kim",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Yeongho",
                "family": "Seol",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Taesoo",
                "family": "Kwon",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Jehee",
                "family": "Lee",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Interactive Shape Modeling using a Skeleton-Mesh Co-Representation",
        "DOI": "10.1145/2601097.2601226",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://www.dgp.toronto.edu/~karan/papers/pam_siggraph14.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Graphics file formats",
        "ACM 2": "Graphics input devices",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 29,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Geometry",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 1,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "J. Andreas",
                "family": "B\u00e6rentzen",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Rinat",
                "family": "Abdrashitov",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Karan",
                "family": "Singh",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Interactive Sketching of Urban Procedural Models",
        "DOI": "10.1145/2897824.2925951",
        "PDF availability (beside dl.acm)": "On an open archive arXiv or similar open archive, On the author(s) website or its institution, On the author(s) repository (dropbox, github, drive, iCloud)",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on the authors website or project page (zip file, direct download...)",
        "Main languages": "Cannot answer",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "Cannot answer",
        "arXiv (page URL)": "https://hal.inria.fr/hal-01378388/",
        "code URL": "https://www.cs.purdue.edu/homes/gnishida/sketch/SketchBuilding.zip",
        "code URL  2": "",
        "PDF URL": "http://www-sop.inria.fr/reves/Basilic/2016/NGGBB16/procedural_sketch.pdf",
        "License type": "unspecified",
        "Build mechanism": "Not applicable (python, Matlab..)",
        "Mandatory Software dependencies": "Open-source libraries",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "N/A",
        "Feedbacks [easy to configure/build (5=easy)]": "N/A",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "N/A",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "Cannot answer",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 1,
        "Feedbacks [Interface user-friendly (5=easy)]": 5,
        "Documentation": "None",
        "Authors": "Academia",
        "ACM 1": "Shape modeling",
        "ACM 2": "Computational geometry",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Windows",
        "General comments": "When just running the provided executables, it encounters an issue: \n\"This application failed to start because it could not find or load the Qt platform plugin \"windows\" in \"\".\"\nHowever, by replacing the provided Qt5Core.dll, Qt5Gui.dll, Qt5OpenGL.dll, Qt5Widgets.dll and Qt5Xml.dll by the ones from my actual Qt5 installation (5.12.6), it works nicely and produces results similar to those found in the paper (up to my poor drawing skills).",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 77,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "https://www.cs.purdue.edu/homes/gnishida/sketch/",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2016,
        "Misc. comment": "",
        "Software Type": "Binary",
        "Topic": "Geometry",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 5,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Gen",
                "family": "Nishida",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Purdue University"
                    }
                ]
            },
            {
                "given": "Ignacio",
                "family": "Garcia-Dorado",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Purdue University"
                    }
                ]
            },
            {
                "given": "Daniel G.",
                "family": "Aliaga",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Purdue University"
                    }
                ]
            },
            {
                "given": "Bedrich",
                "family": "Benes",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Purdue University"
                    }
                ]
            },
            {
                "given": "Adrien",
                "family": "Bousseau",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Inria"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Interactive Tile-based Adaptive Sampling with User-Specified Fourier Spectra",
        "DOI": "10.1145/2601097.2601107",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution, Other (web, research gate, semantic scholar,...)",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on github, gitlab or other code platform",
        "Main languages": "C/C++",
        "How long did take for you to evaluate the code this paper (if any)?": 2,
        "Build info / instructions": "README, LICENSE or explicit license (e.g. in the readme / headers)",
        "arXiv (page URL)": "",
        "code URL": "https://github.com/polyhex-sampling/sampler",
        "code URL  2": "",
        "PDF URL": "http://www.geometry.caltech.edu/pubs/WPCBS+14.pdf",
        "License type": "MIT",
        "Build mechanism": "CMakeLists",
        "Mandatory Software dependencies": "Open-source libraries, Closed source (e.g. commercial) software or libraries free for research purposes",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 5,
        "Feedbacks [easy to configure/build (5=easy)]": 5,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "N/A",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "Yes",
        "Available data (provided or url / ref)": "Pre-trained models / Hardcoded data / lookup tables /...",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 5,
        "Feedbacks [Interface user-friendly (5=easy)]": 5,
        "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions",
        "Authors": "Academia",
        "ACM 1": "Image and video acquisition",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Linux",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 48,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "qt/boost/sdl/sdl_image/opengl/glsl",
        "Project URL": "https://perso.liris.cnrs.fr/david.coeurjolly/publications/dcoeurjo_SIGGRAPH14.html",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Rendering",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 5,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 4,
        "Documentation score": 1,
        "Paper authors": [
            {
                "given": "Florent",
                "family": "Wachtel",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Adrien",
                "family": "Pilleboue",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "David",
                "family": "Coeurjolly",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Katherine",
                "family": "Breeden",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Gurprit",
                "family": "Singh",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Ga\u00ebl",
                "family": "Cathelin",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Fernando",
                "family": "de Goes",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Mathieu",
                "family": "Desbrun",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Victor",
                "family": "Ostromoukhov",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Intrinsic Images in the Wild",
        "DOI": "10.1145/2601097.2601206",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on github, gitlab or other code platform",
        "Main languages": "Python",
        "How long did take for you to evaluate the code this paper (if any)?": 6,
        "Build info / instructions": "README, LICENSE or explicit license (e.g. in the readme / headers), AUTHORS or explicitly mentioned",
        "arXiv (page URL)": "",
        "code URL": "https://github.com/seanbell/intrinsic",
        "code URL  2": "",
        "PDF URL": "http://labelmaterial.s3.amazonaws.com/release/siggraph2014-intrinsic.pdf",
        "License type": "MIT",
        "Build mechanism": "Makefile",
        "Mandatory Software dependencies": "Open-source libraries",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 5,
        "Feedbacks [easy to configure/build (5=easy)]": 5,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "N/A",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 5,
        "Feedbacks [Interface user-friendly (5=easy)]": 5,
        "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions",
        "Authors": "Academia",
        "ACM 1": "Computer vision problems",
        "ACM 2": "Scene understanding",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Linux",
        "General comments": "Had to change a line in image_util.py to make it work with a more recent version of scikit-image: changed line 5 to \"from skimage.restoration import denoise_bilateral\". Adaptation in other context is easy: example of an integration is provided. All images in the dataset are provided with judgement files.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 210,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "python2.7/PIL==1.1.7/cython==0.19.2/numpy==1.8.0/scipy==0.13.2/scikit-image==0.9.3/scikit-learn==0.14.1",
        "Project URL": "http://opensurfaces.cs.cornell.edu/intrinsic/",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Image",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 5,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 1,
        "Documentation score": 1,
        "Paper authors": [
            {
                "given": "Sean",
                "family": "Bell",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Kavita",
                "family": "Bala",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Noah",
                "family": "Snavely",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Intrinsic Video and Applications",
        "DOI": "10.1145/2601097.2601135",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No but pseudo-code in the PDF",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://www.elenagarces.es/pdf_papers/SIG2014_IntrinsicVideo.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Reflectance modeling",
        "ACM 2": "Scene understanding",
        "ACM 3": "Computer vision problems",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 73,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "http://webdiis.unizar.es/~elenag/projects/SIG2014_intrinsicvideo/",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Image",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": 2,
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Genzhi",
                "family": "Ye",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Elena",
                "family": "Garces",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Yebin",
                "family": "Liu",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Qionghai",
                "family": "Dai",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Diego",
                "family": "Gutierrez",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 3,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=3&types=aaaaaaaa",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=49746386"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Inverse Procedural Modeling of Facade Layouts",
        "DOI": "10.1145/2601097.2601162",
        "PDF availability (beside dl.acm)": "On an open archive arXiv or similar open archive, On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 2,
        "Build info / instructions": "",
        "arXiv (page URL)": "https://arxiv.org/abs/1308.0419",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://peterwonka.net/Publications/pdfs/2014.SG.Wu.InverseFacadeModeling.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Computer graphics",
        "ACM 2": "Graphics recognition and interpretation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 55,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Geometry",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 1,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Fuzhang",
                "family": "Wu",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Dong-Ming",
                "family": "Yan",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Weiming",
                "family": "Dong",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Xiaopeng",
                "family": "Zhang",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Peter",
                "family": "Wonka",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Inverse-Foley Animation: Synchronizing rigid-body motions to sound",
        "DOI": "10.1145/2601097.2601178",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://www.cs.cornell.edu/projects/Sound/ifa/ifa.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Virtual reality",
        "ACM 2": "Simulation by animation",
        "ACM 3": "Music retrieval",
        "ACM 4": "Sound and music computing",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 9,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "http://www.cs.cornell.edu/projects/Sound/ifa/",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Animation",
        "Deep learning": "True",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Timothy R.",
                "family": "Langlois",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Doug L.",
                "family": "James",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 1,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=1&types=tttttttt",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=2586656"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "JALI: An Animator-Centric Viseme Model for Expressive Lip Synchronization",
        "DOI": "10.1145/2897824.2925984",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://www.dgp.toronto.edu/~elf/JALISIG16.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Performing arts",
        "ACM 2": "Natural language generation",
        "ACM 3": "Procedural animation",
        "ACM 4": "Simulation by animation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 29,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "http://www.dgp.toronto.edu/~elf/jali.html",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2016,
        "Misc. comment": "The authors nevertheless provide a facial rig for Maya, which has been used in the paper \"VisemeNet: Audio-Driven Animator-Centric Speech Animation\" which provides code.\nBeware the maya scene includes a dependency to renderman (for rendering) which is abandonned by Nvidia since 2018 ( https://www.nvidia.com/en-us/design-visualization/solutions/rendering/product-updates/ ) but the rig can still be used without the fancy rendering.",
        "Software Type": "",
        "Topic": "Animation",
        "Deep learning": "True",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Pif",
                "family": "Edwards",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "University of Toronto"
                    }
                ]
            },
            {
                "given": "Chris",
                "family": "Landreth",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of Toronto"
                    }
                ]
            },
            {
                "given": "Eugene",
                "family": "Fiume",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of Toronto"
                    }
                ]
            },
            {
                "given": "Karan",
                "family": "Singh",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of Toronto"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Laplacian kernel splatting for efficient depth-of-field and motion blur synthesis or reconstruction",
        "DOI": "10.1145/3197517.3201379",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://laplaciansplatting.mpi-inf.mpg.de/laplacian_splatting.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Massively parallel algorithms",
        "ACM 2": "Rasterization",
        "ACM 3": "Image-based rendering",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 3,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "http://laplaciansplatting.mpi-inf.mpg.de/",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Rendering",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Thomas",
                "family": "Leimk\u00fchler",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "MPI Informatik, Saarland Informatics Campus, Germany"
                    }
                ]
            },
            {
                "given": "Hans-Peter",
                "family": "Seidel",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "MPI Informatik, Saarland Informatics Campus, Germany"
                    }
                ]
            },
            {
                "given": "Tobias",
                "family": "Ritschel",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University College London, United Kingdom"
                    }
                ]
            }
        ],
        "Altmetric score": 0.25,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=1&types=tttttttt",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=51399934"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Learning a Manifold of Fonts",
        "DOI": "10.1145/2601097.2601212",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on the authors website or project page (zip file, direct download...)",
        "Main languages": "Cannot answer",
        "How long did take for you to evaluate the code this paper (if any)?": 2,
        "Build info / instructions": "Cannot answer",
        "arXiv (page URL)": "",
        "code URL": "http://vecg.cs.ucl.ac.uk/Projects/projects_fonts/projects_fonts.html",
        "code URL  2": "",
        "PDF URL": "http://jankautz.com/publications/LearningFonts_SIG14.pdf",
        "License type": "unspecified",
        "Build mechanism": "None",
        "Mandatory Software dependencies": "None",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "N/A",
        "Feedbacks [easy to configure/build (5=easy)]": "N/A",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "N/A",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "Cannot answer",
        "Available data (provided or url / ref)": "Training data",
        "License for the data (if any)": "CC-BY-NC",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 1,
        "Feedbacks [Interface user-friendly (5=easy)]": 5,
        "Documentation": "None",
        "Authors": "Academia",
        "ACM 1": "Machine learning",
        "ACM 2": "Shape modeling",
        "ACM 3": "Computational geometry",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Linux",
        "General comments": "Web application only. Permits to navigate in the manifold and see the font evolving. The font editing application is not demonstrated however.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 76,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "http://vecg.cs.ucl.ac.uk/Projects/projects_fonts/projects_fonts.html",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "Binary",
        "Topic": "Geometry",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": true,
        "Feedbacks [could reproduce results (5=highly confident)]": 4,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 1,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Neill D. F.",
                "family": "Campbell",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Jan",
                "family": "Kautz",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Learning basketball dribbling skills using trajectory optimization and deep reinforcement learning",
        "DOI": "10.1145/3197517.3201315",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No but pseudo-code in the PDF",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://graphics.cs.cmu.edu/wp/wp-content/uploads/2018/05/BasketballSIGGRAPH2018.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Neural networks",
        "ACM 2": "Motion capture",
        "ACM 3": "Physical simulation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 24,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "http://graphics.cs.cmu.edu/?p=1590",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Animation",
        "Deep learning": "True",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": 1,
        "Reviewer": 3,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Libin",
                "family": "Liu",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "DeepMotion Inc."
                    }
                ]
            },
            {
                "given": "Jessica",
                "family": "Hodgins",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Carnegie Mellon University"
                    }
                ]
            }
        ],
        "Altmetric score": 5.08,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=6&types=bbbbbbbb",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=46222871"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Learning Bicycle Stunts",
        "DOI": "10.1145/2601097.2601121",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://www.jie-tan.net/project/LearningBicycleStunts_preprint.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Animation",
        "ACM 2": "Simulation by animation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 59,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "http://www.jie-tan.net/project/learningBicycleStunts.html",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Animation",
        "Deep learning": "True",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 1,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Jie",
                "family": "Tan",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Yuting",
                "family": "Gu",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "C. Karen",
                "family": "Liu",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Greg",
                "family": "Turk",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Learning How Objects Function via Co-Analysis of Interactions",
        "DOI": "10.1145/2897824.2925870",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://bojianwu.github.io/projects/ICON2/paper.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Shape analysis",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 38,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "http://vcc.szu.edu.cn/research/2016/ICON2/",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2016,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Geometry",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Ruizhen",
                "family": "Hu",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Shenzhen University"
                    }
                ]
            },
            {
                "given": "Oliver",
                "family": "van Kaick",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Carleton University"
                    }
                ]
            },
            {
                "given": "Bojian",
                "family": "Wu",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "SIAT"
                    }
                ]
            },
            {
                "given": "Hui",
                "family": "Huang",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Shenzhen University and SIAT"
                    }
                ]
            },
            {
                "given": "Ariel",
                "family": "Shamir",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "The Interdisciplinary Center"
                    }
                ]
            },
            {
                "given": "Hao",
                "family": "Zhang",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Simon Fraser University"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Learning symmetric and low-energy locomotion",
        "DOI": "10.1145/3197517.3201397",
        "PDF availability (beside dl.acm)": "On an open archive arXiv or similar open archive, On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on github, gitlab or other code platform",
        "Main languages": "Python",
        "How long did take for you to evaluate the code this paper (if any)?": 10,
        "Build info / instructions": "README, LICENSE or explicit license (e.g. in the readme / headers)",
        "arXiv (page URL)": "https://arxiv.org/abs/1801.08093",
        "code URL": "https://github.com/VincentYu68/SymmetryCurriculumLocomotion",
        "code URL  2": "",
        "PDF URL": "https://www.cc.gatech.edu/~turk/paper_pages/2018_symmetric_locomotion/symmetric_low_energy_locomotion.pdf",
        "License type": "MIT",
        "Build mechanism": "Other script",
        "Mandatory Software dependencies": "Open-source libraries",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 4,
        "Feedbacks [easy to configure/build (5=easy)]": 4,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": 5,
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 2,
        "Feedbacks [Interface user-friendly (5=easy)]": 1,
        "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions",
        "Authors": "Academia",
        "ACM 1": "Learning paradigms",
        "ACM 2": "Animation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Linux",
        "General comments": "All scripts are provided for reproducing the examples in the paper.\nThe dependencies can be easily installed using a script, but on ubuntu 19.10 I had to install libnlopt-cxx-dev.\nThe policy learning went well, but I was not able to produce the results of the paper, due to the failure of the test_policy function with error: Attempted to look up malformed environment ID: b'../data/precomp_data/dog_run1/policy_params.pkl'. (Currently all IDs must be of the form ^(?:[\\w:-]+\\/)?([\\w:.-]+)-v(\\d+)$.)\nThis occured also when testing the provided precomputed policies.\n\nI also tried with an older release of dart-env (v0.7.4 - 2017) which seems to be handling registration but the same problem occured.",
        "Does the paper already have a reproducibility stamp": "Yes, http://www.replicabilitystamp.org",
        "Citation count (google scholar)": 28,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "libeigen3-dev libassimp-dev libccd-dev libfcl-dev libboost-regex-dev libboost-system-dev libopenscenegraph-dev libbullet-dev liburdfdom-dev libnlopt-dev libxi-dev libxmu-dev freeglut3-dev libtinyxml2-dev  swig tensorflow numpy dart pydart",
        "Project URL": "https://www.cc.gatech.edu/~turk/paper_pages/2018_symmetric_locomotion/",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Animation",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 3,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 1,
        "Documentation score": 1,
        "Paper authors": [
            {
                "given": "Wenhao",
                "family": "Yu",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Georgia Institute of Technology"
                    }
                ]
            },
            {
                "given": "Greg",
                "family": "Turk",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Georgia Institute of Technology"
                    }
                ]
            },
            {
                "given": "C. Karen",
                "family": "Liu",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Georgia Institute of Technology"
                    }
                ]
            }
        ],
        "Altmetric score": 5.85,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=6&types=vvtttttt",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=32180008"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Learning three-dimensional flow for interactive aerodynamic design",
        "DOI": "10.1145/3197517.3201325",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://pub.ist.ac.at/~bbickel/downloads/2018_sigg_Learning3DAerodynamics.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Gaussian processes",
        "ACM 2": "Real-time simulation",
        "ACM 3": "Physical simulation",
        "ACM 4": "Engineering",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 20,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "http://visualcomputing.ist.ac.at/publications/2018/LearningFlow/",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Animation",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 1,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Nobuyuki",
                "family": "Umetani",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Autodesk Research, Toronto, Canada"
                    }
                ]
            },
            {
                "given": "Bernd",
                "family": "Bickel",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "IST Austria, Vienna, Austria"
                    }
                ]
            }
        ],
        "Altmetric score": 35.95,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=36&types=mmmttttt",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=46495292"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Learning to Simplify: Fully Convolutional Networks for Rough Sketch Cleanup",
        "DOI": "10.1145/2897824.2925972",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on github, gitlab or other code platform",
        "Main languages": "Python",
        "How long did take for you to evaluate the code this paper (if any)?": 3,
        "Build info / instructions": "README, LICENSE or explicit license (e.g. in the readme / headers), AUTHORS or explicitly mentioned",
        "arXiv (page URL)": "",
        "code URL": "https://github.com/bobbens/sketch_simplification",
        "code URL  2": "",
        "PDF URL": "http://www.f.waseda.jp/hfs/SimoSerraSIGGRAPH2016.pdf",
        "License type": "SOFTWARE LICENSE AGREEMENT ACADEMIC OR NON-PROFIT ORGANIZATION NONCOMMERCIAL RESEARCH USE ONLY",
        "Build mechanism": "Not applicable (python, Matlab..)",
        "Mandatory Software dependencies": "Open-source libraries, Closed source (e.g. commercial) software or libraries free for research purposes",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 5,
        "Feedbacks [easy to configure/build (5=easy)]": 5,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "N/A",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "Yes",
        "Available data (provided or url / ref)": "Training data",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 4,
        "Feedbacks [Interface user-friendly (5=easy)]": 4,
        "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions",
        "Authors": "Academia",
        "ACM 1": "Fine arts",
        "ACM 2": "Neural networks",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Linux",
        "General comments": "The provided code implements both a 2018 paper and the 2016 paper. To be sure to run the 2016 paper, on line 10 replace model_gan.t7 by model_mse.t7 to load the provided pre-trained model . Not all figures input are given (the figs.sh script is for the 2018 paper) but the test.png corresponds to one of the example in Fig. 01. My result was more blurry than the one in the paper, and so were the results with other test images I could run.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 94,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "pytorch0.4.1/torchvision0.2.0/pillow",
        "Project URL": "https://esslab.jp/~ess/en/research/sketch/",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2016,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Image",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 4,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 1,
        "Documentation score": 1,
        "Paper authors": [
            {
                "given": "Edgar",
                "family": "Simo-Serra",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Waseda University"
                    }
                ]
            },
            {
                "given": "Satoshi",
                "family": "Iizuka",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Waseda University"
                    }
                ]
            },
            {
                "given": "Kazuma",
                "family": "Sasaki",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Waseda University"
                    }
                ]
            },
            {
                "given": "Hiroshi",
                "family": "Ishikawa",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Waseda University"
                    }
                ]
            }
        ],
        "Altmetric score": 31.15,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=32&types=tttttttt",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=19245212"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Legible Compact Calligrams",
        "DOI": "10.1145/2897824.2925887",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://www.cs.sfu.ca/~haoz/pubs/zou_sig16_calli.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Parametric curve and surface models",
        "ACM 2": "Shape analysis",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 12,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2016,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Image",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Changqing",
                "family": "Zou",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Simon Fraser University and Hengyang Normal University"
                    }
                ]
            },
            {
                "given": "Junjie",
                "family": "Cao",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Dalian University of Technology and Simon Fraser University"
                    }
                ]
            },
            {
                "given": "Warunika",
                "family": "Ranaweera",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Simon Fraser University"
                    }
                ]
            },
            {
                "given": "Ibraheem",
                "family": "Alhashim",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Simon Fraser University"
                    }
                ]
            },
            {
                "given": "Ping",
                "family": "Tan",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Simon Fraser University"
                    }
                ]
            },
            {
                "given": "Alla",
                "family": "Sheffer",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of British Columbia"
                    }
                ]
            },
            {
                "given": "Hao",
                "family": "Zhang",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Simon Fraser University"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Let there be color!: joint end-to-end learning of global and local image priors for automatic image colorization with simultaneous classification",
        "DOI": "10.1145/2897824.2925974",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on github, gitlab or other code platform",
        "Main languages": "Other",
        "How long did take for you to evaluate the code this paper (if any)?": 3,
        "Build info / instructions": "README, LICENSE or explicit license (e.g. in the readme / headers)",
        "arXiv (page URL)": "",
        "code URL": "https://github.com/satoshiiizuka/siggraph2016_colorization",
        "code URL  2": "",
        "PDF URL": "http://iizuka.cs.tsukuba.ac.jp/projects/colorization/data/colorization_sig2016.pdf",
        "License type": "CC BY-NC-SA 4.0",
        "Build mechanism": "Not applicable (python, Matlab..)",
        "Mandatory Software dependencies": "Open-source libraries",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 3,
        "Feedbacks [easy to configure/build (5=easy)]": "N/A",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "N/A",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "Yes",
        "Available data (provided or url / ref)": "Pre-trained models / Hardcoded data / lookup tables /...",
        "License for the data (if any)": "CC BY-NC-SA 4.0",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "N/A",
        "Feedbacks [Interface user-friendly (5=easy)]": "N/A",
        "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions",
        "Authors": "Academia",
        "ACM 1": "Image processing",
        "ACM 2": "Neural networks",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Windows",
        "General comments": "The short LUA code comes with a downloadable pretrained network (the data to retrain the network is from http://places.csail.mit.edu/ but the code to train the network is not provided). I used the Ubuntu for Windows framework (with Windows 10) to run the code, which was simpler here.\nI still needed to perform a number of steps:\n- dos2unix download_model.sh to prevent including the \\r in the download URL\n- sudo apt-get install cmake and sudo apt-get install libreadline-dev for dependencies\n- installing torch with nn was slightly harder than the instructions on the torch website claim:\ngit clone https://github.com/torch/distro.git ~/torch --recursive\ncd ~/torch\nthen on line 178 of install--deps  you need to change\nsudo apt-get install -y python-software-properties\nto sudo apt-get install -y software-properties-common since python-software-properties is not supported anymore.\nThen you can run bash install-deps and ./install.sh\nBut then you still need to install nn:\nsudo apt install luarocks\nsudo ~/torch/install/bin/luarocks install torch\nsudo ~/torch/install/bin/luarocks install nn\nand finally run the colorize script, not directly with \"th\" but using:\n~/torch/install/bin/th colorize.lua ansel_colorado_1941.png out.png\nThen everything works fine, runs smoothly (counts 2-3 minutes on the CPU for the only example image provided, which exactly replicate the landscape result in the teaser).",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 380,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "torch / torch-nn",
        "Project URL": "http://iizuka.cs.tsukuba.ac.jp/projects/colorization/data/colorization_sig2016.pdf",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2016,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Image",
        "Deep learning": "True",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 5,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 1,
        "Paper authors": [
            {
                "given": "Satoshi",
                "family": "Iizuka",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Waseda University"
                    }
                ]
            },
            {
                "given": "Edgar",
                "family": "Simo-Serra",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Waseda University"
                    }
                ]
            },
            {
                "given": "Hiroshi",
                "family": "Ishikawa",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Waseda University"
                    }
                ]
            }
        ],
        "Altmetric score": 4.45,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=5&types=tttttttt",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=63141179"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Lifted Bijections for Low Distortion Surface Mappings",
        "DOI": "10.1145/2601097.2601158",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution, On the author(s) repository (dropbox, github, drive, iCloud), Other (web, research gate, semantic scholar,...)",
        "Is the code or software publicly available ?": "No but pseudo-code in the PDF",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 2,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://noamaig.github.io/html/projects/lifted/lifted.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Computational geometry",
        "ACM 2": "Shape modeling",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 68,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2014,
        "Misc. comment": "The pseudo-codes given in the paper cover only sub-parts of the approach, and one might need some effort to replicate this work.",
        "Software Type": "",
        "Topic": "Geometry",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": 2,
        "Reviewer": 4,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Noam",
                "family": "Aigerman",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Roi",
                "family": "Poranne",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Yaron",
                "family": "Lipman",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Lightweight Eye Capture Using a Parametric Model",
        "DOI": "10.1145/2897824.2925962",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://cgl.ethz.ch/Downloads/Publications/Papers/2016/Pas16a/Pas16a.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Reconstruction",
        "ACM 2": "Shape modeling",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 22,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "https://cgl.ethz.ch/publications/papers/paperPas16a.php",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2016,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Animation",
        "Deep learning": "True",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Pascal",
                "family": "B\u00e9rard",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "ETH Zurich and Disney Research"
                    }
                ]
            },
            {
                "given": "Derek",
                "family": "Bradley",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Disney Research"
                    }
                ]
            },
            {
                "given": "Markus",
                "family": "Gross",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "ETH Zurich and Disney Research"
                    }
                ]
            },
            {
                "given": "Thabo",
                "family": "Beeler",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Disney Research"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Live intrinsic video",
        "DOI": "10.1145/2897824.2925907",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://gvv.mpi-inf.mpg.de/projects/LiveIntrinsicVideo/LiveIntrinsicVideo_Paper.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Computational photography",
        "ACM 2": "Mixed / augmented reality",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 44,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "https://richardt.name/publications/live-intrinsic-video/",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2016,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Image",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Abhimitra",
                "family": "Meka",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Max Planck Institute for Informatics"
                    }
                ]
            },
            {
                "given": "Michael",
                "family": "Zollh\u00f6fer",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Max Planck Institute for Informatics"
                    }
                ]
            },
            {
                "given": "Christian",
                "family": "Richardt",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Max Planck Institute for Informatics and Intel Visual Computing Institute"
                    }
                ]
            },
            {
                "given": "Christian",
                "family": "Theobalt",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Max Planck Institute for Informatics"
                    }
                ]
            }
        ],
        "Altmetric score": 3,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=3&types=aaaaaaaa",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=49746375"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Locally Injective Parametrization With Arbitrary Fixed Boundaries",
        "DOI": "10.1145/2601097.2601227",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://cims.nyu.edu/gcl/papers/weber2014lip.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Randomness, geometry and discrete structures",
        "ACM 2": "Shape modeling",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 36,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2014,
        "Misc. comment": "Technically there is an algorithm in the paper, but it implements a small fraction of the pipeline (just the refinement process). \nHowever, for all practical purpose, there is an unofficial implementation at https://github.com/hankstag/locally_injective_map",
        "Software Type": "",
        "Topic": "Geometry",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Ofir",
                "family": "Weber",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Denis",
                "family": "Zorin",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Look Over Here: Attention-Directing Composition of Manga Elements",
        "DOI": "10.1145/2601097.2601183",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://www.ying-cao.com/projects/manga_composition/files/composition_paper.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Computer graphics",
        "ACM 2": "Graphics recognition and interpretation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 37,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "http://www.ying-cao.com/projects/manga_composition/manga_composition.htm",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Image",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 3,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Ying",
                "family": "Cao",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Rynson W. H.",
                "family": "Lau",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Antoni B.",
                "family": "Chan",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Looking to listen at the cocktail party: a speaker-independent audio-visual model for speech separation",
        "DOI": "10.1145/3197517.3201357",
        "PDF availability (beside dl.acm)": "On an open archive arXiv or similar open archive, On the author(s) repository (dropbox, github, drive, iCloud)",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "https://arxiv.org/abs/1804.03619",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://arxiv.org/pdf/1804.03619.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia, Private Companies",
        "ACM 1": "",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 129,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "https://looking-to-listen.github.io",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Animation",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": true,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 3,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Ariel",
                "family": "Ephrat",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Google Research and The Hebrew University of Jerusalem, Israel"
                    }
                ]
            },
            {
                "given": "Inbar",
                "family": "Mosseri",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Google Research"
                    }
                ]
            },
            {
                "given": "Oran",
                "family": "Lang",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Google Research"
                    }
                ]
            },
            {
                "given": "Tali",
                "family": "Dekel",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Google Research"
                    }
                ]
            },
            {
                "given": "Kevin",
                "family": "Wilson",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Google Research"
                    }
                ]
            },
            {
                "given": "Avinatan",
                "family": "Hassidim",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Google Research"
                    }
                ]
            },
            {
                "given": "William T.",
                "family": "Freeman",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Google Research"
                    }
                ]
            },
            {
                "given": "Michael",
                "family": "Rubinstein",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Google Research"
                    }
                ]
            }
        ],
        "Altmetric score": 127.13,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=128&types=mbtttttg",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=36306599"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Magnetization dynamics for magnetic object interactions",
        "DOI": "10.1145/3197517.3201402",
        "PDF availability (beside dl.acm)": "Cannot answer",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Physical simulation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 1,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Animation",
        "Deep learning": "False",
        "hasThumbnail": false,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 1,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Seung-Wook",
                "family": "Kim",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Korea University"
                    }
                ]
            },
            {
                "given": "Sun Young",
                "family": "Park",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Korea University"
                    }
                ]
            },
            {
                "given": "Junghyun",
                "family": "Han",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Korea University"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Mapping Virtual and Physical Reality",
        "DOI": "10.1145/2897824.2925883",
        "PDF availability (beside dl.acm)": "Other (web, research gate, semantic scholar,...)",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://www.researchgate.net/publication/305217688_Mapping_virtual_and_physical_reality",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Virtual reality",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 61,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "https://1iyiwei.github.io/mvpr-sig16/",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2016,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Virtual Reality",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Qi",
                "family": "Sun",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Stony Brook University"
                    }
                ]
            },
            {
                "given": "Li-Yi",
                "family": "Wei",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of Hong Kong"
                    }
                ]
            },
            {
                "given": "Arie",
                "family": "Kaufman",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Stony Brook University"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Mechanical characterization of structured sheet materials",
        "DOI": "10.1145/3197517.3201278",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://www-labs.iro.umontreal.ca/~bernhard/PDF/Schumacher18Mechanical.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Computer-aided design",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 7,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "https://la.disneyresearch.com/publication/structured-sheet-materials/",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Animation",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 1,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Christian",
                "family": "Schumacher",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Disney Research and ETH Zurich"
                    }
                ]
            },
            {
                "given": "Steve",
                "family": "Marschner",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Cornell University"
                    }
                ]
            },
            {
                "given": "Markus",
                "family": "Cross",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Disney Research and ETH Zurich"
                    }
                ]
            },
            {
                "given": "Bernhard",
                "family": "Thomaszewski",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Universit\u00e9 de Montr\u00e9al"
                    }
                ]
            }
        ],
        "Altmetric score": 5.08,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=6&types=bbbbbbbb",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=45979963"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Megapixel Adaptive Optics: Towards Correcting Large-scale Distortions in Computational Cameras",
        "DOI": "10.1145/3197517.3201299",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on github, gitlab or other code platform",
        "Main languages": "Matlab / Mathematica / .., Shader language",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "README, LICENSE or explicit license (e.g. in the readme / headers)",
        "arXiv (page URL)": "",
        "code URL": "https://github.com/vccimaging/MegapixelAO",
        "code URL  2": "",
        "PDF URL": "https://vccimaging.org/Publications/Wang2018AdaptiveOptics/Wang2018AdaptiveOptics.pdf",
        "License type": "Creative Commons",
        "Build mechanism": "CMakeLists",
        "Mandatory Software dependencies": "Closed source (e.g. commercial) software or libraries free for research purposes, Paywall Closed source software or libraries",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "N/A",
        "Feedbacks [easy to configure/build (5=easy)]": "N/A",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "N/A (require specific devices / platforms)",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "N/A",
        "Feedbacks [Interface user-friendly (5=easy)]": "N/A",
        "Documentation": "API documentation, Technical documentation (comments-doxygen...)",
        "Authors": "Academia",
        "ACM 1": "Computational photography",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": 1,
        "OS of the test": "Windows",
        "General comments": "Part of the code requires an SLM to run, which I do not have ; this part also only compiles with VS2015 and not VS2017 (which I have), and has several dependencies. However, parts of the code (simple adaptive optics and the solver) also allow to reproduce some the paper's figures, and trivially run on matlab without dependencies.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 4,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "matlab / glad / KHR / cuda / OpenCV / GLFW / FlyCapture2",
        "Project URL": "https://vccimaging.org/Publications/Wang2018AdaptiveOptics/",
        "Did I manage to perform a complete test (deps/build)?": "No due to missing specific hardware",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Image",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": true,
        "Feedbacks [could reproduce results (5=highly confident)]": "N/A",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 1,
        "Paper authors": [
            {
                "given": "Congli",
                "family": "Wang",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "King Abdullah University of Science and Technology, Saudi Arabia"
                    }
                ]
            },
            {
                "given": "Qiang",
                "family": "Fu",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "King Abdullah University of Science and Technology, Saudi Arabia"
                    }
                ]
            },
            {
                "given": "Xiong",
                "family": "Dun",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "King Abdullah University of Science and Technology, Saudi Arabia"
                    }
                ]
            },
            {
                "given": "Wolfgang",
                "family": "Heidrich",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "King Abdullah University of Science and Technology, Saudi Arabia"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Mesh Arrangements for Solid Geometry",
        "DOI": "10.1145/2897824.2925901",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "as a module/component of an existing opensource library/software",
        "Main languages": "C/C++",
        "How long did take for you to evaluate the code this paper (if any)?": 2,
        "Build info / instructions": "README, LICENSE or explicit license (e.g. in the readme / headers), CONTRIBUTING or explicitly mentions how to contribute to the code, AUTHORS or explicitly mentioned",
        "arXiv (page URL)": "",
        "code URL": "https://libigl.github.io/tutorial/#boolean-operations-on-meshes",
        "code URL  2": "",
        "PDF URL": "http://www.cs.columbia.edu/cg/mesh-arrangements/mesh-arrangements-for-solid-geometry-siggraph-2016-zhou-et-al.pdf",
        "License type": "MPL2",
        "Build mechanism": "CMakeLists",
        "Mandatory Software dependencies": "Open-source libraries",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 5,
        "Feedbacks [easy to configure/build (5=easy)]": 5,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "N/A",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 4,
        "Feedbacks [Interface user-friendly (5=easy)]": 3,
        "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions, API documentation, Technical documentation (comments-doxygen...)",
        "Authors": "Academia",
        "ACM 1": "Computer graphics",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Mac OS",
        "General comments": "The code is given as a part of the libigl library. A specific tutorial example (#609) illustrates the boolean operation on meshes described in the paper. The core of paper results can thus be reproduced but not all of them (some are application dependent).",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 57,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "CGAL",
        "Project URL": "http://www.cs.columbia.edu/cg/mesh-arrangements/",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2016,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Geometry",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 3,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 3,
        "Documentation score": 2,
        "Paper authors": [
            {
                "given": "Qingnan",
                "family": "Zhou",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "New York University"
                    }
                ]
            },
            {
                "given": "Eitan",
                "family": "Grinspun",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Columbia University"
                    }
                ]
            },
            {
                "given": "Denis",
                "family": "Zorin",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "New York University"
                    }
                ]
            },
            {
                "given": "Alec",
                "family": "Jacobson",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Columbia University"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Meta-representations of Shape Families",
        "DOI": "10.1145/2601097.2601185",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://vecg.cs.ucl.ac.uk/Projects/SmartGeometry/metarep/paper_docs/metaRepresentation_sigg14.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Randomness, geometry and discrete structures",
        "ACM 2": "Shape modeling",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 66,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "http://vecg.cs.ucl.ac.uk/Projects/SmartGeometry/metarep/metaRep_sigg14.html",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Geometry",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 3,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Noa",
                "family": "Fish",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Melinos",
                "family": "Averkiou",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Oliver",
                "family": "van Kaick",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Olga",
                "family": "Sorkine-Hornung",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Daniel",
                "family": "Cohen-Or",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Niloy J.",
                "family": "Mitra",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 5.488,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=6&types=bbbbbbbb",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=4462793"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Metamolds: computational design of silicone molds",
        "DOI": "10.1145/3197517.3201381",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://vcg.isti.cnr.it/Publications/2018/AMGPBC18/2018%20ACM%20TOG%20Metamolds%20-%20personal.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Shape modeling",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 9,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "http://vcg.isti.cnr.it/Publications/2018/AMGPBC18/",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Fabrication",
        "Deep learning": "True",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 1,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Thomas",
                "family": "Alderighi",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "University of Pisa and ISTI - CNR"
                    }
                ]
            },
            {
                "given": "Luigi",
                "family": "Malomo",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "ISTI - CNR"
                    }
                ]
            },
            {
                "given": "Daniela",
                "family": "Giorgi",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "ISTI - CNR"
                    }
                ]
            },
            {
                "given": "Nico",
                "family": "Pietroni",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of Technology Sidney and ISTI - CNR"
                    }
                ]
            },
            {
                "given": "Bernd",
                "family": "Bickel",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "IST Austria"
                    }
                ]
            },
            {
                "given": "Paolo",
                "family": "Cignoni",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "ISTI - CNR"
                    }
                ]
            }
        ],
        "Altmetric score": 44.08,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=45&types=mmmmmmbb",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=46728686"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Mode-adaptive neural networks for quadruped motion control",
        "DOI": "10.1145/3197517.3201366",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on github, gitlab or other code platform",
        "Main languages": "Python",
        "How long did take for you to evaluate the code this paper (if any)?": 10,
        "Build info / instructions": "README, LICENSE or explicit license (e.g. in the readme / headers), AUTHORS or explicitly mentioned",
        "arXiv (page URL)": "",
        "code URL": "https://github.com/ShikamaruZhang/MANN",
        "code URL  2": "",
        "PDF URL": "http://homepages.inf.ed.ac.uk/tkomura/dog.pdf",
        "License type": "This code implementation is only for research or education purposes, and (especially the learned data) not freely available for commercial use or redistribution. The intellectual property and code implementation belongs to the University of Edinburgh.",
        "Build mechanism": "Not applicable (python, Matlab..)",
        "Mandatory Software dependencies": "Closed source (e.g. commercial) software or libraries free for research purposes",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 5,
        "Feedbacks [easy to configure/build (5=easy)]": 5,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "N/A",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 1,
        "Feedbacks [Interface user-friendly (5=easy)]": 3,
        "Documentation": "None",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Neural networks",
        "ACM 2": "Motion capture",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Linux",
        "General comments": "Was able to launch the training, which ran smoothly, but I was unable to visualize the result. No readme was provided.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 26,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "tensorflow",
        "Project URL": "",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Animation",
        "Deep learning": "True",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 3,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 1,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "He",
                "family": "Zhang",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "University of Edinburgh"
                    }
                ]
            },
            {
                "given": "Sebastian",
                "family": "Starke",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of Edinburgh"
                    }
                ]
            },
            {
                "given": "Taku",
                "family": "Komura",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of Edinburgh"
                    }
                ]
            },
            {
                "given": "Jun",
                "family": "Saito",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Adobe Research"
                    }
                ]
            }
        ],
        "Altmetric score": 0.5,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=1&types=tttttttt",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=46381211"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Modeling and Optimizing Eye Vergence Response to Stereoscopic Cuts",
        "DOI": "10.1145/2601097.2601148",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://resources.mpi-inf.mpg.de/VergenceModel/paper.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Rendering",
        "ACM 2": "Image manipulation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 20,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "http://resources.mpi-inf.mpg.de/VergenceModel/",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2014,
        "Misc. comment": "Matlab code is provided: however, the code only allows to browse results (similarly to a website) rather than allowing to produce results (which would be difficult in this case of experimental paper).",
        "Software Type": "",
        "Topic": "Virtual Reality",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Krzysztof",
                "family": "Templin",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Piotr",
                "family": "Didyk",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Karol",
                "family": "Myszkowski",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Mohamed M.",
                "family": "Hefeeda",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Hans-Peter",
                "family": "Seidel",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Wojciech",
                "family": "Matusik",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Modeling Dense Inflorescences",
        "DOI": "10.1145/2897824.2925982",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://algorithmicbotany.org/papers/inflorescence.sig16.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Life and medical sciences",
        "ACM 2": "Shape modeling",
        "ACM 3": "Procedural animation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 16,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "http://algorithmicbotany.org/papers/inflorescence.sig16.html",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2016,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Geometry",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": true,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Andrew",
                "family": "Owens",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "University of Calgary"
                    }
                ]
            },
            {
                "given": "Mikolaj",
                "family": "Cieslak",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of Calgary"
                    }
                ]
            },
            {
                "given": "Jeremy",
                "family": "Hart",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of Calgary"
                    }
                ]
            },
            {
                "given": "Regine",
                "family": "Classen-Bockhoff",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Johannes Gutenberg-Universit\u00e4t Mainz"
                    }
                ]
            },
            {
                "given": "Przemyslaw",
                "family": "Prusinkiewicz",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of Calgary"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Motion Graphs for Unstructured Textured Meshes",
        "DOI": "10.1145/2897824.2925967",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No but pseudo-code in the PDF",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://hhoppe.com/motiongraph.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Computer graphics",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 23,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "http://hhoppe.com/proj/motiongraph/",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2016,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Animation",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": 1,
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Fabi\u00e1n",
                "family": "Prada",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Johns Hopkins University"
                    }
                ]
            },
            {
                "given": "Misha",
                "family": "Kazhdan",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Johns Hopkins University"
                    }
                ]
            },
            {
                "given": "Ming",
                "family": "Chuang",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Microsoft Corporation"
                    }
                ]
            },
            {
                "given": "Alvaro",
                "family": "Collet",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Microsoft Corporation"
                    }
                ]
            },
            {
                "given": "Hugues",
                "family": "Hoppe",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Microsoft Corporation"
                    }
                ]
            }
        ],
        "Altmetric score": 3,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=3&types=aaaaaaaa",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=42946108"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Multi-Scale Label-Map Extraction for Texture Synthesis",
        "DOI": "10.1145/2897824.2925964",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on github, gitlab or other code platform",
        "Main languages": "C/C++, Python",
        "How long did take for you to evaluate the code this paper (if any)?": 3,
        "Build info / instructions": "README, LICENSE or explicit license (e.g. in the readme / headers), AUTHORS or explicitly mentioned",
        "arXiv (page URL)": "",
        "code URL": "https://github.com/ylockerman/multi-scale-label-map-extraction/",
        "code URL  2": "",
        "PDF URL": "https://graphics.cs.yale.edu/sites/default/files/multi-scale_label-map_extraction_for_texture_synthesis.pdf",
        "License type": "MIT",
        "Build mechanism": "CMakeLists, Not applicable (python, Matlab..)",
        "Mandatory Software dependencies": "Open-source libraries",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 5,
        "Feedbacks [easy to configure/build (5=easy)]": 2,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "N/A",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "N/A",
        "Feedbacks [Interface user-friendly (5=easy)]": "N/A",
        "Documentation": "None",
        "Authors": "Academia",
        "ACM 1": "Image processing",
        "ACM 2": "Texturing",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Mac OS",
        "General comments": "No explanations are given to build/execute the code. After installing the dependencies, I have tried to run an example in the 'src' folder:\n\npython ../examples/SLIC_compare.py\n\nwhich crashes due to opencl/Tk issues.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 15,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "numpy/scipy/bottleneck/joblib/Mako/msgpack_python/pyamg / pyopencl/pytools/scikit-image/matplotlib/scikit-learn",
        "Project URL": "https://graphics.cs.yale.edu/publications/multi-scale-label-map-extraction-texture-synthesis",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2016,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Image",
        "Deep learning": "True",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "N/A",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 3,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Yitzchak David",
                "family": "Lockerman",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Yale University, New Haven"
                    }
                ]
            },
            {
                "given": "Basile",
                "family": "Sauvage",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "ICube, Universit\u00e9 de Strasbourg, CNRS, France"
                    }
                ]
            },
            {
                "given": "R\u00e9mi",
                "family": "All\u00e8gre",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "ICube, Universit\u00e9 de Strasbourg, CNRS, France"
                    }
                ]
            },
            {
                "given": "Jean-Michel",
                "family": "Dischler",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "ICube, Universit\u00e9 de Strasbourg, CNRS, France"
                    }
                ]
            },
            {
                "given": "Julie",
                "family": "Dorsey",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Yale University, New Haven"
                    }
                ]
            },
            {
                "given": "Holly",
                "family": "Rushmeier",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Yale University, New Haven"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Multi-Scale Rendering of Scratched Materials using a Structured SV-BRDF Model",
        "DOI": "10.1145/2897824.2925945",
        "PDF availability (beside dl.acm)": "On an open archive arXiv or similar open archive",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "https://hal.inria.fr/hal-01321289",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://hal.inria.fr/hal-01321289/file/small.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Reflectance modeling",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 20,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2016,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Rendering",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Boris",
                "family": "Raymond",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Inria - Bordeaux University - CNRS"
                    }
                ]
            },
            {
                "given": "Ga\u00ebl",
                "family": "Guennebaud",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Inria - Bordeaux University - CNRS"
                    }
                ]
            },
            {
                "given": "Pascal",
                "family": "Barla",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Inria - Bordeaux University - CNRS"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Multi-Scale Simulation of Nonlinear Thin-Shell Sound with Wave Turbulence",
        "DOI": "10.1145/3197517.3201361",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://www-sop.inria.fr/reves/Basilic/2018/CQDGZ18/ThinShellSounds.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Physical simulation",
        "ACM 2": "Sound and music computing",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 5,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "https://www-sop.inria.fr/reves/Basilic/2018/CQDGZ18/",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Animation",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 1,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Gabriel",
                "family": "Cirio",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Inria, Universit\u00e9 C\u00f4te d'Azur and Columbia University"
                    }
                ]
            },
            {
                "given": "Ante",
                "family": "Qu",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Stanford University"
                    }
                ]
            },
            {
                "given": "George",
                "family": "Drettakis",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Inria and Universit\u00e9 C\u00f4te d'Azur"
                    }
                ]
            },
            {
                "given": "Eitan",
                "family": "Grinspun",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Columbia University"
                    }
                ]
            },
            {
                "given": "Changxi",
                "family": "Zheng",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Columbia University"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Multimaterial Mesh-Based Surface Tracking",
        "DOI": "10.1145/2601097.2601146",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on the authors website or project page (zip file, direct download...), on github, gitlab or other code platform",
        "Main languages": "C/C++",
        "How long did take for you to evaluate the code this paper (if any)?": 2,
        "Build info / instructions": "README, LICENSE or explicit license (e.g. in the readme / headers)",
        "arXiv (page URL)": "",
        "code URL": "https://github.com/fangda-cu/MultiTracker",
        "code URL  2": "http://www.cs.columbia.edu/cg/multitracker/code/",
        "PDF URL": "http://www.cs.columbia.edu/cg/multitracker/multitracker.pdf",
        "License type": "Copyright (c) 2014, Fang Da (Columbia University), Christopher Batty  (University of Waterloo) and Eitan Grinspun (Columbia University) All rights reserved.",
        "Build mechanism": "CMakeLists",
        "Mandatory Software dependencies": "Open-source libraries",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 5,
        "Feedbacks [easy to configure/build (5=easy)]": 5,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "N/A",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 5,
        "Feedbacks [Interface user-friendly (5=easy)]": 3,
        "Documentation": "None",
        "Authors": "Academia",
        "ACM 1": "Simulation by animation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Mac OS",
        "General comments": "No issue to build the code and run the examples. I had to look at the code to understand the keys for the viewer but it was quite explicit. Almost all figures have an example file to easily reproduce the results.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 43,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "Eigen/blas/lapack",
        "Project URL": "http://www.cs.columbia.edu/cg/multitracker/",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Animation",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 5,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 3,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Fang",
                "family": "Da",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Christopher",
                "family": "Batty",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Eitan",
                "family": "Grinspun",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 1,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=1&types=tttttttt",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=2542044"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Multiphase SPH Simulation for Interactive Fluids and Solids",
        "DOI": "10.1145/2897824.2925897",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No but pseudo-code in the PDF",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://cg.cs.tsinghua.edu.cn/papers/SIG_2016_Multiphase.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Physical simulation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 37,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2016,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Animation",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": 1,
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Xiao",
                "family": "Yan",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Tsinghua University"
                    }
                ]
            },
            {
                "given": "Yun-Tao",
                "family": "Jiang",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Tsinghua University"
                    }
                ]
            },
            {
                "given": "Chen-Feng",
                "family": "Li",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Swansea University"
                    }
                ]
            },
            {
                "given": "Ralph R.",
                "family": "Martin",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Cardiff University"
                    }
                ]
            },
            {
                "given": "Shi-Min",
                "family": "Hu",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Tsinghua University"
                    }
                ]
            }
        ],
        "Altmetric score": 1,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=1&types=tttttttt",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=60794254"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Multiple-Scattering Microfacet BSDFs with the Smith Model",
        "DOI": "10.1145/2897824.2925943",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on the authors website or project page (zip file, direct download...)",
        "Main languages": "C/C++",
        "How long did take for you to evaluate the code this paper (if any)?": 3,
        "Build info / instructions": "README",
        "arXiv (page URL)": "",
        "code URL": "https://drive.google.com/file/d/0BzvWIdpUpRx_bTdXTEFfaWlQRUE/view",
        "code URL  2": "",
        "PDF URL": "https://drive.google.com/uc?id=0BzvWIdpUpRx_cFVlUkFhWXdleEU&export=download",
        "License type": "unspecified",
        "Build mechanism": "None",
        "Mandatory Software dependencies": "Open-source libraries",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "N/A",
        "Feedbacks [easy to configure/build (5=easy)]": 4,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "N/A",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 4,
        "Feedbacks [Interface user-friendly (5=easy)]": 5,
        "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions, API documentation, Technical documentation (comments-doxygen...)",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Reflectance modeling",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Linux",
        "General comments": "The authors provide both a mitsuba plugin and a tutorial implementation source code. \n\nFor the mitsuba plugin, by adding the .cpp and .h to mitsuba/src/bsdfs folder and adding lines:\nplugins += env.SharedLibrary('roughconductorGGX', ['roughconductorGGX.cpp'])\nplugins += env.SharedLibrary('roughdiffuseGGX', ['roughdiffuseGGX.cpp'])\nplugins += env.SharedLibrary('roughdielectricGGX', ['roughdielectricGGX.cpp']) \nto mitsuba/src/bsdfs/SConscript , everything compiles well. The examples work after using the mitsuba gui to convert the scenes from version 0.5 to 0.6. However the examples are not the same as in the paper (but they do loook similar).\n\nThe tutorial code consists in a C++ class (with a very precise and clear technical documentation) but no example is given. The code looks fine but I was not able to produce some results with the tutorials.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 58,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "glm",
        "Project URL": "https://eheitzresearch.wordpress.com/240-2/",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2016,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Rendering",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 5,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 1,
        "Documentation score": 2,
        "Paper authors": [
            {
                "given": "Eric",
                "family": "Heitz",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Karlsruhe Institute of Technology"
                    }
                ]
            },
            {
                "given": "Johannes",
                "family": "Hanika",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Karlsruhe Institute of Technology"
                    }
                ]
            },
            {
                "given": "Eugene",
                "family": "d'Eon",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "8i"
                    }
                ]
            },
            {
                "given": "Carsten",
                "family": "Dachsbacher",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Karlsruhe Institute of Technology"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Multiplexed Metropolis Light Transport",
        "DOI": "10.1145/2601097.2601138",
        "PDF availability (beside dl.acm)": "On the author(s) repository (dropbox, github, drive, iCloud)",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://www.ci.i.u-tokyo.ac.jp/~hachisuka/mmlt.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Ray tracing",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 57,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2014,
        "Misc. comment": "An unofficial implementation can be found in EDXRay (https://github.com/behindthepixels/EDXRay/commit/3af2fb67237de651e6ac6877ac07acb38b9fafd5)",
        "Software Type": "",
        "Topic": "Rendering",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 4,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Toshiya",
                "family": "Hachisuka",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Anton S.",
                "family": "Kaplanyan",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Carsten",
                "family": "Dachsbacher",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 1,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=1&types=tttttttt",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=2980697"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Neural best-buddies: sparse cross-domain correspondence",
        "DOI": "10.1145/3197517.3201332",
        "PDF availability (beside dl.acm)": "On an open archive arXiv or similar open archive",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on github, gitlab or other code platform",
        "Main languages": "Python",
        "How long did take for you to evaluate the code this paper (if any)?": 2,
        "Build info / instructions": "README",
        "arXiv (page URL)": "https://arxiv.org/abs/1805.04140",
        "code URL": "https://github.com/kfiraberman/neural_best_buddies",
        "code URL  2": "",
        "PDF URL": "https://arxiv.org/pdf/1805.04140.pdf",
        "License type": "unspecified",
        "Build mechanism": "Not applicable (python, Matlab..)",
        "Mandatory Software dependencies": "Open-source libraries, Closed source (e.g. commercial) software or libraries free for research purposes",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 4,
        "Feedbacks [easy to configure/build (5=easy)]": 4,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": 5,
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 5,
        "Feedbacks [Interface user-friendly (5=easy)]": 4,
        "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Interest point and salient region detections",
        "ACM 2": "Matching",
        "ACM 3": "Image manipulation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Linux",
        "General comments": "sklearn dependency was not explicitly mentioned in the README. To make the code working on recent pytorch, I needed to update in line of code :\n\n\n@@ -92,7 +92,7 @@ class vgg19(nn.Module):\n             deconvolved_feature_forward = self.forward(level=src_level, start_level=dst_level, set_as_var = False)\n             loss_perceptual = criterionPerceptual(deconvolved_feature_forward, src_layer)\n             loss_perceptual.backward()\n-            error = loss_perceptual.data[0]\n+            error = loss_perceptual.item()\n             self.update_last_losses(error)\n             if (i % 3 == 0) and (print_errors == True):\n                 print(\"error: \", error)",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 9,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "CUDA / CuDNN / sklearn / numpy / torchvision / matplotlib",
        "Project URL": "https://kfiraberman.github.io/neural_best_buddies/",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Image",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 5,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 3,
        "Documentation score": 1,
        "Paper authors": [
            {
                "given": "Kfir",
                "family": "Aberman",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Tel-Aviv University"
                    }
                ]
            },
            {
                "given": "Jing",
                "family": "Liao",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Microsoft Research Asia"
                    }
                ]
            },
            {
                "given": "Mingyi",
                "family": "Shi",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Shandong University"
                    }
                ]
            },
            {
                "given": "Dani",
                "family": "Lischinski",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Hebrew University of Jerusalem"
                    }
                ]
            },
            {
                "given": "Baoquan",
                "family": "Chen",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Shandong University and Peking University"
                    }
                ]
            },
            {
                "given": "Daniel",
                "family": "Cohen-Or",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Tel-Aviv University"
                    }
                ]
            }
        ],
        "Altmetric score": 24.45,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=25&types=rttttttt",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=41314218"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Non-Linear Shape Optimization Using Local Subspace Projections",
        "DOI": "10.1145/2897824.2925886",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution, Other (web, research gate, semantic scholar,...)",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on the authors website or project page (zip file, direct download...)",
        "Main languages": "Matlab / Mathematica / ..",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "None",
        "arXiv (page URL)": "",
        "code URL": "https://www.cg.tuwien.ac.at/research/publications/2016/musialski_2016_sosp/musialski_2016_sosp-code.zip",
        "code URL  2": "",
        "PDF URL": "https://www.graphics.rwth-aachen.de/media/papers/modes2016_camready.pdf",
        "License type": "unspecified",
        "Build mechanism": "Not applicable (python, Matlab..)",
        "Mandatory Software dependencies": "Paywall Closed source software or libraries",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "N/A",
        "Feedbacks [easy to configure/build (5=easy)]": 5,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": 5,
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 2,
        "Feedbacks [Interface user-friendly (5=easy)]": 5,
        "Documentation": "Technical documentation (comments-doxygen...)",
        "Authors": "Academia",
        "ACM 1": "Computational geometry",
        "ACM 2": "Mesh geometry models",
        "ACM 3": "Nonconvex optimization",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": 1,
        "OS of the test": "Windows",
        "General comments": "The code directly runs without modifications. However:\n- there are compiled mex files for which no source code is provided. For the obj file reader it is not a big deal, but for the mass moments and their gradient, it makes it harder to reimplement.\n- the code reproduces the armadillo in Fig. 17, but the other models are not provided.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 27,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "matlab",
        "Project URL": "https://www.cg.tuwien.ac.at/research/publications/2016/musialski_2016_sosp/",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2016,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Fabrication",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 5,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 1,
        "Paper authors": [
            {
                "given": "Przemyslaw",
                "family": "Musialski",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "TU Wien"
                    }
                ]
            },
            {
                "given": "Christian",
                "family": "Hafner",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "TU Wien"
                    }
                ]
            },
            {
                "given": "Florian",
                "family": "Rist",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "TU Wien"
                    }
                ]
            },
            {
                "given": "Michael",
                "family": "Birsak",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "TU Wien"
                    }
                ]
            },
            {
                "given": "Michael",
                "family": "Wimmer",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "TU Wien"
                    }
                ]
            },
            {
                "given": "Leif",
                "family": "Kobbelt",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "RWTH Aachen"
                    }
                ]
            }
        ],
        "Altmetric score": 44,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=44&types=mmmmmmmm",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=16806065"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Non-stationary texture synthesis by adversarial expansion",
        "DOI": "10.1145/3197517.3201285",
        "PDF availability (beside dl.acm)": "On an open archive arXiv or similar open archive, On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on github, gitlab or other code platform",
        "Main languages": "Python",
        "How long did take for you to evaluate the code this paper (if any)?": 10,
        "Build info / instructions": "README, LICENSE or explicit license (e.g. in the readme / headers), AUTHORS or explicitly mentioned",
        "arXiv (page URL)": "https://arxiv.org/abs/1805.04487",
        "code URL": "https://github.com/jessemelpolio/non-stationary_texture_syn",
        "code URL  2": "",
        "PDF URL": "https://arxiv.org/pdf/1805.04487.pdf",
        "License type": "MIT",
        "Build mechanism": "Not applicable (python, Matlab..)",
        "Mandatory Software dependencies": "Open-source libraries, Closed source (e.g. commercial) software or libraries free for research purposes",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 4,
        "Feedbacks [easy to configure/build (5=easy)]": 5,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": 4,
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "Yes",
        "Available data (provided or url / ref)": "Training data",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 3,
        "Feedbacks [Interface user-friendly (5=easy)]": 3,
        "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions",
        "Authors": "Academia",
        "ACM 1": "Appearance and texture representations",
        "ACM 2": "Texturing",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Linux",
        "General comments": "The code is supposed to support python3 (script train_half_style starts with python3), but several changes need to be made to make it work with python3: tensor[0] should be replaced by tensor.item(), xrange() should be replaced by range(). Needs also visdom and dominate package which were not listed in the README.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 30,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "pytorch/cuda",
        "Project URL": "https://vcc.tech/research/2018/TexSyn",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Image",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 5,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 1,
        "Documentation score": 1,
        "Paper authors": [
            {
                "given": "Yang",
                "family": "Zhou",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Shenzhen University and Huazhong University of Science & Technology"
                    }
                ]
            },
            {
                "given": "Zhen",
                "family": "Zhu",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Huazhong University of Science and Technology"
                    }
                ]
            },
            {
                "given": "Xiang",
                "family": "Bai",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Huazhong University of Science and Technology"
                    }
                ]
            },
            {
                "given": "Dani",
                "family": "Lischinski",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "The Hebrew University of Jerusalem"
                    }
                ]
            },
            {
                "given": "Daniel",
                "family": "Cohen-Or",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Shenzhen University and Tel Aviv University"
                    }
                ]
            },
            {
                "given": "Hui",
                "family": "Huang",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Shenzhen University"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Numerical Coarsening using Discontinuous Shape Functions",
        "DOI": "10.1145/3197517.3201386",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://www.geometry.caltech.edu/pubs/CBWDH18.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Physical simulation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 6,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Geometry",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 3,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Jiong",
                "family": "Chen",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Zhejiang University"
                    }
                ]
            },
            {
                "given": "Hujun",
                "family": "Bao",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Zhejiang University"
                    }
                ]
            },
            {
                "given": "Tianyu",
                "family": "Wang",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Zhejiang University"
                    }
                ]
            },
            {
                "given": "Mathieu",
                "family": "Desbrun",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Caltech"
                    }
                ]
            },
            {
                "given": "Jin",
                "family": "Huang",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Zhejiang University"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Object-aware guidance for autonomous scene reconstruction",
        "DOI": "10.1145/3197517.3201295",
        "PDF availability (beside dl.acm)": "On an open archive arXiv or similar open archive, On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on github, gitlab or other code platform",
        "Main languages": "C/C++",
        "How long did take for you to evaluate the code this paper (if any)?": 5,
        "Build info / instructions": "README",
        "arXiv (page URL)": "https://arxiv.org/abs/1805.07794",
        "code URL": "https://github.com/againxx/nbo-autoscanning",
        "code URL  2": "",
        "PDF URL": "http://vcc.szu.edu.cn/file/upload_file//image/research/att201805111047/ObjNBV.pdf",
        "License type": "unspecified",
        "Build mechanism": "Makefile, CMakeLists",
        "Mandatory Software dependencies": "Open-source libraries, Paywall Closed source software or libraries",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "N/A",
        "Feedbacks [easy to configure/build (5=easy)]": "N/A",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "N/A",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "N/A",
        "Feedbacks [Interface user-friendly (5=easy)]": "N/A",
        "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions, API documentation",
        "Authors": "Academia",
        "ACM 1": "Shape analysis",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Linux",
        "General comments": "Unable to build: ROS is not compiling. Old version of cuda is required (not working on virtual machine).",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 5,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "ROS/opencv/cuDNN/ElasticFusion/Pangolin/SuiteSparse/cuda",
        "Project URL": "https://vcc.tech/research/2018/ObjNBV",
        "Did I manage to perform a complete test (deps/build)?": "No due to technical issue",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Image",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "N/A",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 1,
        "Documentation score": 1,
        "Paper authors": [
            {
                "given": "Ligang",
                "family": "Liu",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "University of Science and Technology of China"
                    }
                ]
            },
            {
                "given": "Xi",
                "family": "Xia",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of Science and Technology of China"
                    }
                ]
            },
            {
                "given": "Han",
                "family": "Sun",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of Science and Technology of China"
                    }
                ]
            },
            {
                "given": "Qi",
                "family": "Shen",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of Science and Technology of China"
                    }
                ]
            },
            {
                "given": "Juzhan",
                "family": "Xu",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Shenzhen University"
                    }
                ]
            },
            {
                "given": "Bin",
                "family": "Chen",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Shenzhen University"
                    }
                ]
            },
            {
                "given": "Hui",
                "family": "Huang",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Shenzhen University"
                    }
                ]
            },
            {
                "given": "Kai",
                "family": "Xu",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Shenzhen University and National University of Defense Technology"
                    }
                ]
            }
        ],
        "Altmetric score": 1,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=1&types=tttttttt",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=42271234"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "On the Convexity and Feasibility of the Bounded Distortion Harmonic Mapping Problem",
        "DOI": "10.1145/2897824.2925929",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No but pseudo-code in the PDF",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://www.eng.biu.ac.il/~weberof/Publications/Harmonic-Convex/On_the_Convexity_and_Feasibility_of_the_Bounded_Distortion_Harmonic_Mapping_Problem.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Mesh models",
        "ACM 2": "Shape analysis",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 9,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2016,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Geometry",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": 2,
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Zohar",
                "family": "Levi",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Victoria University of Wellington, New Zealand"
                    }
                ]
            },
            {
                "given": "Ofir",
                "family": "Weber",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Bar Ilan University, Israel"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "On-line Learning of Parametric Mixture Models for Light Transport Simulation",
        "DOI": "10.1145/2601097.2601203",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution, Other (web, research gate, semantic scholar,...)",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on the authors website or project page (zip file, direct download...)",
        "Main languages": "C/C++",
        "How long did take for you to evaluate the code this paper (if any)?": 10,
        "Build info / instructions": "README, LICENSE or explicit license (e.g. in the readme / headers)",
        "arXiv (page URL)": "",
        "code URL": "http://cgg.mff.cuni.cz/~jirka/papers/2014/olpm/olpm2014_source.zip",
        "code URL  2": "",
        "PDF URL": "https://cgg.mff.cuni.cz/~jaroslav/papers/2014-onlineis/2014-onlineis-paper.pdf",
        "License type": "GPL",
        "Build mechanism": "IDE Project (VS,..), SCONS",
        "Mandatory Software dependencies": "Open-source libraries",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "N/A",
        "Feedbacks [easy to configure/build (5=easy)]": 1,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": 1,
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "N/A",
        "Feedbacks [Interface user-friendly (5=easy)]": "N/A",
        "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions, API documentation, Technical documentation (comments-doxygen...)",
        "Authors": "Academia",
        "ACM 1": "Rendering",
        "ACM 2": "Image manipulation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Windows",
        "General comments": "I tried compiling the code on Windows+Python3.6+VS2017. \n\nFirst, the Sconscriptshould be updated to have \"print ....\" changed to \"print(...)\". This includes at lines 23, 29-30, 100, 104, 178, 184, 189, 194, 199, 203, 217, 221, 224, 227, 230, 237, 240, 244, 247, 250, 253, 257, 260, 264, 279, 282, 299--306 of Sconscript.configure and line 30 of Sconscript.install.\n\nThen the config-win64-msvc2010.py should be updated. You need to add '/arch:AVX' to CXXFLAGS, and change MSVC_VERSION    = '10.0' to MSVC_VERSION    = '14.1'  (I tried 15.0 since I have VS2017, but VS complained).\n\nIn mitsuba/cor/util.h, you need to add #include <intrin.h>\nIn Mitsuba 0.5.0\\dependencies\\include\\boost\\config\\compiler\\visualc.hpp, you may comment-out lined 44  #if _MSC_VER < 1300 and the matching #end line 54, and perhaps manually set #define BOOST_COMPILER_VERSION evc15 instead of the error message lines 283--287.\n\nIn LibImportance/shared/Config.h, I have issues with \n    const Float NAN = std::numeric_limits<Float>::signaling_NaN();\n    const Float INFINITY = std::numeric_limits<Float>::infinity();\nline 109.\nAdding #undef NAN and #undef INFINITY did not solve the problem, and commenting out these two lines either.\n\nIn LibImportance/shared/Sse.h, the compiler complains about undefined SSE functions, or similarly in avx_mathfun.h, it complains about the undefined __m256 type. Adding #include <intrin.h> did not help (anyway, there is already #include <immintrin.h> ), and passing the /arch:AVX to the compiler in the config-win64-msvc2010.py did not help either (usually, having arch:AVX and intrin.h is sufficient to have __m256 defined ; however, while this works with VisualStudio alone, the SConsScript may not work).\n\nUltimately, I could not fix these issues and run the code.\n\n-- Alternate test on Linux \nCompilation did not succeed on Linux.\n fatal error: xutility: No such file or directory   27 | #include <xutility>, after commenting this line, I got to the error:\nfastonebigheader.h:60:10: fatal error: PrecompiledLibs/Embree/common/simd/smmintrin_emu.h: No such file or directory\n   60 | #include \"PrecompiledLibs/Embree/common/simd/smmintrin_emu.h\"\n\nwhich I was not able to solve.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 76,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "mitsuba",
        "Project URL": "https://cgg.mff.cuni.cz/~jaroslav/papers/2014-onlineis/",
        "Did I manage to perform a complete test (deps/build)?": "No due to technical issue",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Rendering",
        "Deep learning": "True",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 1,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 2,
        "Paper authors": [
            {
                "given": "Ji\u0159\u00ed",
                "family": "Vorba",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Ond\u0159ej",
                "family": "Karl\u00edk",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Martin",
                "family": "\u0160ik",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Tobias",
                "family": "Ritschel",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Jaroslav",
                "family": "K\u0159iv\u00e1nek",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Online Motion Synthesis Using Sequential Monte Carlo",
        "DOI": "10.1145/2601097.2601218",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No but pseudo-code in the PDF",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 2,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://mediatech.aalto.fi/publications/graphics/OnlineSMC/preprint.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Animation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 58,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "https://mediatech.aalto.fi/publications/graphics/OnlineSMC/",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2014,
        "Misc. comment": "The algorithm only covers the sampling part of the paper, while the simulation part is covered via equations.",
        "Software Type": "",
        "Topic": "Animation",
        "Deep learning": "True",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": 2,
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Perttu",
                "family": "H\u00e4m\u00e4l\u00e4inen",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Sebastian",
                "family": "Eriksson",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Esa",
                "family": "Tanskanen",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Ville",
                "family": "Kyrki",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Jaakko",
                "family": "Lehtinen",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Online optical marker-based hand tracking with deep labels",
        "DOI": "10.1145/3197517.3201399",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 2,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://research.fb.com/wp-content/uploads/2018/06/Online-Optical-Marker-based-Hand-Tracking-with-Deep-Labels.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Private Companies",
        "ACM 1": "Machine learning",
        "ACM 2": "Modeling and simulation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 19,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "https://github.com/Beibei88/Mocap_SIG18_Data/",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2018,
        "Misc. comment": "The trained neural network is provided together with a yml file with the network architecture but no training or testing script and not trivial to set up.",
        "Software Type": "",
        "Topic": "Animation",
        "Deep learning": "True",
        "hasThumbnail": true,
        "Open access": true,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 1,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Shangchen",
                "family": "Han",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Facebook Reality Labs"
                    }
                ]
            },
            {
                "given": "Beibei",
                "family": "Liu",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Facebook Reality Labs"
                    }
                ]
            },
            {
                "given": "Robert",
                "family": "Wang",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Facebook Reality Labs"
                    }
                ]
            },
            {
                "given": "Yuting",
                "family": "Ye",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Facebook Reality Labs"
                    }
                ]
            },
            {
                "given": "Christopher D.",
                "family": "Twigg",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Facebook Reality Labs"
                    }
                ]
            },
            {
                "given": "Kenrick",
                "family": "Kin",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Facebook Reality Labs"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Optimal cone singularities for conformal flattening",
        "DOI": "10.1145/3197517.3201367",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No but pseudo-code in the PDF",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 2,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://www.cs.cmu.edu/~kmcrane/Projects/OptimalCones/paper.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Continuous optimization",
        "ACM 2": "Mesh geometry models",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 9,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "https://www.cs.cmu.edu/~kmcrane/Projects/OptimalCones/",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Geometry",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": 3,
        "Reviewer": 3,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Yousuf",
                "family": "Soliman",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Carnegie Mellon University"
                    }
                ]
            },
            {
                "given": "Dejan",
                "family": "Slep\u010dev",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Carnegie Mellon University"
                    }
                ]
            },
            {
                "given": "Keenan",
                "family": "Crane",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Carnegie Mellon University"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Optimizing for aesthetically pleasing qadrotor camera motion",
        "DOI": "10.1145/3197517.3201390",
        "PDF availability (beside dl.acm)": "On an open archive arXiv or similar open archive, On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "https://arxiv.org/abs/1906.11686",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://ait.ethz.ch/projects/2018/optimize-quad-cam-motion/downloads/gebhardt2018.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Robotic planning",
        "ACM 2": "Motion path planning",
        "ACM 3": "Computer graphics",
        "ACM 4": "Robotics",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 12,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "https://ait.ethz.ch/projects/2018/optimize-quad-cam-motion/",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Animation",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 1,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Christoph",
                "family": "Gebhardt",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "ETH Z\u00fcrich"
                    }
                ]
            },
            {
                "given": "Stefan",
                "family": "Stev\u0161i\u0107",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "ETH Z\u00fcrich"
                    }
                ]
            },
            {
                "given": "Otmar",
                "family": "Hilliges",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "ETH Z\u00fcrich"
                    }
                ]
            }
        ],
        "Altmetric score": 0.5,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=1&types=tttttttt",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=62788299"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Organizing Heterogeneous Scene Collections through Contextual Focal Points",
        "DOI": "10.1145/2601097.2601109",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No but pseudo-code in the PDF",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://www.sfu.ca/~cza68/papers/xu_sig14_focal.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Computational geometry",
        "ACM 2": "Shape modeling",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 40,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "http://kevinkaixu.net/projects/focal.html",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Geometry",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": 3,
        "Reviewer": 3,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Kai",
                "family": "Xu",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Rui",
                "family": "Ma",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Hao",
                "family": "Zhang",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Chenyang",
                "family": "Zhu",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Ariel",
                "family": "Shamir",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Daniel",
                "family": "Cohen-Or",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Hui",
                "family": "Huang",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "P2P-NET: bidirectional point displacement net for shape transform",
        "DOI": "10.1145/3197517.3201288",
        "PDF availability (beside dl.acm)": "On an open archive arXiv or similar open archive, On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on github, gitlab or other code platform",
        "Main languages": "Python",
        "How long did take for you to evaluate the code this paper (if any)?": 6,
        "Build info / instructions": "README, LICENSE or explicit license (e.g. in the readme / headers), AUTHORS or explicitly mentioned",
        "arXiv (page URL)": "https://arxiv.org/abs/1803.09263",
        "code URL": "https://github.com/kangxue/P2P-NET",
        "code URL  2": "",
        "PDF URL": "https://arxiv.org/pdf/1803.09263.pdf",
        "License type": "MIT",
        "Build mechanism": "Not applicable (python, Matlab..)",
        "Mandatory Software dependencies": "Open-source libraries, Closed source (e.g. commercial) software or libraries free for research purposes",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 5,
        "Feedbacks [easy to configure/build (5=easy)]": 2,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": 2,
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "Yes",
        "Available data (provided or url / ref)": "Training data",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "N/A",
        "Feedbacks [Interface user-friendly (5=easy)]": "N/A",
        "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions",
        "Authors": "Academia",
        "ACM 1": "Shape analysis",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Linux",
        "General comments": "Undefined symbols in ubuntu 19.10 (tensorflow 1.3, python 2.7) when compiling the pointnet++ operators.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 15,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "tensorflow/numpy/h5py",
        "Project URL": "",
        "Did I manage to perform a complete test (deps/build)?": "No due to technical issue",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Geometry",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "N/A",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 1,
        "Documentation score": 1,
        "Paper authors": [
            {
                "given": "Kangxue",
                "family": "Yin",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Simon Fraser University"
                    }
                ]
            },
            {
                "given": "Hui",
                "family": "Huang",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Shenzhen University"
                    }
                ]
            },
            {
                "given": "Daniel",
                "family": "Cohen-Or",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Shenzhen University and Tel Aviv University"
                    }
                ]
            },
            {
                "given": "Hao",
                "family": "Zhang",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Simon Fraser University"
                    }
                ]
            }
        ],
        "Altmetric score": 4.1,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=5&types=tttttttt",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=34926221"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Painting Style Transfer for Head Portraits using Convolutional Neural Networks",
        "DOI": "10.1145/2897824.2925968",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://people.mpi-inf.mpg.de/~elgharib/Publications/PDF/SIGGRAPH.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Non-photorealistic rendering",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 104,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "https://people.mpi-inf.mpg.de/~elgharib/projects/PaintingStyle/index.html",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2016,
        "Misc. comment": "A partial reimplementation by Somshubra Majumdar (not author), which slightly differs from the original paper, is available at https://gist.github.com/titu1994/26a8a0cd1c1bbf5f2e4c94813dea1e41",
        "Software Type": "",
        "Topic": "Image",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Ahmed",
                "family": "Selim",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Trinity College Dublin"
                    }
                ]
            },
            {
                "given": "Mohamed",
                "family": "Elgharib",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Qatar Computing Research Institute, HBKU"
                    }
                ]
            },
            {
                "given": "Linda",
                "family": "Doyle",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Trinity College Dublin"
                    }
                ]
            }
        ],
        "Altmetric score": 1.35,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=2&types=tttttttt",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=10211230"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Parametric directional coding for precomputed sound propagation",
        "DOI": "10.1145/3197517.3201339",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://www.microsoft.com/en-us/research/uploads/prod/2018/10/paramd.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Private Companies",
        "ACM 1": "Virtual reality",
        "ACM 2": "Sound and music computing",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 9,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Animation",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 1,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Nikunj",
                "family": "Raghuvanshi",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Microsoft Research"
                    }
                ]
            },
            {
                "given": "John",
                "family": "Snyder",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Microsoft Research"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Parametric Wave Field Coding for Precomputed Sound Propagation",
        "DOI": "10.1145/2601097.2601184",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://www.nikunjr.com/Projects/Triton/ParametricWaveField.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Private Companies",
        "ACM 1": "Virtual reality",
        "ACM 2": "Sound and music computing",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 43,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Animation",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Nikunj",
                "family": "Raghuvanshi",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "John",
                "family": "Snyder",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 21.55,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=22&types=assssssv",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=2641820"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "PATEX: Exploring Pattern Variations",
        "DOI": "10.1145/2897824.2925950",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on github, gitlab or other code platform",
        "Main languages": "C/C++, Matlab / Mathematica / ..",
        "How long did take for you to evaluate the code this paper (if any)?": 2,
        "Build info / instructions": "README",
        "arXiv (page URL)": "",
        "code URL": "http://bitbucket.org/paulguerrero/patex",
        "code URL  2": "",
        "PDF URL": "https://geometry.cs.ucl.ac.uk/projects/2016/pattern-variations/paper_docs/GuerreroEtAl_PATEX_SIGG16.pdf",
        "License type": "unspecified",
        "Build mechanism": "Not applicable (python, Matlab..)",
        "Mandatory Software dependencies": "Paywall Closed source software or libraries",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 5,
        "Feedbacks [easy to configure/build (5=easy)]": 5,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": 5,
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "N/A",
        "Feedbacks [Interface user-friendly (5=easy)]": "N/A",
        "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions, API documentation, Technical documentation (comments-doxygen...)",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Shape analysis",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Windows",
        "General comments": "Beware that the default .mat file when loading the program does not exist : in PatternWidget.m line 296, startfilename = '../data/userstudy/task1_pattern.mat'; refers to a missing file. It can be replaced by startfilename = '../data/medium_1.mat';  if the dataset was downloaded and placed in ../data as instructed.\nAlso, the dataset referenced in the Readme corresponds to http://geometry.cs.ucl.ac.uk/projects/2016/image-relationships/paper_docs/GuerreroEtAl_PATEX_SIGG16_data.zip which does not exist. The correct dataset link, from the project webpage, is https://geometry.cs.ucl.ac.uk/projects/2016/pattern-variations/paper_docs/GuerreroEtAl_PATEX_SIGG16_data.zip\n\nDeleting all compiled mex files automatically regenerates them. There is actually a compile error during mex('-largeArrayDims',includeoptions{:},additionaloptions{:},'pointLinesegDistance2D_mex.cpp',[utilpath,'/mexutils.cpp'],'geom.cpp','triTriIntersectionDevillers.cpp');\nHowever, for some reasons, it does not prevent the program from running well (perhaps this function is simply not used).",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 11,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "matlab",
        "Project URL": "https://geometry.cs.ucl.ac.uk/projects/2016/pattern-variations/",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2016,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Image",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": true,
        "Feedbacks [could reproduce results (5=highly confident)]": 5,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 2,
        "Paper authors": [
            {
                "given": "Paul",
                "family": "Guerrero",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "University College London"
                    }
                ]
            },
            {
                "given": "Gilbert",
                "family": "Bernstein",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Stanford University"
                    }
                ]
            },
            {
                "given": "Wilmot",
                "family": "Li",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Adobe Research"
                    }
                ]
            },
            {
                "given": "Niloy J.",
                "family": "Mitra",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University College London"
                    }
                ]
            }
        ],
        "Altmetric score": 0.25,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=1&types=tttttttt",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=10350980"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Perception-aware modeling and fabrication of digital drawing tools",
        "DOI": "10.1145/3197517.3201322",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on github, gitlab or other code platform",
        "Main languages": "Matlab / Mathematica / ..",
        "How long did take for you to evaluate the code this paper (if any)?": 2,
        "Build info / instructions": "None",
        "arXiv (page URL)": "",
        "code URL": "https://github.com/misop/Perception-Aware-Modeling-and-Fabrication-of-Digital-Drawing-Tools",
        "code URL  2": "",
        "PDF URL": "http://pdf.mmci.uni-saarland.de/projects/DigitalStylus/files/Piovarci2018.pdf",
        "License type": "unspecified",
        "Build mechanism": "Not applicable (python, Matlab..)",
        "Mandatory Software dependencies": "Closed source (e.g. commercial) software or libraries free for research purposes",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "N/A",
        "Feedbacks [easy to configure/build (5=easy)]": "N/A",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "N/A",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 4,
        "Feedbacks [Interface user-friendly (5=easy)]": 4,
        "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Haptic devices",
        "ACM 2": "Physical simulation",
        "ACM 3": "Graphics input devices",
        "ACM 4": "Perception",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": 2,
        "OS of the test": "Linux",
        "General comments": "I was able to generate partial curves from the input data. Curve fitting toolbox missing for generating all the curves. Input data provided since special hardware setup is needed to reproduce the data (hardware assembly detailed on the project webpage)",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 1,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "matlab/matlab curve fitting toolbox",
        "Project URL": "http://pdf.mmci.uni-saarland.de/projects/DigitalStylus/",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "Partial Code",
        "Topic": "Fabrication",
        "Deep learning": "True",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "N/A",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 1,
        "Documentation score": 1,
        "Paper authors": [
            {
                "given": "Michal",
                "family": "Piovar\u010di",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Saarland University and Universit\u00e0 della Svizzera italiana, Switzerland"
                    }
                ]
            },
            {
                "given": "David I. W.",
                "family": "Levin",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of Toronto, Canada"
                    }
                ]
            },
            {
                "given": "Danny M.",
                "family": "Kaufman",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "United States of America"
                    }
                ]
            },
            {
                "given": "Piotr",
                "family": "Didyk",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Saarland University and Universit\u00e0 della Svizzera italiana, Switzerland"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Perception-driven semi-structured boundary vectorization",
        "DOI": "10.1145/3197517.3201312",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on the authors website or project page (zip file, direct download...)",
        "Main languages": "Cannot answer",
        "How long did take for you to evaluate the code this paper (if any)?": 2,
        "Build info / instructions": "README",
        "arXiv (page URL)": "",
        "code URL": "http://www.cs.ubc.ca/labs/imager/tr/2018/PerceptionDrivenVectorization/executable.zip",
        "code URL  2": "",
        "PDF URL": "http://www.cs.ubc.ca/labs/imager/tr/2018/PerceptionDrivenVectorization/perception-driven-vectorization.pdf",
        "License type": "custom",
        "Build mechanism": "None",
        "Mandatory Software dependencies": "None",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "N/A",
        "Feedbacks [easy to configure/build (5=easy)]": "N/A",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "N/A",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "Yes",
        "Available data (provided or url / ref)": "Training data, Pre-trained models / Hardcoded data / lookup tables /...",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 1,
        "Feedbacks [Interface user-friendly (5=easy)]": 5,
        "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Image manipulation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Windows",
        "General comments": "The binary runs nicely. I could not find the examples shown in the paper for the multicolored examples, but some images are quite similar (e.g., a different penguin, a different red car, a different crown...) and produce reasonable results.\nNote that the required numpy is version 1.16.1 and it doesn't work with 1.14.5 -- the python code is just the GUI.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 3,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "http://www.cs.ubc.ca/labs/imager/tr/2018/PerceptionDrivenVectorization/",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "Binary",
        "Topic": "Image",
        "Deep learning": "True",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 5,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 1,
        "Paper authors": [
            {
                "given": "Shayan",
                "family": "Hoshyari",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "University of British Columbia"
                    }
                ]
            },
            {
                "given": "Edoardo Alberto",
                "family": "Dominici",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of British Columbia"
                    }
                ]
            },
            {
                "given": "Alla",
                "family": "Sheffer",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of British Columbia"
                    }
                ]
            },
            {
                "given": "Nathan",
                "family": "Carr",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Adobe"
                    }
                ]
            },
            {
                "given": "Zhaowen",
                "family": "Wang",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Adobe"
                    }
                ]
            },
            {
                "given": "Duygu",
                "family": "Ceylan",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Adobe"
                    }
                ]
            },
            {
                "given": "I-Chao",
                "family": "Shen",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "National Taiwan University"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Perceptual Effect of Shoulder Motions on Crowd Animations",
        "DOI": "10.1145/2897824.2925931",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution, Other (web, research gate, semantic scholar,...)",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://people.rennes.inria.fr/Richard.Kulpa/papers/2016_Hoyet_TOG.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Motion capture",
        "ACM 2": "Perception",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 14,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "https://people.rennes.inria.fr/Ludovic.Hoyet/shoulder_motions.shtml",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2016,
        "Misc. comment": "Neither code nor experimental data were released.",
        "Software Type": "",
        "Topic": "Animation",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Ludovic",
                "family": "Hoyet",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Inria"
                    }
                ]
            },
            {
                "given": "Anne-Helene",
                "family": "Olivier",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Univ. Rennes 2"
                    }
                ]
            },
            {
                "given": "Richard",
                "family": "Kulpa",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Univ. Rennes 2"
                    }
                ]
            },
            {
                "given": "Julien",
                "family": "Pettr\u00e9",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Inria"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Perspective-aware Manipulation of Portrait Photos",
        "DOI": "10.1145/2897824.2925933",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on the authors website or project page (zip file, direct download...)",
        "Main languages": "Cannot answer",
        "How long did take for you to evaluate the code this paper (if any)?": 2,
        "Build info / instructions": "None",
        "arXiv (page URL)": "",
        "code URL": "https://faces.cs.princeton.edu/#",
        "code URL  2": "",
        "PDF URL": "https://www.ohadf.com/papers/FriedShechtmanGoldmanFinkelstein_SIGGRAPH2016.pdf",
        "License type": "unspecified",
        "Build mechanism": "None",
        "Mandatory Software dependencies": "None",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "N/A",
        "Feedbacks [easy to configure/build (5=easy)]": "N/A",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "N/A",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "N/A",
        "Feedbacks [Interface user-friendly (5=easy)]": 5,
        "Documentation": "None",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Computational photography",
        "ACM 2": "Image manipulation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Linux",
        "General comments": "Web app only. Can produce all results by uploading new pictures or testing pre-computed ones.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 24,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "http://faces.cs.princeton.edu/",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2016,
        "Misc. comment": "",
        "Software Type": "Binary",
        "Topic": "Image",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 5,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 1,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Ohad",
                "family": "Fried",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Princeton University"
                    }
                ]
            },
            {
                "given": "Eli",
                "family": "Shechtman",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Adobe Research"
                    }
                ]
            },
            {
                "given": "Dan B.",
                "family": "Goldman",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Adobe Research"
                    }
                ]
            },
            {
                "given": "Adam",
                "family": "Finkelstein",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Princeton University"
                    }
                ]
            }
        ],
        "Altmetric score": 97,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=97&types=mmmmmmmm",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=10140283"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Physical Simulation of Environmentally Induced Thin Shell Deformation",
        "DOI": "10.1145/3197517.3201395",
        "PDF availability (beside dl.acm)": "On the author(s) repository (dropbox, github, drive, iCloud)",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on github, gitlab or other code platform",
        "Main languages": "C/C++",
        "How long did take for you to evaluate the code this paper (if any)?": 4,
        "Build info / instructions": "README, LICENSE or explicit license (e.g. in the readme / headers)",
        "arXiv (page URL)": "",
        "code URL": "https://github.com/evouga/libshell",
        "code URL  2": "",
        "PDF URL": "https://drive.google.com/file/d/1UKaF4ISw5JSP3SuCrtTzf2litcRPmg9R/view",
        "License type": "Mozilla Public License, version 2.0",
        "Build mechanism": "Makefile, CMakeLists",
        "Mandatory Software dependencies": "Open-source libraries",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 5,
        "Feedbacks [easy to configure/build (5=easy)]": 5,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "N/A",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 1,
        "Feedbacks [Interface user-friendly (5=easy)]": 5,
        "Documentation": "build instructions in readme",
        "Authors": "Academia",
        "ACM 1": "Physical simulation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Linux",
        "General comments": "The github states that the method of the paper is implemented as part of libshell. An example program in libshell works fine, but no indication is given as to how to replicate the results for moisture/heat. The results do not look like the ones from the paper, but it's probably because it was not doing a moisture/heat simulation.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 2,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "eigen/libigl",
        "Project URL": "https://users.oden.utexas.edu/~hsiaoyu/project/moistsim/moistsim.html",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Animation",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 1,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 1,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Hsiao-Yu",
                "family": "Chen",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "University of Texas at Austin"
                    }
                ]
            },
            {
                "given": "Arnav",
                "family": "Sastry",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of Texas at Austin"
                    }
                ]
            },
            {
                "given": "Wim M.",
                "family": "van Rees",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Massachusetts Institute of Technology"
                    }
                ]
            },
            {
                "given": "Etienne",
                "family": "Vouga",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of Texas at Austin"
                    }
                ]
            }
        ],
        "Altmetric score": 0.75,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=1&types=ttttffff",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=46143851"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Physics-driven pattern adjustment for direct 3D garment editing",
        "DOI": "10.1145/2897824.2925896",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://www.cs.ubc.ca/labs/imager/tr/2016/PhysicsDrivenPatternAdjustment/hybrids.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Mesh models",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 2,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "http://www.cs.ubc.ca/labs/imager/tr/2016/PhysicsDrivenPatternAdjustment/",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2016,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Fabrication",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Aric",
                "family": "Bartle",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Stanford University"
                    }
                ]
            },
            {
                "given": "Alla",
                "family": "Sheffer",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of British Columbia"
                    }
                ]
            },
            {
                "given": "Vladimir G.",
                "family": "Kim",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Adobe Research"
                    }
                ]
            },
            {
                "given": "Danny M.",
                "family": "Kaufman",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Adobe Research"
                    }
                ]
            },
            {
                "given": "Nicholas",
                "family": "Vining",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of British Columbia"
                    }
                ]
            },
            {
                "given": "Floraine",
                "family": "Berthouzoz",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Adobe Research"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Physics-Inspired Adaptive Fracture Refinement",
        "DOI": "10.1145/2601097.2601115",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://web.cse.ohio-state.edu/~wang.3602/Chen-2014-PIA/Chen-2014-PIA.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Animation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 24,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Animation",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 3,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Zhili",
                "family": "Chen",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Miaojun",
                "family": "Yao",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Renguo",
                "family": "Feng",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Huamin",
                "family": "Wang",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "PiGraphs: Learning Interaction Snapshots from Observations",
        "DOI": "10.1145/2897824.2925867",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution, On the author(s) repository (dropbox, github, drive, iCloud)",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on the authors website or project page (zip file, direct download...), on github, gitlab or other code platform",
        "Main languages": "C/C++, Other",
        "How long did take for you to evaluate the code this paper (if any)?": 10,
        "Build info / instructions": "README",
        "arXiv (page URL)": "",
        "code URL": "https://github.com/msavva/pigraphs/",
        "code URL  2": "http://aspis.cmpt.sfu.ca/falas_datasets/etherion_backup/data/pigraphs/pigraphs.vhd.bz2",
        "PDF URL": "https://graphics.stanford.edu/projects/pigraphs/pigraphs.pdf",
        "License type": "MIT",
        "Build mechanism": "IDE Project (VS,..)",
        "Mandatory Software dependencies": "Closed source (e.g. commercial) software or libraries free for research purposes",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 1,
        "Feedbacks [easy to configure/build (5=easy)]": 2,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": 1,
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "Yes",
        "Available data (provided or url / ref)": "Training data",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 3,
        "Feedbacks [Interface user-friendly (5=easy)]": 3,
        "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions, API documentation, Technical documentation (comments-doxygen...)",
        "Authors": "Academia",
        "ACM 1": "Spatial and physical reasoning",
        "ACM 2": "Computer graphics",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Windows",
        "General comments": "Using the Virtual Machine provided by the authors, everything ultimately worked, and I managed to at least see the interactions. The interface is not documented at all and quite complex though, so I am not sure what I was doing - some buttons make the program crash. Also, beware the licence for Visual Studio in the VM has expired, and since this is not a free Visual Studio version, you need a licence to be able to recompile from the VM (or reinstall free versions of Visual Studio within the VM).\n\nBut getting there was a challenge.\n\nFirst, I tried to compile the code directly on my machine (on Windows, with VS2017 and Java JDK 13.0.1 instead of the old proposed JDK 8). I had to perform an number of steps and fixed a number of issues :\n\n\n- you need to set the JAVA_HOME environment variable to your java install, e.g., C:\\Program Files\\Java\\jdk-13.0.1\\\n- you need to add boost to the VS project includes (I tried with boost 1.70.0)\n- you need to download mLib and mLibExternal from the provided links and extracted them in the root of pigraphs\n- you need to download the 35GB of data.\n\n- in JACE/Integer.cpp line 399, replace  \nsetJavaJniObject(object); \nby  \nsetJavaJniObject(object.getJavaJniClass().getClass());\nSame thing for Exception.cpp (line 87), Throwable (line 143), IOException (l.90), Collection (l.144), Number (l.100), List (l.200), AbstractList (l.135), AbstractCollection (l.138), ArrayList (l.230), String (l.591 and 612) in their respective files.\n\n- in String.cpp, line 619 replace \njstring thisString = static_cast<jstring>(static_cast<jobject>(*this));\nby \njstring thisString = static_cast<jstring>(static_cast<jobject>(String(*this)));\n\n- in libsg/core/synth/InteractionScorer.h, add : #include \"../ModelInstance.h\"  \n\n- in mlibExternal/include/cgal/segment_3.h, lines 101, 104, 107, 110, and 114 replace\n  typename cpp11::result_of<typename R::Construct_min_vertex_3(Segment_3)>::type\n  by\n  typename cpp11::result_of<typename R_::Construct_min_vertex_3(Segment_3)>::type\n  \n- in mlibExternal/include/cgal/segment_2.h, lines 104, 107, 110, 113, and 116, replace  \n  typename cpp11::result_of<typename R::Construct_min_vertex_2( Segment_2)>::type\n  by\n  typename cpp11::result_of<typename R_::Construct_min_vertex_2( Segment_2)>::type\n  \n- in libsg/vis/vislog.cpp, line 47, replace \n  m_records.push_back({now, desc, images});\n  by \n  m_records.push_back({uint64_t(now), desc, images});\n  \n- in libsg/core/LabeledGrid.cpp, line 99, replace\n    voxels[i] = { coords.x, coords.y, coords.z, label };\n\tby\n\t    voxels[i] = { int16_t(coords.x), int16_t(coords.y), int16_t(coords.z), int16_t(label) };\n\n- in mLibExternal/include/Eigen/src/core/util/Macros.h , line 309 replace \n#if defined(_MSC_VER) && (!defined(__INTEL_COMPILER))\nby\n#if defined(_MSC_VER)  && (_MSC_VER < 1900) && (!defined(__INTEL_COMPILER))\n\n* There is a number of issues due to move constructors overriding copy constructors (the copy constructor thus appears deleted), and similarly for operator-, which can be solved like :\n- in JACE/JArray.h, line 445, add a const operator- between iterators (for std::copy to work):\n\t\tIterator operator-(const Iterator &i) const {\n#ifdef JACE_CHECK_ARRAYS\n\t\t\tif (current - i.current < 0)\n\t\t\t\tthrow ::jace::JNIException(\"[JArray::Iterator::operator-] can not rewind iterator out of bounds.\");\n#endif\n\n\t\t\tIterator it(*this);\n\t\t\tit.current -= i.current;\n\t\t\treturn it;\n\t\t}\n\n- in mLib/include/core-mesh/material.h line 19, add:\nMaterial(const Material& m) = default;\nMaterial& operator=(const Material& m) = default;\n\n- in mlib/include/core-mesh/meshdata.h, line 427, add the following functions:\n\tMeshData(const MeshData& d) = default;\n\tMeshData& operator=(const MeshData& d) = default;\n\n* There is a number of issues due to vectors of const objects, which is forbidden since C++11. This can be fixed tediously and with some ugly const_cast:\n\n- in libsg/segmentation/Segmentator.cpp, line 184, replace\nvec<SegIndices> Segmentator::segment(const vec<const ml::TriMeshf>& meshes) {\nby\nvec<SegIndices> Segmentator::segment(const vec<ml::TriMeshf>& meshes) {\nand similarly in Segmentator.h line 58.\n\n- in libsg/core/Skeleton.h, line 466, replace \nstd::shared_ptr<const Skeleton> m_skel = nullptr;\nby\nstd::shared_ptr<Skeleton> m_skel = nullptr;\n\nand line 404, replace \nexplicit TransformedSkeleton(std::shared_ptr<const Skeleton> pSkel,\nby\nexplicit TransformedSkeleton(std::shared_ptr<Skeleton> pSkel,\n\nand line 408, replace \nTransformedSkeleton(const Skeleton& _skel, const ml::mat4f& _transform)\nby\nTransformedSkeleton(Skeleton& _skel, const ml::mat4f& _transform)\n\nand line 409, replace:\n    : m_skel(util::ptr_to_shared<const Skeleton,const Skeleton>(&_skel))\nby\n    : m_skel(util::ptr_to_shared<Skeleton,Skeleton>(&_skel))\n\t\n- in libsg/core/learningUtil.cpp, line 561, replace\nconst TransformedSkeleton tSkel(skel, ml::mat4f::identity());\nby\nconst TransformedSkeleton tSkel(const_cast<Skeleton&>(skel), ml::mat4f::identity());\n\n- in libsg/interaction/InteractionSet.cpp, line 168, replace \nTransformedSkeleton normalizedSkeleton(s, xform);\nby\nTransformedSkeleton normalizedSkeleton(const_cast<Skeleton&>(s), xform);\n\n- in libsg/core/learningUtil.cpp, line 115, replace\ntSkels.push_back(TransformedSkeleton(*skelInter.first, ml::mat4f::identity()));\nby\ntSkels.push_back(TransformedSkeleton(const_cast<Skeleton&>(*skelInter.first), ml::mat4f::identity()));\n\n- in libsg/core/learningUtil.cpp, line 135, replace\n      return std::make_pair(TransformedSkeleton(*x.first.getOriginalSkeleton(), perturbation), Dataset<TransformedSkeleton>::Label_NEG);\nby\n      return std::make_pair(TransformedSkeleton(const_cast<Skeleton&>(*x.first.getOriginalSkeleton()), perturbation), Dataset<TransformedSkeleton>::Label_NEG);\n\t  \n\t \n- in libsg/core/learningUtil.cpp, line 158, replace\n      tSkels.push_back(TransformedSkeleton(*skelInter.first, ml::mat4f::identity()));\n by\n\t  tSkels.push_back(TransformedSkeleton(const_cast<Skeleton&>(*skelInter.first), ml::mat4f::identity()));\n  \n- in libsg/interaction/InteractionSet.cpp, line 93, replace\n        sampledSkeletons.emplace_back(s, xform);\nby\n        sampledSkeletons.emplace_back(const_cast<Skeleton&>(s), xform);\t\t\n\t\t\n- in core/synth/SkeletonPoser.cpp line 452, replace:\n std::shared_ptr<const Skeleton> pSkel = std::make_shared<const Skeleton>(p.first);\nby\n std::shared_ptr<Skeleton> pSkel = std::make_shared<Skeleton>(p.first);\n  \n- in libsg/core/Database.h, line 24, replace\ntypedef map<const Skeleton*, vec<const InteractionRecord>> SkeletonToInteractionsMap;\nby\ntypedef map<const Skeleton*, vec<InteractionRecord>> SkeletonToInteractionsMap;\n\n- in libsg/interaction/InteractionMap.h, line 56, replace:\nconst Skeleton modelSkel = core::TransformedSkeleton(skel, worldToModelML).getSkeleton();\nby\nconst Skeleton modelSkel = core::TransformedSkeleton(const_cast<Skeleton&>(skel), worldToModelML).getSkeleton();\n\n* You need to install DirectX 10 with the proposed link. However, first you need to uninstall Visual C++ 2010 x86 and x64 redistribuables from Windows otherwise the install fails.\n\n* At this point, the C++ code compile. But I got stuck to in the instructions for the Java part, as the explanations are very limited, and require knowledge of ANT, JavaApps, SceneGrok, Jace, WekaUtil, IntelliJ IDEA, and Maven. I know none of them, and the informations provided are not sufficient to build the project. This is apparently a known issue ( https://github.com/msavva/pigraphs/issues/5 ).\n\n* I falled back to installing the VM. The VM is a 70GB bz2 file, and is stored on a moderately fast server (it took me about 34 hours to download the VM with a fast connection ; this is about 600KB/s). I thought the file was corrupted as 7zip could not extract it, so I downloaded the VM 3 times in total, with 2 different computers and internet connections. It happens that 7zip just cannot extract such big files, but bzip2 can.\n\nFinally, to run the VirtualBox, you need to deactivate Hyper-V and the Ubuntu for Windows feature, otherwise VirtualBox produces an error.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 37,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "DirectX / Java JNI / ANN / AntTweakBar / Boost / CGAL / flann / FreeImage / FW1FontWrapper / GMP / MPFR / OpenCV / Zlib / szip",
        "Project URL": "https://graphics.stanford.edu/projects/pigraphs/",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2016,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Geometry",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 5,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 2,
        "Paper authors": [
            {
                "given": "Manolis",
                "family": "Savva",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Stanford University"
                    }
                ]
            },
            {
                "given": "Angel X.",
                "family": "Chang",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Stanford University"
                    }
                ]
            },
            {
                "given": "Pat",
                "family": "Hanrahan",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Stanford University"
                    }
                ]
            },
            {
                "given": "Matthew",
                "family": "Fisher",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Stanford University"
                    }
                ]
            },
            {
                "given": "Matthias",
                "family": "Nie\u00dfner",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Stanford University"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Pinlight Displays: Wide Field of View Augmented Reality Eyeglasses using Defocused Point Light Sources",
        "DOI": "10.1145/2601097.2601141",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://www.cs.unc.edu/%7Emaimone/media/pinlights_siggraph_2014.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Displays and imagers",
        "ACM 2": "Mixed / augmented reality",
        "ACM 3": "Virtual reality",
        "ACM 4": "Graphics systems and interfaces",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 128,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "http://pinlights.info/",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2014,
        "Misc. comment": "ACM keywords 2,3,4 are grey",
        "Software Type": "",
        "Topic": "Virtual Reality",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 4,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Andrew",
                "family": "Maimone",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Douglas",
                "family": "Lanman",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Kishore",
                "family": "Rathinavel",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Kurtis",
                "family": "Keller",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "David",
                "family": "Luebke",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Henry",
                "family": "Fuchs",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 16,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=16&types=mmaaaaat",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=2743966"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Pixie dust: graphics generated by levitated and animated objects in computational acoustic-potential field",
        "DOI": "10.1145/2601097.2601118",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://hoshistar81.jp/pdf/2014ToG.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Human-centered computing",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 114,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Virtual Reality",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 1,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Yoichi",
                "family": "Ochiai",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Takayuki",
                "family": "Hoshi",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Jun",
                "family": "Rekimoto",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 6.5,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=7&types=aaaaattt",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=2542032"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Point convolutional neural networks by extension operators",
        "DOI": "10.1145/3197517.3201301",
        "PDF availability (beside dl.acm)": "On an open archive arXiv or similar open archive",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on github, gitlab or other code platform",
        "Main languages": "Python",
        "How long did take for you to evaluate the code this paper (if any)?": 4,
        "Build info / instructions": "README",
        "arXiv (page URL)": "https://arxiv.org/abs/1803.10091",
        "code URL": "https://github.com/matanatz/pcnn",
        "code URL  2": "",
        "PDF URL": "https://arxiv.org/pdf/1803.10091.pdf",
        "License type": "unspecified",
        "Build mechanism": "Not applicable (python, Matlab..)",
        "Mandatory Software dependencies": "Open-source libraries",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 4,
        "Feedbacks [easy to configure/build (5=easy)]": "N/A",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "N/A",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "Yes",
        "Available data (provided or url / ref)": "Training data",
        "License for the data (if any)": "ModelNet40: All CAD models are downloaded from the Internet and the original authors hold the copyright of the CAD models. The label of the data was obtained by us via Amazon Mechanical Turk service and it is provided freely. This dataset is provided for the convenience of academic research only.",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 3,
        "Feedbacks [Interface user-friendly (5=easy)]": 2,
        "Documentation": "None",
        "Authors": "Academia",
        "ACM 1": "Neural networks",
        "ACM 2": "Shape analysis",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Linux",
        "General comments": "I needed to install tensorflow and pyhocon manually. No trained models are given and I wasn't able to generate the models from the (provided) training data (timeout, 250 epoch required and the train.py refused to consider my GPU and thus did the training on CPU). \n\nAfter a single epoch, the evaluation script fails (version issue of the provider package?): \n\nAttributeError: module 'provider' has no attribute 'ClassificationProvider'",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 67,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "tensorflow / pyhocon / h5py",
        "Project URL": "",
        "Did I manage to perform a complete test (deps/build)?": "No due to technical issue",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Geometry",
        "Deep learning": "True",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "N/A",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 3,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Matan",
                "family": "Atzmon",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Weizmann Institute of Science"
                    }
                ]
            },
            {
                "given": "Haggai",
                "family": "Maron",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Weizmann Institute of Science"
                    }
                ]
            },
            {
                "given": "Yaron",
                "family": "Lipman",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Weizmann Institute of Science"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Point morphology",
        "DOI": "10.1145/2601097.2601130",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No but pseudo-code in the PDF",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://perso.telecom-paristech.fr/boubek/papers/PointMorphology/PointMorphology.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 36,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "https://perso.telecom-paristech.fr/boubek/papers/PointMorphology/",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2014,
        "Misc. comment": "Index Terms are not available\" in dl.acm",
        "Software Type": "",
        "Topic": "Geometry",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": 2,
        "Reviewer": 1,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "St\u00e9phane",
                "family": "Calderon",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Tamy",
                "family": "Boubekeur",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Point Registration via Efficient Convex Relaxation",
        "DOI": "10.1145/2897824.2925913",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution, On the author(s) repository (dropbox, github, drive, iCloud)",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on the authors website or project page (zip file, direct download...)",
        "Main languages": "Matlab / Mathematica / ..",
        "How long did take for you to evaluate the code this paper (if any)?": 6,
        "Build info / instructions": "README",
        "arXiv (page URL)": "",
        "code URL": "http://www.wisdom.weizmann.ac.il/~itayke/assets/pm-code.zip",
        "code URL  2": "http://www.wisdom.weizmann.ac.il/~haggaim/projects/point_registration/code.zip",
        "PDF URL": "https://shaharkov.github.io/projects/ProcrustesMatchingSDP_lowres.pdf",
        "License type": "unspecified",
        "Build mechanism": "Not applicable (python, Matlab..)",
        "Mandatory Software dependencies": "Paywall Closed source software or libraries",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 5,
        "Feedbacks [easy to configure/build (5=easy)]": 5,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": 3,
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 5,
        "Feedbacks [Interface user-friendly (5=easy)]": 5,
        "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions, API documentation, Technical documentation (comments-doxygen...)",
        "Authors": "Academia",
        "ACM 1": "Shape analysis",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Windows",
        "General comments": "A few steps to make the program run on Windows+Matlab R2018a:\n- in all test files, replace\naddpath(genpath('~/mosek'))\naddpath(genpath('~/yalmip'))\nby the actual paths, e.g., \naddpath(genpath('C:\\Program Files\\Mosek\\9.1\\toolbox\\R2015a'))\naddpath(genpath('C:\\libs\\YALMIP-master'))\n\nand similarly for the toolbox_graph (downloadable at https://fr.mathworks.com/matlabcentral/fileexchange/5355-toolbox-graph ) or the FAUST data (e.g., addpath('C:\\ICCV_2015_source_code\\training\\watertight_5000') )\n\n- in interleaving.m, line 82, replace\n X_proj = reshape( intlinprog(fObj,intcon,[],[],A_ds,b_ds,lb,ub,options ), n, n );\n by\n  X_proj = reshape( intlinprog(fObj,intcon,[],[],A_ds,b_ds,lb,ub,struct(options) ), n, n );\n\n - in interleaving.m, line 97, replace \n X_proj = reshape( intlinprog(fObj,intcon,[],[],A_ds,b_ds,lb,ub,options ), n, n );\n by\n X_proj = reshape( intlinprog(fObj,intcon,[],[],A_ds,b_ds,lb,ub,struct(options) ), n, n );\n\nWhile this produces a warning, this prevents an error in Mosek's intlinprog at line 135\n  options          = mskoptimset(defaultopt,options)\n  \n- Make sure you have about 10GB of free RAM, otherwise Mosek crashes.\n- If you installed Mosek after having installed Yalmip and already run the code unsuccessfully, make sure to \"clear CACHED_SOLVERS\" otherwise Mosek won't be found by Yalmip as the available solvers are cached.\n \nThe Faust dataset is at http://faust.is.tue.mpg.de/ (though I don't think the original dataset is needed) and the iccv code has moved from web.stanford.edu/~cqf/convex to   https://cqf.io/convex/\n\nThe different tests for 'synthetic', 'faust' and 'scape' run smoothly and produce the expected matchings. I did not test the last script, testPMSDP_scapeRawScans, since it requires manually preprocessing the SCAPE dataset with the ICCV code.\n\nAnother run on Linux produced similar results.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 40,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "matlab",
        "Project URL": "",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2016,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Geometry",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 5,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 2,
        "Paper authors": [
            {
                "given": "Haggai",
                "family": "Maron",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Weizmann Institute of Science"
                    }
                ]
            },
            {
                "given": "Nadav",
                "family": "Dym",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Weizmann Institute of Science"
                    }
                ]
            },
            {
                "given": "Itay",
                "family": "Kezurer",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Weizmann Institute of Science"
                    }
                ]
            },
            {
                "given": "Shahar",
                "family": "Kovalsky",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Weizmann Institute of Science"
                    }
                ]
            },
            {
                "given": "Yaron",
                "family": "Lipman",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Weizmann Institute of Science"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Polyhedral Voronoi diagrams for additive manufacturing",
        "DOI": "10.1145/3197517.3201343",
        "PDF availability (beside dl.acm)": "On an open archive arXiv or similar open archive",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "https://hal.inria.fr/hal-01697103",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://hal.inria.fr/hal-01697103/file/paper.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Shape modeling",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 12,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Fabrication",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Jon\u00e0s",
                "family": "Mart\u00ednez",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Universit\u00e9 de Lorraine, France"
                    }
                ]
            },
            {
                "given": "Samuel",
                "family": "Hornus",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Universit\u00e9 de Lorraine, France"
                    }
                ]
            },
            {
                "given": "Haichuan",
                "family": "Song",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Universit\u00e9 de Lorraine, France"
                    }
                ]
            },
            {
                "given": "Sylvain",
                "family": "Lefebvre",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Universit\u00e9 de Lorraine, France"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Pose-Space Subspace Dynamics",
        "DOI": "10.1145/2897824.2925916",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://run.usc.edu/multiModal/XuBarbic-SIGGRAPH2016.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Physical simulation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 37,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "http://run.usc.edu/multiModal/",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2016,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Animation",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Hongyi",
                "family": "Xu",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "University of Southern California"
                    }
                ]
            },
            {
                "given": "Jernej",
                "family": "Barbi\u010d",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of Southern California"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Position-Normal Distributions for Efficient Rendering of Specular Microstructure",
        "DOI": "10.1145/2897824.2925915",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://cseweb.ucsd.edu/~ravir/glints.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Reflectance modeling",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 31,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2016,
        "Misc. comment": "In practice, a renderman reimplementation by Mariano Merchante is available here: https://github.com/mmerchante/glitterman",
        "Software Type": "",
        "Topic": "Rendering",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": true,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Ling-Qi",
                "family": "Yan",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "University of California, Berkeley"
                    }
                ]
            },
            {
                "given": "Milo\u0161",
                "family": "Ha\u0161an",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Autodesk"
                    }
                ]
            },
            {
                "given": "Steve",
                "family": "Marschner",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Cornell University"
                    }
                ]
            },
            {
                "given": "Ravi",
                "family": "Ramamoorthi",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of California, San Diego"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Practical Multispectral Lighting Reproduction",
        "DOI": "10.1145/2897824.2925934",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://gl.ict.usc.edu/Research/MultiSpectral/SIGGRAPH2016_Multispectral.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Computational photography",
        "ACM 2": "Image manipulation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 17,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "http://gl.ict.usc.edu/Research/MultiSpectral/",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2016,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Rendering",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Chloe",
                "family": "LeGendre",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "USC Institute for Creative Technologies"
                    }
                ]
            },
            {
                "given": "Xueming",
                "family": "Yu",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "USC Institute for Creative Technologies"
                    }
                ]
            },
            {
                "given": "Dai",
                "family": "Liu",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "USC Institute for Creative Technologies"
                    }
                ]
            },
            {
                "given": "Jay",
                "family": "Busch",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "USC Institute for Creative Technologies"
                    }
                ]
            },
            {
                "given": "Andrew",
                "family": "Jones",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "USC Institute for Creative Technologies"
                    }
                ]
            },
            {
                "given": "Sumanta",
                "family": "Pattanaik",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of Central Florida"
                    }
                ]
            },
            {
                "given": "Paul",
                "family": "Debevec",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "USC Institute for Creative Technologies"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Predictive and generative neural networks for object functionality",
        "DOI": "10.1145/3197517.3201287",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on github, gitlab or other code platform",
        "Main languages": "Python",
        "How long did take for you to evaluate the code this paper (if any)?": 5,
        "Build info / instructions": "README, LICENSE or explicit license (e.g. in the readme / headers)",
        "arXiv (page URL)": "",
        "code URL": "https://github.com/Salingo/PGDNN",
        "code URL  2": "",
        "PDF URL": "http://vcc.tech/file/upload_file//image/research/att201805111718/ICON4.pdf",
        "License type": "MIT",
        "Build mechanism": "Not applicable (python, Matlab..)",
        "Mandatory Software dependencies": "Open-source libraries",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 5,
        "Feedbacks [easy to configure/build (5=easy)]": 5,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": 4,
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "Yes",
        "Available data (provided or url / ref)": "Training data",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 4,
        "Feedbacks [Interface user-friendly (5=easy)]": "N/A",
        "Documentation": "None",
        "Authors": "Academia",
        "ACM 1": "Shape analysis",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Linux",
        "General comments": "Missing dependencies : numpy and scipy but easily installable. The code does not provide the pretrained models and requires to train three different networks (15000 epochs (2-3min per 10 epochs on the test machine)). I was not able to check the results and thus evaluate if the results match with the paper ones.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 5,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "tensorflow / numpy / scipy",
        "Project URL": "https://vcc.tech/research/2018/ICON4",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Geometry",
        "Deep learning": "True",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "N/A",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 3,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Ruizhen",
                "family": "Hu",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Shenzhen University"
                    }
                ]
            },
            {
                "given": "Zihao",
                "family": "Yan",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Shenzhen University"
                    }
                ]
            },
            {
                "given": "Jingwen",
                "family": "Zhang",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Shenzhen University"
                    }
                ]
            },
            {
                "given": "Oliver",
                "family": "Van Kaick",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Carleton University"
                    }
                ]
            },
            {
                "given": "Ariel",
                "family": "Shamir",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "The Interdisciplinary Center"
                    }
                ]
            },
            {
                "given": "Hao",
                "family": "Zhang",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Simon Fraser University"
                    }
                ]
            },
            {
                "given": "Hui",
                "family": "Huang",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Shenzhen University"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Preserving Geometry and Topology for Fluid Flows with Thin Obstacles and Narrow Gaps",
        "DOI": "10.1145/2897824.2925919",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No but pseudo-code in the PDF",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://www.inf.ufrgs.br/~oliveira/pubs_files/CutCell/Azevedo_Batty_Oliveira_SIGG_2016.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Physical simulation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 11,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "http://www.inf.ufrgs.br/~oliveira/pubs_files/CutCell/CutCell_page.html#Downloads",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2016,
        "Misc. comment": "The algorithm is a high level description of the process with respect to how sections are organized in the paper.",
        "Software Type": "",
        "Topic": "Animation",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": 1,
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Vinicius C.",
                "family": "Azevedo",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Instituto de Inform\u00e1tica - UFRGS"
                    }
                ]
            },
            {
                "given": "Christopher",
                "family": "Batty",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of Waterloo"
                    }
                ]
            },
            {
                "given": "Manuel M.",
                "family": "Oliveira",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Instituto de Inform\u00e1tica - UFRGS"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Printing Arbitrary Meshes with a 5DOF Wireframe Printer",
        "DOI": "10.1145/2897824.2925966",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution, Other (web, research gate, semantic scholar,...)",
        "Is the code or software publicly available ?": "No but pseudo-code in the PDF",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://www.cs.cornell.edu/projects/wireprint/download/arbitrary.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Mesh models",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 43,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "http://www.cs.cornell.edu/projects/wireprint/",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2016,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Fabrication",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": true,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": 3,
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Rundong",
                "family": "Wu",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Cornell University"
                    }
                ]
            },
            {
                "given": "Huaishu",
                "family": "Peng",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Cornell University"
                    }
                ]
            },
            {
                "given": "Fran\u00e7ois",
                "family": "Guimbreti\u00e8re",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Cornell University"
                    }
                ]
            },
            {
                "given": "Steve",
                "family": "Marschner",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Cornell University"
                    }
                ]
            }
        ],
        "Altmetric score": 3,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=3&types=aaaaaaaa",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=49739017"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Proactive 3D Scanning of Inaccessible Parts",
        "DOI": "10.1145/2601097.2601191",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://www.cs.bgu.ac.il/~asharf/Dscan.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Computational geometry",
        "ACM 2": "Shape modeling",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 22,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "https://vcc.tech/research/2014/Proactive",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Geometry",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Feilong",
                "family": "Yan",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Andrei",
                "family": "Sharf",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Wenzhen",
                "family": "Lin",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Hui",
                "family": "Huang",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Baoquan",
                "family": "Chen",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Procedural Voronoi Foams for Additive Manufacturing",
        "DOI": "10.1145/2897824.2925922",
        "PDF availability (beside dl.acm)": "On an open archive arXiv or similar open archive, On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on the authors website or project page (zip file, direct download...)",
        "Main languages": "Python",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "None",
        "arXiv (page URL)": "",
        "code URL": "https://www.google.com/url?q=https%3A%2F%2Fwww.dropbox.com%2Fs%2F7d7yy73sv4j8afd%2FMDL16_supplemental.zip&sa=D&sntz=1&usg=AFQjCNHuAO1nrjCovuLJryKh9kIANIWSqg",
        "code URL  2": "",
        "PDF URL": "https://hal.archives-ouvertes.fr/hal-01393741/file/MDL16.pdf",
        "License type": "unspecified",
        "Build mechanism": "Other script",
        "Mandatory Software dependencies": "Open-source libraries",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 5,
        "Feedbacks [easy to configure/build (5=easy)]": 5,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "N/A",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 2,
        "Feedbacks [Interface user-friendly (5=easy)]": "N/A",
        "Documentation": "None",
        "Authors": "Academia",
        "ACM 1": "Shape modeling",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Mac OS",
        "General comments": "The provided code is related to a subproblem (adaptive sampling to generate seeds) and not to the core of the paper. Many pseudo-code are given which suggest non trivial but easy reimplementation of the method.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 73,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "numpy / matplotlib",
        "Project URL": "https://sites.google.com/site/jonasmartinezbayona/procvorfoam",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2016,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Fabrication",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 1,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 3,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Jon\u00e0s",
                "family": "Mart\u00ednez",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "INRIA"
                    }
                ]
            },
            {
                "given": "J\u00e9r\u00e9mie",
                "family": "Dumas",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Universit\u00e9 de Lorraine, INRIA"
                    }
                ]
            },
            {
                "given": "Sylvain",
                "family": "Lefebvre",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "INRIA, Universit\u00e9 de Lorraine"
                    }
                ]
            }
        ],
        "Altmetric score": 7,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=7&types=aaaaattt",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=35467286"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Progressive Parameterizations",
        "DOI": "10.1145/3197517.3201331",
        "PDF availability (beside dl.acm)": "On the author(s) repository (dropbox, github, drive, iCloud)",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on the authors website or project page (zip file, direct download...), on github, gitlab or other code platform",
        "Main languages": "C/C++",
        "How long did take for you to evaluate the code this paper (if any)?": 7,
        "Build info / instructions": "README, LICENSE or explicit license (e.g. in the readme / headers)",
        "arXiv (page URL)": "",
        "code URL": "https://github.com/ChunyangYe/PP",
        "code URL  2": "",
        "PDF URL": "https://www.dropbox.com/s/jqn1xnc7orpjze5/papers_306s4-file1.pdf?dl=0",
        "License type": "MIT",
        "Build mechanism": "CMakeLists",
        "Mandatory Software dependencies": "Open-source libraries",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 3,
        "Feedbacks [easy to configure/build (5=easy)]": 4,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": 5,
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 4,
        "Feedbacks [Interface user-friendly (5=easy)]": 5,
        "Documentation": "None",
        "Authors": "Academia",
        "ACM 1": "Shape modeling",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Windows",
        "General comments": "I did not used MinGW as recommended since Visual Studio was working well with the provided CMake, modulo minor edits in the project file (_USE_MATH_DEFINES and the .dll and .a were linked instead of the .lib files).",
        "Does the paper already have a reproducibility stamp": "Yes, http://www.replicabilitystamp.org",
        "Citation count (google scholar)": 15,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "OpenMesh / Eigen",
        "Project URL": "http://staff.ustc.edu.cn/~fuxm/projects/ProgressivePara/",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Geometry",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 5,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Ligang",
                "family": "Liu",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "University of Science and Technology of China, China"
                    }
                ]
            },
            {
                "given": "Chunyang",
                "family": "Ye",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of Science and Technology of China, China"
                    }
                ]
            },
            {
                "given": "Ruiqi",
                "family": "Ni",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of Science and Technology of China, China"
                    }
                ]
            },
            {
                "given": "Xiao-Ming",
                "family": "Fu",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of Science and Technology of China, China"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Projective Dynamics: Fusing Constraint Projections for Fast Simulation",
        "DOI": "10.1145/2601097.2601116",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No but pseudo-code in the PDF",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://www.cs.utah.edu/~ladislav/bouaziz14projective/bouaziz14projective.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Animation",
        "ACM 2": "Simulation by animation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 205,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "https://lgg.epfl.ch/publications/2014/ProjectiveDynamics/index.php",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Animation",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": 1,
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Sofien",
                "family": "Bouaziz",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Sebastian",
                "family": "Martin",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Tiantian",
                "family": "Liu",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Ladislav",
                "family": "Kavan",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Mark",
                "family": "Pauly",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Provably Good Planar Mappings",
        "DOI": "10.1145/2601097.2601123",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "WayBack Machine",
        "Main languages": "Matlab / Mathematica / ..",
        "How long did take for you to evaluate the code this paper (if any)?": 4,
        "Build info / instructions": "README, AUTHORS or explicitly mentioned",
        "arXiv (page URL)": "",
        "code URL": "https://web.archive.org/web/20160514114145/http://www.wisdom.weizmann.ac.il/~roip/Code/PGPM.zip",
        "code URL  2": "",
        "PDF URL": "https://inf.ethz.ch/personal/poranner/papers/provably.pdf",
        "License type": "unspecified",
        "Build mechanism": "Not applicable (python, Matlab..)",
        "Mandatory Software dependencies": "Closed source (e.g. commercial) software or libraries free for research purposes, Paywall Closed source software or libraries",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 5,
        "Feedbacks [easy to configure/build (5=easy)]": 5,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": 2,
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 5,
        "Feedbacks [Interface user-friendly (5=easy)]": 5,
        "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions",
        "Authors": "Academia",
        "ACM 1": "Randomness, geometry and discrete structures",
        "ACM 2": "Shape modeling",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": 1,
        "OS of the test": "Windows",
        "General comments": "Important : the original link to the source code is broken, and I could only find a version stored by the WayBack Machine.\nTested on Matlab R2018a and a few things have changed since R2013a. Need to change all widthlimits to WidthLimits (same for height) ; set(gcf,'wvisualmode','auto') does not exist (I changed to RenderMode, but I am not sure this is the same). The addpath at the begining of Deform.m should be changed to the correct Mosek/Matlab version number.\nThe reason I do not put higher score to \"fixing bugs\" is that there still seems to be an image normalization issue which makes all images appear near white (I'd say in the range 253 to 255), perhaps due to the \"wvisualmode\" setting. I did not manage to fix it in a reasonable amount of time. However, the deformation pipeline seemed to work well, to the extent I could see the very bright result.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 35,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "matlab / mosek / gui",
        "Project URL": "",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Geometry",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 3,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 1,
        "Paper authors": [
            {
                "given": "Roi",
                "family": "Poranne",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Yaron",
                "family": "Lipman",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "ProxImaL: Efficient Image Optimization using Proximal Algorithms",
        "DOI": "10.1145/2897824.2925875",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on the authors website or project page (zip file, direct download...)",
        "Main languages": "Python",
        "How long did take for you to evaluate the code this paper (if any)?": 3,
        "Build info / instructions": "README",
        "arXiv (page URL)": "",
        "code URL": "http://www.proximal-lang.org/en/latest/",
        "code URL  2": "https://github.com/comp-imaging/ProxImaL",
        "PDF URL": "http://people.csail.mit.edu/jrk/proximal.pdf",
        "License type": "MIT",
        "Build mechanism": "Other script",
        "Mandatory Software dependencies": "Open-source libraries",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 5,
        "Feedbacks [easy to configure/build (5=easy)]": 5,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "N/A",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 5,
        "Feedbacks [Interface user-friendly (5=easy)]": "N/A",
        "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions, API documentation",
        "Authors": "Academia",
        "ACM 1": "Regularization",
        "ACM 2": "Computational photography",
        "ACM 3": "Mixed discrete-continuous optimization",
        "ACM 4": "Solvers",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Linux",
        "General comments": "Works perfectly on linux. I was able to run the example but not all paper results.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 41,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "numpy / scipy / pil / pip / opencv",
        "Project URL": "",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2016,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Image",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 3,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 3,
        "Documentation score": 1,
        "Paper authors": [
            {
                "given": "Felix",
                "family": "Heide",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Stanford University and University of British Columbia"
                    }
                ]
            },
            {
                "given": "Steven",
                "family": "Diamond",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Stanford University"
                    }
                ]
            },
            {
                "given": "Matthias",
                "family": "Nie\u00dfner",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Stanford University"
                    }
                ]
            },
            {
                "given": "Jonathan",
                "family": "Ragan-Kelley",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Stanford University"
                    }
                ]
            },
            {
                "given": "Wolfgang",
                "family": "Heidrich",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "KAUST and University of British Columbia"
                    }
                ]
            },
            {
                "given": "Gordon",
                "family": "Wetzstein",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Stanford University"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Pteromys: Interactive Design and Optimization of Free-formed Free-flight Model Airplanes",
        "DOI": "10.1145/2601097.2601129",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://www.nobuyuki-umetani.com/publication/2014_sigg_pteromys/2014_siggraph_GliderDesign.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Geometric topology",
        "ACM 2": "Physical simulation",
        "ACM 3": "Shape modeling",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 85,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "http://www.nobuyuki-umetani.com/publication/2014_sigg_pteromys/2014_siggraph_GliderDesign.html",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Fabrication",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 4,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Nobuyuki",
                "family": "Umetani",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Yuki",
                "family": "Koyama",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Ryan",
                "family": "Schmidt",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Takeo",
                "family": "Igarashi",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 10,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=10&types=mmmmmmmm",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=2579692"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "PushPull++",
        "DOI": "10.1145/2601097.2601197",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No but pseudo-code in the PDF",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://peterwonka.net/Publications/pdfs/2014.SG.Lipp.PushPull.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Computational geometry",
        "ACM 2": "Shape modeling",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 9,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Geometry",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": 2,
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Markus",
                "family": "Lipp",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Peter",
                "family": "Wonka",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Pascal",
                "family": "M\u00fcller",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Quadrangulation through morse-parameterization hybridization",
        "DOI": "10.1145/3197517.3201354",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on the authors website or project page (zip file, direct download...)",
        "Main languages": "Cannot answer",
        "How long did take for you to evaluate the code this paper (if any)?": 2,
        "Build info / instructions": "README",
        "arXiv (page URL)": "",
        "code URL": "http://www.cad.zju.edu.cn/home/hj/18/hybrid_quad_binary_Mint19_V20180731.7z",
        "code URL  2": "",
        "PDF URL": "http://www.geometry.caltech.edu/pubs/FBTDH18.pdf",
        "License type": "unspecified",
        "Build mechanism": "Not applicable (python, Matlab..)",
        "Mandatory Software dependencies": "None",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "N/A",
        "Feedbacks [easy to configure/build (5=easy)]": "N/A",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "N/A",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "N/A",
        "Feedbacks [Interface user-friendly (5=easy)]": 4,
        "Documentation": "None",
        "Authors": "Academia",
        "ACM 1": "Mesh generation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Linux",
        "General comments": "Few missing guidelines in the readme (path where to execute the script) but this is minor. Just a single example is given (one mesh+field+features set) but the binary works fine. The part of the paper that computes the framefield and the feature lines is not given so it is difficult to reproduce all paper results.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 3,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "Binary",
        "Topic": "Geometry",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 3,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 3,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Xianzhong",
                "family": "Fang",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Zhejiang University"
                    }
                ]
            },
            {
                "given": "Hujun",
                "family": "Bao",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Zhejiang University"
                    }
                ]
            },
            {
                "given": "Yiying",
                "family": "Tong",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Michigan State University"
                    }
                ]
            },
            {
                "given": "Mathieu",
                "family": "Desbrun",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Caltech"
                    }
                ]
            },
            {
                "given": "Jin",
                "family": "Huang",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Zhejiang University"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "RAID: A Relation-Augmented Image Descriptor",
        "DOI": "10.1145/2897824.2925939",
        "PDF availability (beside dl.acm)": "On an open archive arXiv or similar open archive, On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on github, gitlab or other code platform",
        "Main languages": "Matlab / Mathematica / ..",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "README",
        "arXiv (page URL)": "https://arxiv.org/abs/1510.01113",
        "code URL": "http://bitbucket.org/paulguerrero/raid",
        "code URL  2": "",
        "PDF URL": "https://geometry.cs.ucl.ac.uk/projects/2016/image-relationships/paper_docs/GuerreroEtAl_RAID_SIGG16.pdf",
        "License type": "unspecified",
        "Build mechanism": "Not applicable (python, Matlab..)",
        "Mandatory Software dependencies": "Paywall Closed source software or libraries",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 5,
        "Feedbacks [easy to configure/build (5=easy)]": 5,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "N/A",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "Yes",
        "Available data (provided or url / ref)": "Training data",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 5,
        "Feedbacks [Interface user-friendly (5=easy)]": 5,
        "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions",
        "Authors": "Academia",
        "ACM 1": "Shape analysis",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": 1,
        "OS of the test": "Windows",
        "General comments": "The code runs very easily (tested on Matlab 2018a) and I managed to get very similar results as those shown in the teaser by drawing a similar sketch as the one in the teaser.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 11,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "matlab",
        "Project URL": "https://geometry.cs.ucl.ac.uk/projects/2016/image-relationships/",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2016,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Image",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": true,
        "Feedbacks [could reproduce results (5=highly confident)]": 5,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 1,
        "Paper authors": [
            {
                "given": "Paul",
                "family": "Guerrero",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "University College London"
                    }
                ]
            },
            {
                "given": "Niloy J.",
                "family": "Mitra",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University College London"
                    }
                ]
            },
            {
                "given": "Peter",
                "family": "Wonka",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "KAUST"
                    }
                ]
            }
        ],
        "Altmetric score": 3,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=3&types=aaaaaaaa",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=41694409"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Rapid deployment of curved surfaces via programmable auxetics",
        "DOI": "10.1145/3197517.3201373",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://lgg.epfl.ch/publications/2018/ProgrammableAuxetics/paper.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Mesh geometry models",
        "ACM 2": "Computer-aided design",
        "ACM 3": "Computer-aided manufacturing",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 10,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "https://lgg.epfl.ch/publications/2018/ProgrammableAuxetics/index.php",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Geometry",
        "Deep learning": "True",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 1,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Mina",
                "family": "Konakovi\u0107-Lukovi\u0107",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "EPFL"
                    }
                ]
            },
            {
                "given": "Julian",
                "family": "Panetta",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "EPFL"
                    }
                ]
            },
            {
                "given": "Keenan",
                "family": "Crane",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Carnegie Mellon University"
                    }
                ]
            },
            {
                "given": "Mark",
                "family": "Pauly",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "EPFL"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Real-time data-driven interactive rough sketch inking",
        "DOI": "10.1145/3197517.3201370",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on github, gitlab or other code platform",
        "Main languages": "Python",
        "How long did take for you to evaluate the code this paper (if any)?": 3,
        "Build info / instructions": "README, LICENSE or explicit license (e.g. in the readme / headers)",
        "arXiv (page URL)": "",
        "code URL": "https://github.com/bobbens/line_thinning",
        "code URL  2": "",
        "PDF URL": "https://esslab.jp/publications/SimoSerraSIGGRAPH2018.pdf",
        "License type": "Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International",
        "Build mechanism": "Not applicable (python, Matlab..)",
        "Mandatory Software dependencies": "Open-source libraries, Closed source (e.g. commercial) software or libraries free for research purposes",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 5,
        "Feedbacks [easy to configure/build (5=easy)]": "N/A",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "N/A",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "Yes",
        "Available data (provided or url / ref)": "Pre-trained models / Hardcoded data / lookup tables /...",
        "License for the data (if any)": "Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 4,
        "Feedbacks [Interface user-friendly (5=easy)]": 5,
        "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions",
        "Authors": "Academia",
        "ACM 1": "Gestural input",
        "ACM 2": "Image manipulation",
        "ACM 3": "Fine arts",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Linux",
        "General comments": "Code provided can reproduce paper-like examples of line thinning, but not the user-edit tool. Only the pre-trained model is available not the training algorithm.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 11,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "pillow/pytorch",
        "Project URL": "https://esslab.jp/~ess/en/research/inking/",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Image",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 4,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 1,
        "Documentation score": 1,
        "Paper authors": [
            {
                "given": "Edgar",
                "family": "Simo-Serra",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Waseda University"
                    }
                ]
            },
            {
                "given": "Satoshi",
                "family": "Iizuka",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Waseda University"
                    }
                ]
            },
            {
                "given": "Hiroshi",
                "family": "Ishikawa",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Waseda University"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Real-time Facial Animation with Image-based Dynamic Avatars",
        "DOI": "10.1145/2897824.2925873",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No but pseudo-code in the PDF",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://www.kunzhou.net/2016/imageAvatar.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Motion capture",
        "ACM 2": "Animation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 87,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2016,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Animation",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": 1,
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Chen",
                "family": "Cao",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Zhejiang University"
                    }
                ]
            },
            {
                "given": "Hongzhi",
                "family": "Wu",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Zhejiang University"
                    }
                ]
            },
            {
                "given": "Yanlin",
                "family": "Weng",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Zhejiang University"
                    }
                ]
            },
            {
                "given": "Tianjia",
                "family": "Shao",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Zhejiang University"
                    }
                ]
            },
            {
                "given": "Kun",
                "family": "Zhou",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Zhejiang University"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Real-Time Non-Rigid Reconstruction Using an RGB-D Camera",
        "DOI": "10.1145/2601097.2601165",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://graphics.stanford.edu/~mdfisher/papers/deformables.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Image manipulation",
        "ACM 2": "Image and video acquisition",
        "ACM 3": "Document scanning",
        "ACM 4": "Graphics recognition and interpretation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 299,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "https://www.microsoft.com/en-us/research/publication/real-time-non-rigid-reconstruction-using-an-rgb-d-camera-2/",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Animation",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Michael",
                "family": "Zollh\u00f6fer",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Christian",
                "family": "Theobalt",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Marc",
                "family": "Stamminger",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Matthias",
                "family": "Nie\u00dfner",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Shahram",
                "family": "Izadi",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Christoph",
                "family": "Rehmann",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Christopher",
                "family": "Zach",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Matthew",
                "family": "Fisher",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Chenglei",
                "family": "Wu",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Andrew",
                "family": "Fitzgibbon",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Charles",
                "family": "Loop",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 12.8,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=13&types=aassssss",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=2647835"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Real-Time Polygonal-Light Shading with Linearly Transformed Cosines",
        "DOI": "10.1145/2897824.2925895",
        "PDF availability (beside dl.acm)": "On the author(s) repository (dropbox, github, drive, iCloud)",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on the authors website or project page (zip file, direct download...), on github, gitlab or other code platform",
        "Main languages": "C/C++, Shader language",
        "How long did take for you to evaluate the code this paper (if any)?": 2,
        "Build info / instructions": "README, LICENSE or explicit license (e.g. in the readme / headers)",
        "arXiv (page URL)": "",
        "code URL": "http://blog.selfshadow.com/publications/ltc/ltc_demo.zip",
        "code URL  2": "https://github.com/selfshadow/ltc_code",
        "PDF URL": "https://drive.google.com/file/d/0BzvWIdpUpRx_d09ndGVjNVJzZjA/view",
        "License type": "BSD",
        "Build mechanism": "Makefile",
        "Mandatory Software dependencies": "None",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 5,
        "Feedbacks [easy to configure/build (5=easy)]": 5,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "N/A",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 5,
        "Feedbacks [Interface user-friendly (5=easy)]": 5,
        "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions",
        "Authors": "Private Companies",
        "ACM 1": "Reflectance modeling",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Linux",
        "General comments": "The demo code compiles and run perfectly on linux. The webGL demo is also perfectly working.\n\nThe C++ project does not compile on macOS  (make osx):\n\n/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/System/Library/Frameworks/AppKit.framework/Headers/NSViewController.h:247:39: fatal error:\n      unknown type name 'NSExtensionContext'; did you mean 'NSAnimationContext'?",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 38,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "https://eheitzresearch.wordpress.com/415-2/",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2016,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Rendering",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 4,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 3,
        "Documentation score": 1,
        "Paper authors": [
            {
                "given": "Eric",
                "family": "Heitz",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Unity Technologies"
                    }
                ]
            },
            {
                "given": "Jonathan",
                "family": "Dupuy",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Unity Technologies"
                    }
                ]
            },
            {
                "given": "Stephen",
                "family": "Hill",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Ubisoft"
                    }
                ]
            },
            {
                "given": "David",
                "family": "Neubelt",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Ready At Dawn Studios"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Real-time Rendering on a Power Budget",
        "DOI": "10.1145/2897824.2925889",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://www.cad.zju.edu.cn/home/rwang/projects/power-optimization/16power.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Rendering",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 12,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "http://www.cad.zju.edu.cn/home/rwang/projects/power-optimization/power.html#powerparam",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2016,
        "Misc. comment": "The project website indicates the code is coming soon.",
        "Software Type": "",
        "Topic": "Rendering",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Rui",
                "family": "Wang",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Zhejiang University"
                    }
                ]
            },
            {
                "given": "Bowen",
                "family": "Yu",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Zhejiang University"
                    }
                ]
            },
            {
                "given": "Julio",
                "family": "Marco",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Universidad de Zaragoza"
                    }
                ]
            },
            {
                "given": "Tianlei",
                "family": "Hu",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Zhejiang University"
                    }
                ]
            },
            {
                "given": "Diego",
                "family": "Gutierrez",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Universidad de Zaragoza and I3A Institute"
                    }
                ]
            },
            {
                "given": "Hujun",
                "family": "Bao",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Zhejiang University"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Real-time Skeletal Skinning with Optimized Centers of Rotation",
        "DOI": "10.1145/2897824.2925959",
        "PDF availability (beside dl.acm)": "Other (web, research gate, semantic scholar,...)",
        "Is the code or software publicly available ?": "No but pseudo-code in the PDF",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://s3-us-west-1.amazonaws.com/disneyresearch/wp-content/uploads/20160705174939/Real-time-Skeletal-Skinning-with-Optimized-Centers-of-Rotation-Paper.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Private Companies",
        "ACM 1": "Animation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 37,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "https://binh.graphics/papers/2016s-cor/",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2016,
        "Misc. comment": "An implementation by Damian Stewart (not author) is available at https://github.com/damian0815/skellington",
        "Software Type": "",
        "Topic": "Animation",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": 3,
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Binh Huy",
                "family": "Le",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Disney Research"
                    }
                ]
            },
            {
                "given": "Jessica K.",
                "family": "Hodgins",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Disney Research"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Realtime 3D Eye Gaze Animation Using a Single RGB Camera",
        "DOI": "10.1145/2897824.2925947",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://faculty.cs.tamu.edu/jchai/projects/sig16-gaze/gaze_final.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Virtual reality",
        "ACM 2": "Animation",
        "ACM 3": "Gestural input",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 30,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2016,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Animation",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Congyi",
                "family": "Wang",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Institute of Computing Technology and University of Chinese Academy of Sciences"
                    }
                ]
            },
            {
                "given": "Fuhao",
                "family": "Shi",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Texas A&M University"
                    }
                ]
            },
            {
                "given": "Shihong",
                "family": "Xia",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Institute of Computing Technology"
                    }
                ]
            },
            {
                "given": "Jinxiang",
                "family": "Chai",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Texas A&M University"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Reconstructing scenes with mirror and glass surfaces",
        "DOI": "10.1145/3197517.3201319",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://www.gcc.tu-darmstadt.de/media/gcc/papers/mirror-scenes.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia, Private Companies",
        "ACM 1": "3D imaging",
        "ACM 2": "Reflectance modeling",
        "ACM 3": "Shape modeling",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 9,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "https://research.fb.com/publications/reconstructing-scenes-with-mirror-and-glass-surfaces/",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Image",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": true,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 1,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Thomas",
                "family": "Whelan",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Facebook Reality Labs"
                    }
                ]
            },
            {
                "given": "Michael",
                "family": "Goesele",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Facebook Reality Labs and TU Darmstadt"
                    }
                ]
            },
            {
                "given": "Steven J.",
                "family": "Lovegrove",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Facebook Reality Labs"
                    }
                ]
            },
            {
                "given": "Julian",
                "family": "Straub",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Facebook Reality Labs"
                    }
                ]
            },
            {
                "given": "Simon",
                "family": "Green",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Facebook Reality Labs"
                    }
                ]
            },
            {
                "given": "Richard",
                "family": "Szeliski",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Facebook"
                    }
                ]
            },
            {
                "given": "Steven",
                "family": "Butterfield",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Facebook Reality Labs"
                    }
                ]
            },
            {
                "given": "Shobhit",
                "family": "Verma",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Facebook Reality Labs"
                    }
                ]
            },
            {
                "given": "Richard",
                "family": "Newcombe",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Facebook Reality Labs"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Reflectance Modeling by Neural Texture Synthesis",
        "DOI": "10.1145/2897824.2925917",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://mediatech.aalto.fi/publications/graphics/NeuralSVBRDF/aittala2016_siggraph.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Reflectance modeling",
        "ACM 2": "Texturing",
        "ACM 3": "Neural networks",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 56,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "https://mediatech.aalto.fi/publications/graphics/NeuralSVBRDF/",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2016,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Rendering",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": true,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Miika",
                "family": "Aittala",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Aalto University"
                    }
                ]
            },
            {
                "given": "Timo",
                "family": "Aila",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "NVIDIA"
                    }
                ]
            },
            {
                "given": "Jaakko",
                "family": "Lehtinen",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Aalto University, NVIDIA"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Reflectance scanning: estimating shading frame and BRDF with generalized linear light sources",
        "DOI": "10.1145/2601097.2601180",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No but pseudo-code in the PDF",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 2,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://yuedong.shading.me/project/refscan/refscan.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia, Private Companies",
        "ACM 1": "3D imaging",
        "ACM 2": "Animation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 26,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "http://yuedong.shading.me/project/refscan/refscan.htm",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Rendering",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": 4,
        "Reviewer": 1,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Guojun",
                "family": "Chen",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Yue",
                "family": "Dong",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Pieter",
                "family": "Peers",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Jiawan",
                "family": "Zhang",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Xin",
                "family": "Tong",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Relating shapes via geometric symmetries and regularities",
        "DOI": "10.1145/2601097.2601220",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 2,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://www.cs.utexas.edu/~huangqx/sym_sig14.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Shape modeling",
        "ACM 2": "Computational geometry",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 32,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "http://www.tevs.eu/project_sig14.html",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Geometry",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 1,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Art",
                "family": "Tevs",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Qixing",
                "family": "Huang",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Michael",
                "family": "Wand",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Hans-Peter",
                "family": "Seidel",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Leonidas",
                "family": "Guibas",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Rendering Glints on High-Resolution Normal-Mapped Specular Surfaces",
        "DOI": "10.1145/2601097.2601155",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 2,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://rgl.s3.eu-central-1.amazonaws.com/media/papers/Yan2014Rendering.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Texturing",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 55,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "https://rgl.epfl.ch/publications/Yan2014Rendering",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Rendering",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": true,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 1,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Ling-Qi",
                "family": "Yan",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Milo\u0161",
                "family": "Ha\u0161an",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Wenzel",
                "family": "Jakob",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Jason",
                "family": "Lawrence",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Steve",
                "family": "Marschner",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Ravi",
                "family": "Ramamoorthi",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Rendering specular microgeometry with wave optics",
        "DOI": "10.1145/3197517.3201351",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on github, gitlab or other code platform",
        "Main languages": "C/C++",
        "How long did take for you to evaluate the code this paper (if any)?": 2,
        "Build info / instructions": "README, LICENSE or explicit license (e.g. in the readme / headers)",
        "arXiv (page URL)": "",
        "code URL": "https://github.com/lingqi/WaveOpticsBrdf",
        "code URL  2": "",
        "PDF URL": "https://cseweb.ucsd.edu/~ravir/waveoptics.pdf",
        "License type": "GPL",
        "Build mechanism": "Makefile",
        "Mandatory Software dependencies": "Open-source libraries",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 4,
        "Feedbacks [easy to configure/build (5=easy)]": 5,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": 5,
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "Yes",
        "Available data (provided or url / ref)": "Pre-trained models / Hardcoded data / lookup tables /...",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 4,
        "Feedbacks [Interface user-friendly (5=easy)]": 5,
        "Documentation": "None",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Rendering",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Mac OS",
        "General comments": "Missing Eigen dependency.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 14,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "openexr / eigen",
        "Project URL": "",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Rendering",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 4,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 3,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Ling-Qi",
                "family": "Yan",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "University of California"
                    }
                ]
            },
            {
                "given": "Milo\u0161",
                "family": "Ha\u0161an",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Autodesk"
                    }
                ]
            },
            {
                "given": "Bruce",
                "family": "Walter",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Cornell University"
                    }
                ]
            },
            {
                "given": "Steve",
                "family": "Marschner",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Cornell University"
                    }
                ]
            },
            {
                "given": "Ravi",
                "family": "Ramamoorthi",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of California"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Resolving Fluid Boundary Layers with Particle Strength Exchange and Weak Adaptivity",
        "DOI": "10.1145/2897824.2925910",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on github, gitlab or other code platform",
        "Main languages": "C/C++",
        "How long did take for you to evaluate the code this paper (if any)?": 4,
        "Build info / instructions": "README, LICENSE or explicit license (e.g. in the readme / headers)",
        "arXiv (page URL)": "",
        "code URL": "https://github.com/zhxx1987/IVOCK",
        "code URL  2": "",
        "PDF URL": "https://www.cs.ubc.ca/~rbridson/docs/zhang-siggraph2016-whirp_vflip.pdf",
        "License type": "GPL",
        "Build mechanism": "IDE Project (VS,..)",
        "Mandatory Software dependencies": "Open-source libraries",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 5,
        "Feedbacks [easy to configure/build (5=easy)]": 3,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": 3,
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 5,
        "Feedbacks [Interface user-friendly (5=easy)]": 1,
        "Documentation": "None",
        "Authors": "Academia",
        "ACM 1": "Physical simulation",
        "ACM 2": "Partial differential equations",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Windows",
        "General comments": "The code comes with a solver, a particle simulator and a particle renderer that renders the simulation. Compiling the code required a number of steps (under Visual Studio 2017):\n* for the TBB_Multigrid project, you need to set the TBBROOT environment variable to your TBB path.\n\n* for the Smoke_Solver project:\n- in Smoke_Solver.vcxproj, the tbb props file should be updated to mach your TBB_Multigrid path (since the props file is shipped) and some paths that are hardcoded (e.g., C:\\Users\\xinxin\\Dropbox\\xinxin_code\\TBB_Multigrid\\TBB_Multigrid ) should be updated.\n- same process for particle_renderer.vcproj.xinxin-PC.xinxin\n- in TBB_SETTINGS.props, change glew64 to glew32 (?)\n- the projects can then be loaded (and possibly retargeted) in Visual Studio.\n\n- In util.h of both Smoke_Solver and particle_renderer projects, you need to comment out the function lround line 197--203\n- You should add the path to the libraries for glew (and use glew32 instead of glew64 ?),  freeglut and tbb\n\n- to read the resulting sgi files, you can download the sgi plugin for photoshop (put the plugin in C:\\Program Files\\Adobe\\Adobe Photoshop CC 2019\\Plug-ins and restard photoshop)\n\nUltimately, the simulation runs smoothly and produces files that consist in the particles for each time frame.\nThe renderer is not documented and hard to play with. Using wrong values can lead to extreme times (I had a rendering compute for 67 hours and resulting in a constant blueish image ; some renderings just crash using a wrong \"quality_factor\" value which makes gigantic shadow maps...). Using the following values worked well:\n.\\particle_renderer.exe [path to frames] 0.01 0.01 0.1 10 10 10 10 150 180\n(where here 150--180 renders frames from 150 to 180).",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 9,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "TBB / glew",
        "Project URL": "",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2016,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Animation",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 5,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Xinxin",
                "family": "Zhang",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "UBC Computer Science"
                    }
                ]
            },
            {
                "given": "Minchen",
                "family": "Li",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "UBC Computer Science"
                    }
                ]
            },
            {
                "given": "Robert",
                "family": "Bridson",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "UBC Computer Science, Autodesk Canada"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Rich360: optimized spherical representation from structured panoramic camera arrays",
        "DOI": "10.1145/2897824.2925983",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://vml.kaist.ac.kr/assets/Contents/Publications/International/2016JungjinLee_TOG/2016JungjinLee_TOG.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Image representations",
        "ACM 2": "Computational photography",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 48,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "https://vml.kaist.ac.kr/assets/Contents/Publications/International/2016JungjinLee_TOG/2016JungjinLee_TOG.html",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2016,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Image",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Jungjin",
                "family": "Lee",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "KAIST"
                    }
                ]
            },
            {
                "given": "Bumki",
                "family": "Kim",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "KAIST"
                    }
                ]
            },
            {
                "given": "Kyehyun",
                "family": "Kim",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "KAIST"
                    }
                ]
            },
            {
                "given": "Younghui",
                "family": "Kim",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "KAI Co., Inc."
                    }
                ]
            },
            {
                "given": "Junyong",
                "family": "Noh",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "KAIST"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Rig Animation with a Tangible and Modular Input Device",
        "DOI": "10.1145/2984751.2985696",
        "PDF availability (beside dl.acm)": "On an open archive arXiv or similar open archive, On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on github, gitlab or other code platform",
        "Main languages": "C/C++",
        "How long did take for you to evaluate the code this paper (if any)?": 2,
        "Build info / instructions": "README",
        "arXiv (page URL)": "",
        "code URL": "https://github.com/oliglauser/atamid",
        "code URL  2": "",
        "PDF URL": "https://igl.ethz.ch/projects/rig-animation-input-device/Rig-Animation-Input-Device-2016.pdf",
        "License type": "unspecified",
        "Build mechanism": "CMakeLists",
        "Mandatory Software dependencies": "Open-source libraries",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "N/A",
        "Feedbacks [easy to configure/build (5=easy)]": "N/A",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "N/A",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "N/A",
        "Feedbacks [Interface user-friendly (5=easy)]": "N/A",
        "Documentation": "None",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Human computer interaction (HCI)",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Mac OS",
        "General comments": "The project contains both hardware specifications and a software to control the proposed tangible controller. The code does not provide any information about the build instructions and it seems that it requires an old version of libIGL (and many hardcoded path in the CMakeLists.txt).I was thus not able compile the project.\n\nThe repository seems to be down as many elements are missing: \"Future home of the open hardware specifications and software source code accompanying \"Rig Animation with a Tangible and Modular Input Device\" [Glauser et al. 2016].",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 20,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "igl / eigen/glfw / nanogui",
        "Project URL": "https://igl.ethz.ch/projects/rig-animation-input-device/",
        "Did I manage to perform a complete test (deps/build)?": "No due to missing specific hardware",
        "Year": 2016,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Virtual Reality",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "N/A",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 3,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Oliver",
                "family": "Glauser",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "ETH Zurich, Zurich, Switzerland"
                    }
                ]
            },
            {
                "given": "Benedek",
                "family": "Vartok",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "ETH Zurich, Zurich, Switzerland"
                    }
                ]
            },
            {
                "given": "Wan-Chun",
                "family": "Ma",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Activision Inc., Santa Monica, CA, USA"
                    }
                ]
            },
            {
                "given": "Daniele",
                "family": "Panozzo",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "New York University, New York, NY, USA"
                    }
                ]
            },
            {
                "given": "Alec",
                "family": "Jacobson",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Columbia University, New York, NY, USA"
                    }
                ]
            },
            {
                "given": "Otmar",
                "family": "Hilliges",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "ETH Zurich, Zurich, Switzerland"
                    }
                ]
            },
            {
                "given": "Olga",
                "family": "Sorkine-Hornung",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "ETH Zurich, Zurich, Switzerland"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Rigel: Flexible Multi-Rate Image Processing Hardware",
        "DOI": "10.1145/2897824.2925892",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on github, gitlab or other code platform",
        "Main languages": "Other",
        "How long did take for you to evaluate the code this paper (if any)?": 4,
        "Build info / instructions": "README, LICENSE or explicit license (e.g. in the readme / headers), AUTHORS or explicitly mentioned",
        "arXiv (page URL)": "",
        "code URL": "https://github.com/jameshegarty/rigel",
        "code URL  2": "",
        "PDF URL": "http://graphics.stanford.edu/papers/rigel/rigel.pdf",
        "License type": "MIT",
        "Build mechanism": "None",
        "Mandatory Software dependencies": "Open-source libraries",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 5,
        "Feedbacks [easy to configure/build (5=easy)]": "N/A",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "N/A",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 2,
        "Feedbacks [Interface user-friendly (5=easy)]": 2,
        "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions",
        "Authors": "Academia",
        "ACM 1": "Image processing",
        "ACM 2": "Hardware description languages and compilation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Linux",
        "General comments": "I was able to run the software and the examples, but no demo due to terra (optional dependency) failure. The examples of the paper might be in the demo but I was unable to check.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 32,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "luajit/verilato(opt)/terra(opt)",
        "Project URL": "http://graphics.stanford.edu/papers/rigel/",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2016,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Image",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 3,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 1,
        "Documentation score": 1,
        "Paper authors": [
            {
                "given": "James",
                "family": "Hegarty",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Stanford University"
                    }
                ]
            },
            {
                "given": "Ross",
                "family": "Daly",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Stanford University"
                    }
                ]
            },
            {
                "given": "Zachary",
                "family": "DeVito",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Stanford University"
                    }
                ]
            },
            {
                "given": "Jonathan",
                "family": "Ragan-Kelley",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Stanford University"
                    }
                ]
            },
            {
                "given": "Mark",
                "family": "Horowitz",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Stanford University"
                    }
                ]
            },
            {
                "given": "Pat",
                "family": "Hanrahan",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Stanford University"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Rigid Stabilization of Facial Expressions",
        "DOI": "10.1145/2601097.2601182",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://studios.disneyresearch.com/wp-content/uploads/2019/03/Rigid-Stabilization-of-Facial-Expressions.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Private Companies",
        "ACM 1": "Image manipulation",
        "ACM 2": "Document scanning",
        "ACM 3": "Graphics recognition and interpretation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 36,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "https://studios.disneyresearch.com/2014/07/27/rigid-stabilization-of-facial-expressions/",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Animation",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 1,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Thabo",
                "family": "Beeler",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Derek",
                "family": "Bradley",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 3,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=3&types=aaaaaaaa",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=42947741"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Robust and Accurate Skeletal Rigging from Mesh Sequences",
        "DOI": "10.1145/2601097.2601161",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution, Other (web, research gate, semantic scholar,...)",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on the authors website or project page (zip file, direct download...)",
        "Main languages": "Cannot answer",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "README, AUTHORS or explicitly mentioned",
        "arXiv (page URL)": "",
        "code URL": "http://graphics.cs.uh.edu/ble/papers/2014s-ske/SkeRig_v1.0.zip",
        "code URL  2": "",
        "PDF URL": "https://binh.graphics/papers/2014s-ske/skeleton-draft.pdf",
        "License type": "unspecified",
        "Build mechanism": "None",
        "Mandatory Software dependencies": "Paywall Closed source software or libraries",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "N/A",
        "Feedbacks [easy to configure/build (5=easy)]": "N/A",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "N/A",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 1,
        "Feedbacks [Interface user-friendly (5=easy)]": "N/A",
        "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions",
        "Authors": "Academia",
        "ACM 1": "Animation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Windows",
        "General comments": "The provided binary is shipped with 1 example input (an animated cat model). It produces a text file as output that contains a skeleton, bone transformations and skinning weights. Without an appropriate tool to visualize the animation produced by this text file (in non standard format, though explained in the readme -- I would need to implement one), I cannot check how much the results match the ones shown in the paper.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 73,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "windows",
        "Project URL": "https://binh.graphics/papers/2014s-ske/",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "Binary",
        "Topic": "Animation",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 2,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 1,
        "Paper authors": [
            {
                "given": "Binh Huy",
                "family": "Le",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Zhigang",
                "family": "Deng",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 3,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=3&types=aaaaaaaa",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=35477060"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Robust Field-Aligned Global Parametrization",
        "DOI": "10.1145/2601097.2601154",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://www.ashishmyles.com/projects/files/14fieldtrace.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Randomness, geometry and discrete structures",
        "ACM 2": "Shape modeling",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 77,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "http://vcg.isti.cnr.it/Publications/2014/MPZ14/",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Geometry",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Ashish",
                "family": "Myles",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Nico",
                "family": "Pietroni",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Denis",
                "family": "Zorin",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Robust Hair Capture Using Simulated Examples",
        "DOI": "10.1145/2601097.2601194",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://www.hao-li.com/publications/papers/siggraph2014RHCUSE.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Randomness, geometry and discrete structures",
        "ACM 2": "Shape modeling",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 45,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "http://www.hao-li.com///Hao_Li/Hao_Li_-_publications_%5BRobust_Hair_Capture_Using_Simulated_Examples%5D.html",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Geometry",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 3,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Liwen",
                "family": "Hu",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Chongyang",
                "family": "Ma",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Linjie",
                "family": "Luo",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Hao",
                "family": "Li",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Robust optimization for topological surface reconstruction",
        "DOI": "10.1145/3197517.3201348",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on github, gitlab or other code platform",
        "Main languages": "Matlab / Mathematica / ..",
        "How long did take for you to evaluate the code this paper (if any)?": 2,
        "Build info / instructions": "README",
        "arXiv (page URL)": "",
        "code URL": "https://github.com/roeelazar/cross_section_topology_3D_reconstruction",
        "code URL  2": "",
        "PDF URL": "http://www.wisdom.weizmann.ac.il/~ylipman/2018_topo.pdf",
        "License type": "unspecified",
        "Build mechanism": "Not applicable (python, Matlab..)",
        "Mandatory Software dependencies": "Closed source (e.g. commercial) software or libraries free for research purposes, Paywall Closed source software or libraries",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 5,
        "Feedbacks [easy to configure/build (5=easy)]": 5,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": 5,
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 1,
        "Feedbacks [Interface user-friendly (5=easy)]": 3,
        "Documentation": "API documentation, Technical documentation (comments-doxygen...)",
        "Authors": "Academia",
        "ACM 1": "Mesh models",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": 1,
        "OS of the test": "Windows",
        "General comments": "Need MatlabR2018 to check the code. Has dependencies with YALMIP (~OSS) and uses MOSEK for fast LP solvers which can be obtained free of charge for academic purpose (make sure to request the free licence).\nThe code runs very easily but does not produce a usable mesh (it outputs the chosen patches). It would be difficult to use in practice : the paper builds patches using \"level sets of a scalar function at a set of scalar levels chosen to yield different surface topologies\", but the corresponding code is not provided, so it would be hard to reproduce any result from the paper.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 4,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "matlab / mosek / yalmip",
        "Project URL": "",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Geometry",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 2,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 1,
        "Paper authors": [
            {
                "given": "Roee",
                "family": "Lazar",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Weizmann Institute of Science"
                    }
                ]
            },
            {
                "given": "Nadav",
                "family": "Dym",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Weizmann Institute of Science"
                    }
                ]
            },
            {
                "given": "Yam",
                "family": "Kushinsky",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Weizmann Institute of Science"
                    }
                ]
            },
            {
                "given": "Zhiyang",
                "family": "Huang",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Washington University in St. Louis"
                    }
                ]
            },
            {
                "given": "Tao",
                "family": "Ju",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Washington University in St. Louis"
                    }
                ]
            },
            {
                "given": "Yaron",
                "family": "Lipman",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Weizmann Institute of Science"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Robust solving of optical motion capture data by denoising",
        "DOI": "10.1145/3197517.3201302",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No but pseudo-code in the PDF",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://www.theorangeduck.com/media/uploads/other_stuff/neural_solver.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Private Companies",
        "ACM 1": "Motion capture",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 17,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "http://www.theorangeduck.com/page/robust-solving-optical-motion-capture-data-denoising",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Animation",
        "Deep learning": "True",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": 3,
        "Reviewer": 1,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Daniel",
                "family": "Holden",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Ubisoft La Forge, Ubisoft, Canada"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Roto++: Accelerating Professional Rotoscoping using Shape Manifolds",
        "DOI": "10.1145/2897824.2925973",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on github, gitlab or other code platform",
        "Main languages": "C/C++",
        "How long did take for you to evaluate the code this paper (if any)?": 9,
        "Build info / instructions": "README, LICENSE or explicit license (e.g. in the readme / headers), AUTHORS or explicitly mentioned",
        "arXiv (page URL)": "",
        "code URL": "https://github.com/vinben/Rotopp",
        "code URL  2": "",
        "PDF URL": "https://www.dreamspaceproject.eu/dyn/1479827911473/Accelerating-Professional-Rotoscoping-using-Shape-Manifolds.pdf",
        "License type": "BSD",
        "Build mechanism": "CMakeLists",
        "Mandatory Software dependencies": "Open-source libraries",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "N/A",
        "Feedbacks [easy to configure/build (5=easy)]": "N/A",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "N/A",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "N/A",
        "Feedbacks [Interface user-friendly (5=easy)]": "N/A",
        "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions, API documentation",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Video segmentation",
        "ACM 2": "Shape analysis",
        "ACM 3": "Parametric curve and surface models",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Linux",
        "General comments": "The code requires some old dependencies (opencv2) and thus recommend a build on a ubuntu 14.04. I tried to setup a ubuntu14.04 virtual machine but ceres fails to build (a first issue with the packaged version of eigen which is too old and a c++ build issue later).\nOn a more recent ubuntu, I have an issue with the thirdparty targets:\n\n -- Found Ceres version: 2.0.0 installed in: /usr/local with components: [EigenSparse, SparseLinearAlgebraLibrary, LAPACK, SuiteSparse, CXSparse, SchurSpecializations]\nCMake Error at thirdparty/gflags/CMakeLists.txt:25 (ADD_LIBRARY):\n  ADD_LIBRARY cannot create target \"gflags\" because an imported target with\n  the same name already exists.\n\nI wasn't able to build the project on MacOs Catalina as well.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 27,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "eigen/ceres/qt/opencv/atlas/glog",
        "Project URL": "http://visual.cs.ucl.ac.uk/pubs/rotopp/",
        "Did I manage to perform a complete test (deps/build)?": "No due to technical issue",
        "Year": 2016,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Image",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "N/A",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 3,
        "Documentation score": 1,
        "Paper authors": [
            {
                "given": "Wenbin",
                "family": "Li",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "University College London"
                    }
                ]
            },
            {
                "given": "Fabio",
                "family": "Viola",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "The Foundry"
                    }
                ]
            },
            {
                "given": "Jonathan",
                "family": "Starck",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "The Foundry"
                    }
                ]
            },
            {
                "given": "Gabriel J.",
                "family": "Brostow",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University College London"
                    }
                ]
            },
            {
                "given": "Neill D. F.",
                "family": "Campbell",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of Bath"
                    }
                ]
            }
        ],
        "Altmetric score": 0.25,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=1&types=tttttttt",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=56059052"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Rule-free sewing pattern adjustment with precision and efficiency",
        "DOI": "10.1145/3197517.3201320",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://web.cse.ohio-state.edu/~wang.3602/Wang-2018-RFS/Wang-2018-RFS.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Physical simulation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 14,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Fabrication",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 1,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Huamin",
                "family": "Wang",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "The Ohio State University and Frilly Inc."
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Scalable laplacian eigenfluids",
        "DOI": "10.1145/3197517.3201352",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on the authors website or project page (zip file, direct download...), on github, gitlab or other code platform",
        "Main languages": "C/C++, Other",
        "How long did take for you to evaluate the code this paper (if any)?": 3,
        "Build info / instructions": "README, AUTHORS or explicitly mentioned",
        "arXiv (page URL)": "",
        "code URL": "http://www.tkim.graphics/EIGENFLUID/eigenfluid_src.zip",
        "code URL  2": "https://bitbucket.org/cqd123123/eigenfluidrelease/src/release/",
        "PDF URL": "http://www.tkim.graphics/EIGENFLUID/ScalableEigenFluid.pdf",
        "License type": "GPL",
        "Build mechanism": "CMakeLists",
        "Mandatory Software dependencies": "Open-source libraries",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 5,
        "Feedbacks [easy to configure/build (5=easy)]": 5,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "N/A",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 4,
        "Feedbacks [Interface user-friendly (5=easy)]": 4,
        "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Physical simulation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Linux",
        "General comments": "Easy to setup and install.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 3,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "FFTW / glut /  opengl /  OpenMP / X11 / libjpeg",
        "Project URL": "http://www.tkim.graphics/EIGENFLUID/",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Animation",
        "Deep learning": "True",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 4,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 3,
        "Documentation score": 1,
        "Paper authors": [
            {
                "given": "Qiaodong",
                "family": "Cui",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "University of California"
                    }
                ]
            },
            {
                "given": "Pradeep",
                "family": "Sen",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of California"
                    }
                ]
            },
            {
                "given": "Theodore",
                "family": "Kim",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Pixar Animation Studios"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Scale-aware black-and-white abstraction of 3D shapes",
        "DOI": "10.1145/3197517.3201372",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on the authors website or project page (zip file, direct download...), on github, gitlab or other code platform",
        "Main languages": "C/C++",
        "How long did take for you to evaluate the code this paper (if any)?": 3,
        "Build info / instructions": "README",
        "arXiv (page URL)": "",
        "code URL": "https://github.com/unlin/libbwabstraction",
        "code URL  2": "",
        "PDF URL": "https://cgv.cs.nthu.edu.tw/download/file?guid=dec5cad6-8f0c-11e8-a908-0011328fa92e",
        "License type": "unspecified",
        "Build mechanism": "CMakeLists, IDE Project (VS,..)",
        "Mandatory Software dependencies": "Open-source libraries",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 4,
        "Feedbacks [easy to configure/build (5=easy)]": 4,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": 5,
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 5,
        "Feedbacks [Interface user-friendly (5=easy)]": 5,
        "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions",
        "Authors": "Academia",
        "ACM 1": "Computer graphics",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Mac OS",
        "General comments": "All decencies were available on brew except opengm (installed from the github master, I needed to disable the test examples because of boost issues, fine for the library). I cannot run the CLI because no camera/obj examples were provided but the Qt GUI works fine (minor edit of the qtgui.pro to detect the libbwabstraction).",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 1,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "Boost/ CGAL / Eigen/GLEW/GLFW/glm/OpenCV/opengm/OpenMesh/libgmp/libmpfr/cxxopts",
        "Project URL": "https://cgv.cs.nthu.edu.tw/projects/Shape_Analysis/BW_Abstraction",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Rendering",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 4,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 3,
        "Documentation score": 1,
        "Paper authors": [
            {
                "given": "You-En",
                "family": "Lin",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "National Tsing Hua University"
                    }
                ]
            },
            {
                "given": "Yong-Liang",
                "family": "Yang",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of Bath"
                    }
                ]
            },
            {
                "given": "Hung-Kuo",
                "family": "Chu",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "National Tsing Hua University"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Scanner: efficient video analysis at scale",
        "DOI": "10.1145/3197517.3201394",
        "PDF availability (beside dl.acm)": "On an open archive arXiv or similar open archive, On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on github, gitlab or other code platform",
        "Main languages": "C/C++, Python",
        "How long did take for you to evaluate the code this paper (if any)?": 5,
        "Build info / instructions": "README, LICENSE or explicit license (e.g. in the readme / headers), CONTRIBUTING or explicitly mentions how to contribute to the code, AUTHORS or explicitly mentioned",
        "arXiv (page URL)": "https://arxiv.org/abs/1805.07339",
        "code URL": "https://github.com/scanner-research/scanner",
        "code URL  2": "",
        "PDF URL": "http://graphics.stanford.edu/papers/scanner/poms18_scanner.pdf",
        "License type": "Apache License 2.0",
        "Build mechanism": "Makefile, CMakeLists, Not applicable (python, Matlab..)",
        "Mandatory Software dependencies": "Open-source libraries, Closed source (e.g. commercial) software or libraries free for research purposes",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 5,
        "Feedbacks [easy to configure/build (5=easy)]": "N/A",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "N/A",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "Cannot answer",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 5,
        "Feedbacks [Interface user-friendly (5=easy)]": 5,
        "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions, API documentation",
        "Authors": "Academia",
        "ACM 1": "Image manipulation",
        "ACM 2": "Graphics systems and interfaces",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Linux",
        "General comments": "I used the docker setting, it worked well (cpu). Was not able to install from source because of a problem with hwang (installed by deps.sh although optional dependency). A jupyter notebook extremely detailed is provided and helps understand the code, so it would be very easy to adapt. I did not reproduce all the results in the paper (grayscale conversion worked well with docker).",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 16,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "tensorflow/caffe/opencv/eigen3/ffmpeg/boost/openpose/halide/storehouse/hwang/pybind/grpc/protobuf/libpqxx/cuda/cudnn",
        "Project URL": "http://scanner.run/",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Image",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 4,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 1,
        "Documentation score": 1,
        "Paper authors": [
            {
                "given": "Alex",
                "family": "Poms",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Carnegie Mellon University"
                    }
                ]
            },
            {
                "given": "Will",
                "family": "Crichton",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Stanford University"
                    }
                ]
            },
            {
                "given": "Pat",
                "family": "Hanrahan",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Stanford University"
                    }
                ]
            },
            {
                "given": "Kayvon",
                "family": "Fatahalian",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Stanford University"
                    }
                ]
            }
        ],
        "Altmetric score": 4,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=4&types=tttttttt",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=42155836"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Scene-aware audio for 360\u00b0 videos",
        "DOI": "10.1145/3197517.3201391",
        "PDF availability (beside dl.acm)": "On an open archive arXiv or similar open archive, On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "https://arxiv.org/abs/1805.04792",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://www.cs.columbia.edu/cg/360audio/scene-aware-360-audio-siggraph-2018-Li-et-al.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Physical simulation",
        "ACM 2": "Mixed / augmented reality",
        "ACM 3": "Virtual reality",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 8,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "http://www.cs.columbia.edu/cg/360audio/",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Animation",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Dingzeyu",
                "family": "Li",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Columbia University"
                    }
                ]
            },
            {
                "given": "Timothy R.",
                "family": "Langlois",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Adobe Research"
                    }
                ]
            },
            {
                "given": "Changxi",
                "family": "Zheng",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Columbia University"
                    }
                ]
            }
        ],
        "Altmetric score": 2,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=2&types=tttttttt",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=41452964"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Schr\u00f6dinger's Smoke",
        "DOI": "10.1145/2897824.2925868",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on the authors website or project page (zip file, direct download...)",
        "Main languages": "Matlab / Mathematica / .., Other",
        "How long did take for you to evaluate the code this paper (if any)?": 3,
        "Build info / instructions": "README",
        "arXiv (page URL)": "",
        "code URL": "http://page.math.tu-berlin.de/~chern/projects/SchrodingersSmoke/SchrodingersSmokeCode.zip",
        "code URL  2": "",
        "PDF URL": "http://multires.caltech.edu/pubs/SchrodingersSmoke.pdf",
        "License type": "unspecified",
        "Build mechanism": "Not applicable (python, Matlab..)",
        "Mandatory Software dependencies": "Closed source (e.g. commercial) software or libraries free for research purposes",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "N/A",
        "Feedbacks [easy to configure/build (5=easy)]": "N/A",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "N/A",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 4,
        "Feedbacks [Interface user-friendly (5=easy)]": 5,
        "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Physics",
        "ACM 2": "Partial differential equations",
        "ACM 3": "Physical simulation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Linux",
        "General comments": "The matlab scripts work out of the box. The houdini file for each figure of the paper are provided. In my houdini only the particle view was possible so the rendering was not as nice as the ones in the paper but the geometry was consistent.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 21,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "matlab/houdini",
        "Project URL": "http://page.math.tu-berlin.de/~chern/projects/SchrodingersSmoke/",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2016,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Animation",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 5,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 1,
        "Documentation score": 1,
        "Paper authors": [
            {
                "given": "Albert",
                "family": "Chern",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Caltech"
                    }
                ]
            },
            {
                "given": "Felix",
                "family": "Kn\u00f6ppel",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "TU Berlin"
                    }
                ]
            },
            {
                "given": "Ulrich",
                "family": "Pinkall",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "TU Berlin"
                    }
                ]
            },
            {
                "given": "Peter",
                "family": "Schr\u00f6der",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Caltech"
                    }
                ]
            },
            {
                "given": "Steffen",
                "family": "Wei\u00dfmann",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Google Inc."
                    }
                ]
            }
        ],
        "Altmetric score": 10,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=10&types=mmmmtttt",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=10137977"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Seamless Visual Sharing with Color Vision Deficiencies",
        "DOI": "10.1145/2897824.2925878",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution, Other (web, research gate, semantic scholar,...)",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://www.cse.cuhk.edu.hk/~ttwong/papers/colorblind/colorblind_lowres.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "3D imaging",
        "ACM 2": "Image processing",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 9,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "https://www.cse.cuhk.edu.hk/~ttwong/papers/colorblind/colorblind.html",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2016,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Virtual Reality",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Wuyao",
                "family": "Shen",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "The Chinese University of Hong Kong"
                    }
                ]
            },
            {
                "given": "Xiangyu",
                "family": "Mao",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "The Chinese University of Hong Kong"
                    }
                ]
            },
            {
                "given": "Xinghong",
                "family": "Hu",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "The Chinese University of Hong Kong"
                    }
                ]
            },
            {
                "given": "Tien-Tsin",
                "family": "Wong",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "The Chinese University of Hong Kong"
                    }
                ]
            }
        ],
        "Altmetric score": 2.35,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=3&types=tttttttt",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=10255711"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Self-Refining Games using Player Analytics",
        "DOI": "10.1145/2601097.2601196",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://graphics.cs.cmu.edu/projects/self-refining-games/stanton2014_self_refining_games.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Animation",
        "ACM 2": "Stochastic games",
        "ACM 3": "Algorithmic game theory and mechanism design",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 17,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "http://graphics.cs.cmu.edu/projects/self-refining-games/",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Animation",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Matt",
                "family": "Stanton",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Ben",
                "family": "Humberston",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Brandon",
                "family": "Kase",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "James F.",
                "family": "O'Brien",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Kayvon",
                "family": "Fatahalian",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Adrien",
                "family": "Treuille",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 3,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=3&types=aaaaaaaa",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=3977811"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Semantic soft segmentation",
        "DOI": "10.1145/3197517.3201275",
        "PDF availability (beside dl.acm)": "On the author(s) repository (dropbox, github, drive, iCloud)",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on github, gitlab or other code platform",
        "Main languages": "Python, Matlab / Mathematica / ..",
        "How long did take for you to evaluate the code this paper (if any)?": 10,
        "Build info / instructions": "README, LICENSE or explicit license (e.g. in the readme / headers)",
        "arXiv (page URL)": "",
        "code URL": "https://github.com/yaksoy/SemanticSoftSegmentation",
        "code URL  2": "https://github.com/iyah4888/SIGGRAPH18SSS",
        "PDF URL": "http://yaksoy.github.io/papers/TOG18-sss.pdf",
        "License type": "custom",
        "Build mechanism": "Other script, Not applicable (python, Matlab..)",
        "Mandatory Software dependencies": "Open-source libraries",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 2,
        "Feedbacks [easy to configure/build (5=easy)]": 2,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "N/A",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "Yes",
        "Available data (provided or url / ref)": "Pre-trained models / Hardcoded data / lookup tables /...",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 5,
        "Feedbacks [Interface user-friendly (5=easy)]": 1,
        "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions, API documentation, Technical documentation (comments-doxygen...)",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Image segmentation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": 5,
        "OS of the test": "Windows",
        "General comments": "The code is split in two parts, in two different projects. The second project is trivial to run in matlab without hassle, takes an input image that consists in standard RGB colors for the first half, and the second half should contain features. \nThe first project of the code, which is supposed to generate features is much more difficult to run. It depends on TensorFlow 1.4 (while the readme indicates TensorFlow >= 1.4, it in fact only works with TensorFlow = 1.4). This old TensorFlow does not support Python 3.7, so I had to remove my 3.7 to install a 3.6 (which cannot be installed via Anaconda -- Anaconda spent an entire night trying to downgrade 3.7 to 3.6 but this didn't work). Finally, when the code runs, it outputs a matlab file which contains 128 features. This file should be processed with preprocessFeatures, along with the original image, in the second project.\nThe process is not documented, but can be understood from the context. In general, while it was relatively painful to run, results seem to be reproducible. It would however have been much less painful if I had a Python 3.6 already installed.\nThe lower replicability score is explained by the fact no code is provided for training and only the pre-trained model is given.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 24,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "ImageGraphs / TensorFlow",
        "Project URL": "http://yaksoy.github.io/sss/",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Image",
        "Deep learning": "True",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 4,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 2,
        "Paper authors": [
            {
                "given": "Ya\u011fiz",
                "family": "Aksoy",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "MIT CSAIL and ETH Z\u00fcrich, Switzerland"
                    }
                ]
            },
            {
                "given": "Tae-Hyun",
                "family": "Oh",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "MIT CSAIL"
                    }
                ]
            },
            {
                "given": "Sylvain",
                "family": "Paris",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Adobe Research"
                    }
                ]
            },
            {
                "given": "Marc",
                "family": "Pollefeys",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "ETH Z\u00fcrich, Switzerland and Microsoft"
                    }
                ]
            },
            {
                "given": "Wojciech",
                "family": "Matusik",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "MIT CSAIL"
                    }
                ]
            }
        ],
        "Altmetric score": 17.16,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=18&types=mmmbbbbb",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=46823326"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Sensitivity-optimized Rigging for Example-based Real-time Clothing Synthesis",
        "DOI": "10.1145/2601097.2601136",
        "PDF availability (beside dl.acm)": "Other (web, research gate, semantic scholar,...)",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://www.researchgate.net/profile/Xiaogang_Jin2/publication/275482953_Sensitivity-optimized_Rigging_for_Example-based_Real-Time_Clothing_Synthesis/links/555957a808ae980ca6106a04/Sensitivity-optimized-Rigging-for-Example-based-Real-Time-Clothing-Synthesis.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Animation",
        "ACM 2": "Simulation by animation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 35,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "https://www.autodeskresearch.com/publications/realtimeclothing",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Animation",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 3,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Weiwei",
                "family": "Xu",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Nobuyuki",
                "family": "Umentani",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Qianwen",
                "family": "Chao",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Jie",
                "family": "Mao",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Xiaogang",
                "family": "Jin",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Xin",
                "family": "Tong",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Shadow Theatre: Discovering Human Motion from a Sequence of Silhouettes",
        "DOI": "10.1145/2897824.2925869",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No but pseudo-code in the PDF",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://mrl.snu.ac.kr/research/ProjectShadowTheatre/SIGGRAPH_Paper.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Motion capture",
        "ACM 2": "Motion processing",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 11,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "http://mrl.snu.ac.kr/research/ProjectShadowTheatre/ShadowTheatre.htm",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2016,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Fabrication",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": 1,
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Jungdam",
                "family": "Won",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Seoul National University"
                    }
                ]
            },
            {
                "given": "Jehee",
                "family": "Lee",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Seoul National University"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Shape from Metric",
        "DOI": "10.1145/3197517.3201276",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on the authors website or project page (zip file, direct download...)",
        "Main languages": "Python, Other",
        "How long did take for you to evaluate the code this paper (if any)?": 4,
        "Build info / instructions": "README",
        "arXiv (page URL)": "",
        "code URL": "https://page.math.tu-berlin.de/~chern/projects/ShapeFromMetric/HoudiniImplementations.zip",
        "code URL  2": "",
        "PDF URL": "https://page.math.tu-berlin.de/~chern/projects/ShapeFromMetric/ShapeFromMetric.pdf",
        "License type": "unspecified",
        "Build mechanism": "Not applicable (python, Matlab..)",
        "Mandatory Software dependencies": "Closed source (e.g. commercial) software or libraries free for research purposes",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 3,
        "Feedbacks [easy to configure/build (5=easy)]": 3,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "N/A",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 1,
        "Feedbacks [Interface user-friendly (5=easy)]": 4,
        "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions",
        "Authors": "Academia",
        "ACM 1": "Partial differential equations",
        "ACM 2": "Differential calculus",
        "ACM 3": "Algebraic topology",
        "ACM 4": "Physical simulation",
        "ACM 5": "Mesh models",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Mac OS",
        "General comments": "Plugin for Houdini. Code not explicitly given but in the Houdini graph nodes and the digital asset.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 9,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "Houdini",
        "Project URL": "https://page.math.tu-berlin.de/~chern/projects/ShapeFromMetric/",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Geometry",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 4,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 3,
        "Documentation score": 1,
        "Paper authors": [
            {
                "given": "Albert",
                "family": "Chern",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "TU Berlin"
                    }
                ]
            },
            {
                "given": "Felix",
                "family": "Kn\u00f6ppel",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "TU Berlin"
                    }
                ]
            },
            {
                "given": "Ulrich",
                "family": "Pinkall",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "TU Berlin"
                    }
                ]
            },
            {
                "given": "Peter",
                "family": "Schr\u00f6der",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Caltech"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Shape Representation by Zippables",
        "DOI": "10.1145/3197517.3201347",
        "PDF availability (beside dl.acm)": "On an open archive arXiv or similar open archive, On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "https://arxiv.org/abs/1711.02450",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://igl.ethz.ch/projects/zippables/zippables-2018.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Shape modeling",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 4,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "https://igl.ethz.ch/projects/zippables/",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Fabrication",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": true,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 1,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Christian",
                "family": "Sch\u00fcller",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "ETH Zurich, Switzerland"
                    }
                ]
            },
            {
                "given": "Roi",
                "family": "Poranne",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "ETH Zurich, Switzerland"
                    }
                ]
            },
            {
                "given": "Olga",
                "family": "Sorkine-Hornung",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "ETH Zurich, Switzerland"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Shape2Pose: Human-Centric Shape Analysis",
        "DOI": "10.1145/2601097.2601117",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "internet archive/wayback machine",
        "Main languages": "C/C++, Python",
        "How long did take for you to evaluate the code this paper (if any)?": 5,
        "Build info / instructions": "README, AUTHORS or explicitly mentioned",
        "arXiv (page URL)": "",
        "code URL": "https://web.archive.org/web/20160602231129/http://www.cs.princeton.edu/~vk/projects/Shape2Pose/doc_code.php",
        "code URL  2": "",
        "PDF URL": "http://www.vovakim.com/papers/14_SIGGRAPH_Shape2Pose.pdf",
        "License type": "unspecified",
        "Build mechanism": "Makefile",
        "Mandatory Software dependencies": "None",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "N/A",
        "Feedbacks [easy to configure/build (5=easy)]": 5,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "N/A",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "Yes",
        "Available data (provided or url / ref)": "Training data",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "N/A",
        "Feedbacks [Interface user-friendly (5=easy)]": "N/A",
        "Documentation": "API documentation",
        "Authors": "Academia",
        "ACM 1": "Randomness, geometry and discrete structures",
        "ACM 2": "Shape modeling",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Linux",
        "General comments": "Could not fix what appear to be a scheduling bug: command line ./train.py small exp1_small examples/train_small.txt yielded \"[WARNING] Error executing: TempDir/exp1_small/points_even_1000/607.sh.\" due to a false assertion in ScheduleJob",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 89,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "https://gfx.cs.princeton.edu/pubs/Kim_2014_SHS/index.php",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Geometry",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "N/A",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 1,
        "Documentation score": 1,
        "Paper authors": [
            {
                "given": "Vladimir G.",
                "family": "Kim",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Siddhartha",
                "family": "Chaudhuri",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Leonidas",
                "family": "Guibas",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Thomas",
                "family": "Funkhouser",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Simulating and compensating changes in appearance between day and night vision",
        "DOI": "10.1145/2601097.2601150",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://luminance-retargeting.bangor.ac.uk/wanat14lum_retargeting.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Rendering",
        "ACM 2": "Image manipulation",
        "ACM 3": "Computer vision",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 42,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Image",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Robert",
                "family": "Wanat",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Rafa\u0142 K.",
                "family": "Mantiuk",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 6,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=6&types=aaaaaaaa",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=5415974"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Simulating articulated subspace self-contact",
        "DOI": "10.1145/2601097.2601181",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://www.tkim.graphics/SASS/TengOtaduyKim2014.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Geometric topology",
        "ACM 2": "Physical simulation",
        "ACM 3": "Shape modeling",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 29,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "http://www.tkim.graphics/SASS/",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2014,
        "Misc. comment": "Many data and results are given in the project page.",
        "Software Type": "",
        "Topic": "Animation",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 3,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Yun",
                "family": "Teng",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Miguel A.",
                "family": "Otaduy",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Theodore",
                "family": "Kim",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Single-image SVBRDF capture with a rendering-aware deep network",
        "DOI": "10.1145/3197517.3201378",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://www-sop.inria.fr/reves/Basilic/2018/DADDB18/Deep%20Material%20Acquisition%20Authors_version.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Reflectance modeling",
        "ACM 2": "Image processing",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 34,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "https://www-sop.inria.fr/reves/Basilic/2018/DADDB18/",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Rendering",
        "Deep learning": "True",
        "hasThumbnail": true,
        "Open access": true,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 3,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Valentin",
                "family": "Deschaintre",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Universit\u00e9 C\u00f4te d'Azur"
                    }
                ]
            },
            {
                "given": "Miika",
                "family": "Aittala",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "MIT CSAIL"
                    }
                ]
            },
            {
                "given": "Fredo",
                "family": "Durand",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Universit\u00e9 C\u00f4te d'Azur"
                    }
                ]
            },
            {
                "given": "George",
                "family": "Drettakis",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Universit\u00e9 C\u00f4te d'Azur"
                    }
                ]
            },
            {
                "given": "Adrien",
                "family": "Bousseau",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Universit\u00e9 C\u00f4te d'Azur"
                    }
                ]
            }
        ],
        "Altmetric score": 2.85,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=3&types=tttttttt",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=50139222"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Single-photon 3D imaging with deep sensor fusion",
        "DOI": "10.1145/3197517.3201316",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on the authors website or project page (zip file, direct download...)",
        "Main languages": "Python, Matlab / Mathematica / ..",
        "How long did take for you to evaluate the code this paper (if any)?": 10,
        "Build info / instructions": "README",
        "arXiv (page URL)": "",
        "code URL": "https://drive.google.com/open?id=1Yv6s3pD7g0pBnE9DVO_DkbQm-X_W8K6Z",
        "code URL  2": "",
        "PDF URL": "http://www.computationalimaging.org/wp-content/uploads/2018/05/lindell_2018_siggraph.pdf",
        "License type": "unspecified",
        "Build mechanism": "Other script, Not applicable (python, Matlab..)",
        "Mandatory Software dependencies": "Open-source libraries, Paywall Closed source software or libraries",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 1,
        "Feedbacks [easy to configure/build (5=easy)]": 1,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": 1,
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "Yes",
        "Available data (provided or url / ref)": "Training data",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 1,
        "Feedbacks [Interface user-friendly (5=easy)]": 1,
        "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions",
        "Authors": "Academia",
        "ACM 1": "Computational photography",
        "ACM 2": "3D imaging",
        "ACM 3": "Neural networks",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Linux",
        "General comments": "We tried and failed to use the provided code three different time on linux and Mac OS, and could not generate the Training Data.\n\nTraining data generation requires many steps to convert the NYU dataset to simulated SPAD measurements. After downloading (see provided script download_nyu_dataset.bash) and inflating the NYUV2 dataset, I have done the following actions:\n 1. I compiled Opencv2.4 and libann. I modified simulated_data/intrinsic_texture/mex/compile.m with the installation paths of these library. The compilation of the mex files ran smoothly\n 2. I compiled simulated_data/nyu_utils/compile.m. I didn't have libfreenect in hand, so I commented the two first lines of the script. \n 3.In order to run the simulated_data/ConvertRGBD.m script, I had to move the opencv libraries to simulated_data, so matlab can dynamically link them (there is probably a better way to link, but I couldn't find it).\nMatlab finds the library, but triggers the following error: \nERROR: MATLAB:unexpectedCPPexception\nUnexpected Standard exception from MEX file.\nWhat() is:/mathworks/devel/bat/B3p1/build/3p/sources/OpenCV/modules/core/src/matrix.cpp:1319: error: (-213) Unknown/unsupported array type in function getMat_\n\nConsidering the time required to download the data and compile the dependencies, I stopped after 10 hours of experiments.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 24,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "matlab/ torch / scikit_image / scipy/tqdm / numpy / skimage /tensorboardX / torchvision / opencv / libann",
        "Project URL": "http://www.computationalimaging.org/publications/single-photon-3d-imaging-with-deep-sensor-fusion/",
        "Did I manage to perform a complete test (deps/build)?": "No due to technical issue",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Image",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 1,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 3,
        "Documentation score": 1,
        "Paper authors": [
            {
                "given": "David B.",
                "family": "Lindell",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Stanford University"
                    }
                ]
            },
            {
                "given": "Matthew",
                "family": "O'Toole",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Stanford University"
                    }
                ]
            },
            {
                "given": "Gordon",
                "family": "Wetzstein",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Stanford University"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Singularity-constrained octahedral fields for hexahedral meshing",
        "DOI": "10.1145/3197517.3201344",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No but pseudo-code in the PDF",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://people.csail.mit.edu/jsolomon/assets/singularity_constrained_octahedral.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Mesh models",
        "ACM 2": "Mesh geometry models",
        "ACM 3": "Volumetric models",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 17,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Geometry",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": 2,
        "Reviewer": 3,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Heng",
                "family": "Liu",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "RWTH Aachen University"
                    }
                ]
            },
            {
                "given": "Paul",
                "family": "Zhang",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "MIT"
                    }
                ]
            },
            {
                "given": "Edward",
                "family": "Chien",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "MIT"
                    }
                ]
            },
            {
                "given": "Justin",
                "family": "Solomon",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "MIT"
                    }
                ]
            },
            {
                "given": "David",
                "family": "Bommes",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "RWTH Aachen University"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Skaterbots: Optimization-based Design and Motion Synthesis for Robotic Creatures with Legs and Wheels",
        "DOI": "10.1145/3197517.3201368",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://crl.ethz.ch/papers/Skaterbots.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Physical simulation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 15,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "https://www.ri.cmu.edu/publications/skaterbots-optimization-based-design-and-motion-synthesis-for-robotic-creatures-with-legs-and-wheels/",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Animation",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": true,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Moritz",
                "family": "Geilinger",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "ETH Zurich"
                    }
                ]
            },
            {
                "given": "Roi",
                "family": "Poranne",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "ETH Zurich"
                    }
                ]
            },
            {
                "given": "Ruta",
                "family": "Desai",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Carnegie Mellon University"
                    }
                ]
            },
            {
                "given": "Bernhard",
                "family": "Thomaszewski",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Universit\u00e9 de Montr\u00e9al"
                    }
                ]
            },
            {
                "given": "Stelian",
                "family": "Coros",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "ETH Zurich"
                    }
                ]
            }
        ],
        "Altmetric score": 5.08,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=6&types=bbbbbbbb",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=55295878"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "SketchiMo: Sketch-based Motion Editing for Articulated Characters",
        "DOI": "10.1145/2897824.2925970",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution, Other (web, research gate, semantic scholar,...)",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://vml.kaist.ac.kr/assets/Contents/Publications/International/2016ByungkukChoi_TOG/2016ByungkukChoi_TOG.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Motion processing",
        "ACM 2": "Graphical user interfaces",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 16,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "https://vml.kaist.ac.kr/main/international/individual/2",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2016,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Animation",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Byungkuk",
                "family": "Choi",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "KAIST"
                    }
                ]
            },
            {
                "given": "Roger Blanco",
                "family": "i Ribera",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "KAIST"
                    }
                ]
            },
            {
                "given": "J. P.",
                "family": "Lewis",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Weta Digital"
                    }
                ]
            },
            {
                "given": "Yeongho",
                "family": "Seol",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Weta Digital"
                    }
                ]
            },
            {
                "given": "Seokpyo",
                "family": "Hong",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "KAIST"
                    }
                ]
            },
            {
                "given": "Haegwang",
                "family": "Eom",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "KAIST"
                    }
                ]
            },
            {
                "given": "Sunjin",
                "family": "Jung",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "KAIST"
                    }
                ]
            },
            {
                "given": "Junyong",
                "family": "Noh",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "KAIST"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Sky is Not the Limit: Semantic-Aware Sky Replacement",
        "DOI": "10.1145/2897824.2925942",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on github, gitlab or other code platform",
        "Main languages": "Matlab / Mathematica / ..",
        "How long did take for you to evaluate the code this paper (if any)?": 5,
        "Build info / instructions": "README",
        "arXiv (page URL)": "",
        "code URL": "https://github.com/SaumyaRawat/Semantic-Aware-Colour-Transfer",
        "code URL  2": "",
        "PDF URL": "http://vllab.ucmerced.edu/ytsai/SIGGRAPH16/siggraph16_sky_edit_low_res.pdf",
        "License type": "unspecified",
        "Build mechanism": "Not applicable (python, Matlab..)",
        "Mandatory Software dependencies": "Closed source (e.g. commercial) software or libraries free for research purposes, Paywall Closed source software or libraries",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 1,
        "Feedbacks [easy to configure/build (5=easy)]": 5,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": 4,
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "Yes",
        "Available data (provided or url / ref)": "evaluation dataset",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 2,
        "Feedbacks [Interface user-friendly (5=easy)]": 5,
        "Documentation": "None",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Computational photography",
        "ACM 2": "Image processing",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": 5,
        "OS of the test": "Linux",
        "General comments": "Beside the compilation of matcaffe which took me a lot of time, I had to remove the absolute paths in custom_toolboxes/scene_parsing_model/scene_parse.m. The interactive selection of the images was not working, thus I removed the call to select_image in replace_sky.m, and selected the image programatically (automatically select the first image).\n\nThe code needs a mask and a parsing image for each RGB image took as input. No code is provided to generate those, which limits its use in other contexts.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 31,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "Matlab, caffe",
        "Project URL": "https://sites.google.com/site/yihsuantsai/research/siggraph16-sky",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2016,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Image",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 5,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 4,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Yi-Hsuan",
                "family": "Tsai",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "University of California, Merced"
                    }
                ]
            },
            {
                "given": "Xiaohui",
                "family": "Shen",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Adobe Research"
                    }
                ]
            },
            {
                "given": "Zhe",
                "family": "Lin",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Adobe Research"
                    }
                ]
            },
            {
                "given": "Kalyan",
                "family": "Sunkavalli",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Adobe Research"
                    }
                ]
            },
            {
                "given": "Ming-Hsuan",
                "family": "Yang",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of California, Merced"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Slang: language mechanisms for extensible real-time shading systems",
        "DOI": "10.1145/3197517.3201380",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on github, gitlab or other code platform",
        "Main languages": "C/C++",
        "How long did take for you to evaluate the code this paper (if any)?": 10,
        "Build info / instructions": "README, LICENSE or explicit license (e.g. in the readme / headers), CONTRIBUTING or explicitly mentions how to contribute to the code",
        "arXiv (page URL)": "",
        "code URL": "https://github.com/shader-slang/slang",
        "code URL  2": "",
        "PDF URL": "http://graphics.cs.cmu.edu/projects/slang/he18_slang.pdf",
        "License type": "MIT",
        "Build mechanism": "Makefile, IDE Project (VS,..), premake",
        "Mandatory Software dependencies": "None",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 5,
        "Feedbacks [easy to configure/build (5=easy)]": 5,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": 1,
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 3,
        "Feedbacks [Interface user-friendly (5=easy)]": "N/A",
        "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions, API documentation, Technical documentation (comments-doxygen...)",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Graphics systems and interfaces",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Windows",
        "General comments": "Overall I managed to build the project with VS2017 very easily, and ran the model-viewer demo within minutes. However, I did not manage to run the simpler cpu-hello-world demo due to a couple of bugs. In Line 217 of slang-win-visual-studio-util.cpp, I had to add a condition : if (lines.getCount() && lines[0].size()!=0) instead of if (lines.getCount()) because my Visual Studio vswhere gives a blank line when the requested version is not found (instead of no line at all), which was messing up with the VS version selector afterwards. Then, after fixing this issue, since the program was still looking for the 'Generic C/C++ Compiler' (and did not consider my VS2017 to be generic enough ? though it found it), I had to force Visual Studio to be passed through in line 113 of the main.cpp, using spSetPassThrough(slangRequest, SlangPassThrough(5));\nUltimately, after these fixes, I got a link error : \"Visual Studio 15.0: shader.slang (0): link error LNK1107:  invalid or corrupt file: cannot read at 0x16F\" when running the code, which I cannot debug much further.\nIn short, it nicely reproduced results on the GPU, but I could not run the code on the CPU.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 3,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "http://graphics.cs.cmu.edu/projects/slang/",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Rendering",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 3,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 2,
        "Paper authors": [
            {
                "given": "Yong",
                "family": "He",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Carnegie Mellon University"
                    }
                ]
            },
            {
                "given": "Kayvon",
                "family": "Fatahalian",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Stanford University"
                    }
                ]
            },
            {
                "given": "Tim",
                "family": "Foley",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "NVIDIA"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Smoke Rings from Smoke",
        "DOI": "10.1145/2601097.2601171",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on dl.acm",
        "Main languages": "Matlab / Mathematica / ..",
        "How long did take for you to evaluate the code this paper (if any)?": 3,
        "Build info / instructions": "README, AUTHORS or explicitly mentioned",
        "arXiv (page URL)": "",
        "code URL": "https://dl.acm.org/ft_gateway.cfm?id=2601171&type=zip&path=%2F2610000%2F2601171%2Fsupp%2Fa140%2Dweismann%2Ezip&supp=1&dwn=1",
        "code URL  2": "",
        "PDF URL": "http://multires.caltech.edu/pubs/Smoke.pdf",
        "License type": "This implementation is provided by Albert Chern and comes with no warranty of fitness or performance either explicit or implied. Use for commercial purposes is explicitly prohibited without prior permission from the authors.",
        "Build mechanism": "Not applicable (python, Matlab..)",
        "Mandatory Software dependencies": "Closed source (e.g. commercial) software or libraries free for research purposes",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 5,
        "Feedbacks [easy to configure/build (5=easy)]": 5,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "N/A",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 5,
        "Feedbacks [Interface user-friendly (5=easy)]": 5,
        "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions",
        "Authors": "Academia",
        "ACM 1": "Animation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": 5,
        "OS of the test": "Linux",
        "General comments": "Code works out of the box. Readme clearly states it misses some features and is less efficient. Adaptation to octave is very easy. It only requires commenting out two lines (lines 23-24 in PlotFilaments.m: l23: camproj perspective; l24 cameratoolbar).",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 17,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "matlab",
        "Project URL": "http://multires.caltech.edu/pubs/SRfS/",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Animation",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 4,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 1,
        "Documentation score": 1,
        "Paper authors": [
            {
                "given": "Steffen",
                "family": "Wei\u00dfmann",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Ulrich",
                "family": "Pinkall",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Peter",
                "family": "Schr\u00f6der",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Soli: Ubiquitous Gesture Sensing with Millimeter Wave Radar",
        "DOI": "10.1145/2897824.2925953",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://www.ivanpoupyrev.com/wp-content/uploads/2017/01/siggraph_final.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Private Companies",
        "ACM 1": "Sensor devices and platforms",
        "ACM 2": "Gestural input",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 238,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "http://www.ivanpoupyrev.com/project/project-soli",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2016,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Virtual Reality",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": true,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Jaime",
                "family": "Lien",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Google ATAP"
                    }
                ]
            },
            {
                "given": "Nicholas",
                "family": "Gillian",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Google ATAP"
                    }
                ]
            },
            {
                "given": "M. Emre",
                "family": "Karagozler",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Google ATAP"
                    }
                ]
            },
            {
                "given": "Patrick",
                "family": "Amihood",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Google ATAP"
                    }
                ]
            },
            {
                "given": "Carsten",
                "family": "Schwesig",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Google ATAP"
                    }
                ]
            },
            {
                "given": "Erik",
                "family": "Olson",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Google ATAP"
                    }
                ]
            },
            {
                "given": "Hakim",
                "family": "Raja",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Google ATAP"
                    }
                ]
            },
            {
                "given": "Ivan",
                "family": "Poupyrev",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Google ATAP"
                    }
                ]
            }
        ],
        "Altmetric score": 19,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=19&types=attttttf",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=9844487"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Space-Time Editing of Elastic Motion through Material Optimization and Reduction",
        "DOI": "10.1145/2601097.2601217",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://www.geometry.caltech.edu/pubs/LHGJBD14.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Animation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 68,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Animation",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 3,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Siwang",
                "family": "Li",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Jin",
                "family": "Huang",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Fernando",
                "family": "de Goes",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Xiaogang",
                "family": "Jin",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Hujun",
                "family": "Bao",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Mathieu",
                "family": "Desbrun",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 6.25,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=7&types=aaaaavvv",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=14248516"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Space-time tomography for continuously deforming objects",
        "DOI": "10.1145/3197517.3201298",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on github, gitlab or other code platform",
        "Main languages": "C/C++",
        "How long did take for you to evaluate the code this paper (if any)?": 6,
        "Build info / instructions": "README",
        "arXiv (page URL)": "",
        "code URL": "https://github.com/gmzang/SpaceTimeTomography",
        "code URL  2": "",
        "PDF URL": "https://vccimaging.org/Publications/Zang2018Space-time/Zang2018Space-time.pdf",
        "License type": "Creative Commons",
        "Build mechanism": "None",
        "Mandatory Software dependencies": "Open-source libraries",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 4,
        "Feedbacks [easy to configure/build (5=easy)]": 1,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": 1,
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "N/A",
        "Feedbacks [Interface user-friendly (5=easy)]": "N/A",
        "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions",
        "Authors": "Academia",
        "ACM 1": "Computer Vision",
        "ACM 2": "Computer Graphics",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Windows",
        "General comments": "There are multiple issues with the code. While no makefile is provided, it is relatively easy (though cumbersome because of several dependencies) to create a Visual Studio 2017 project. Not listed as a dependency is libtiff.\nIn main.cpp, due to issues with \"goto\", you need to move the declarations of data (line 142), proNo (line 148), scene (line 149), mainWindow (line 154) at the begining of the main. It should look like:\n\tVolumeData* data = new VolumeData;\n\tGLUTSceneContainer *mainWindow;\n\tint proNo;\n\tST_Tomography *scene;\naround line 49.\nIn ST_Tomography.cpp, strdup (line 188) should be replaced by _strdup because it is deprecated in Visual Studio 2017 (it produces a compilation error although the code is supposed to compile with Visual Studio 2015 and 2018 according to the Readme).\nBut then multiple files seems missing, and could either not be found on the internet (a \"linear_solver.h\" that contains a \"linear_solver\" namespace, a \"scope.h\" that includes a #define called \"utilities_scope_defines\", a file called \"image_blas.h\" that performs blas-like operations on images), or a generic and could be recoded (e.g., \"vec3.h\"). Similarly, \"str_format\" is not a standard function in Visual Studio, so I am not sure where it is supposed to come from.\nUltimately, I could not compile the code.\n\n--alternative test on linux--\nUnable to compile, had to create a CMakeLists (no build instruction), several bugfix needed: goto crosses initialization issues, includes missing (cstring) missing linear_solver.h file ...",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 9,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "argtable/eigen/cimg/glut/glew/libtiff",
        "Project URL": "https://vccimaging.org/Publications/Zang2018Space-time/",
        "Did I manage to perform a complete test (deps/build)?": "No due to technical issue",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Animation",
        "Deep learning": "True",
        "hasThumbnail": true,
        "Open access": true,
        "Feedbacks [could reproduce results (5=highly confident)]": 1,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 1,
        "Paper authors": [
            {
                "given": "Guangming",
                "family": "Zang",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "King Abdullah University of Science And Technology, Saudi Arabia"
                    }
                ]
            },
            {
                "given": "Ramzi",
                "family": "Idouchi",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "King Abdullah University of Science And Technology, Saudi Arabia"
                    }
                ]
            },
            {
                "given": "Ran",
                "family": "Tao",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "King Abdullah University of Science And Technology, Saudi Arabia"
                    }
                ]
            },
            {
                "given": "Gilles",
                "family": "Lubineau",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "King Abdullah University of Science And Technology, Saudi Arabia"
                    }
                ]
            },
            {
                "given": "Peter",
                "family": "Wonka",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "King Abdullah University of Science And Technology, Saudi Arabia"
                    }
                ]
            },
            {
                "given": "Wolfgang",
                "family": "Heidrich",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "King Abdullah University of Science And Technology, Saudi Arabia"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Spectral Style Transfer for Human Motion between Independent Actions",
        "DOI": "10.1145/2897824.2925955",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://geometry.cs.ucl.ac.uk/projects/2016/spectral-style-transfer/paper_docs/SpectralStyleTransfer.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Motion processing",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 35,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "https://geometry.cs.ucl.ac.uk/projects/2016/spectral-style-transfer/",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2016,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Animation",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": true,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "M. Ersin",
                "family": "Yumer",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Adobe Research"
                    }
                ]
            },
            {
                "given": "Niloy J.",
                "family": "Mitra",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University College London"
                    }
                ]
            }
        ],
        "Altmetric score": 0.25,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=1&types=tttttttt",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=10351149"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Spin-It: Optimizing Moment of Inertia for Spinnable Objects",
        "DOI": "10.1145/2601097.2601157",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No but pseudo-code in the PDF",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://igl.ethz.ch/projects/spin-it/SpinItPaper.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Geometric topology",
        "ACM 2": "Physical simulation",
        "ACM 3": "Shape modeling",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 144,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "https://igl.ethz.ch/projects/spin-it/",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2014,
        "Misc. comment": "Pseudo-code is given un supplementary material to evaluate mass properties of triangulated solid.",
        "Software Type": "",
        "Topic": "Fabrication",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": 2,
        "Reviewer": 3,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Moritz",
                "family": "B\u00e4cher",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Emily",
                "family": "Whiting",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Bernd",
                "family": "Bickel",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Olga",
                "family": "Sorkine-Hornung",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 5,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=5&types=aaattttt",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=2547181"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Stereo magnification: learning view synthesis using multiplane images",
        "DOI": "10.1145/3197517.3201323",
        "PDF availability (beside dl.acm)": "On an open archive arXiv or similar open archive, On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on github, gitlab or other code platform",
        "Main languages": "Python",
        "How long did take for you to evaluate the code this paper (if any)?": 4,
        "Build info / instructions": "README, LICENSE or explicit license (e.g. in the readme / headers), CONTRIBUTING or explicitly mentions how to contribute to the code",
        "arXiv (page URL)": "https://arxiv.org/abs/1805.09817",
        "code URL": "https://github.com/google/stereo-magnification",
        "code URL  2": "",
        "PDF URL": "https://people.eecs.berkeley.edu/~tinghuiz/papers/siggraph18_mpi_lowres.pdf",
        "License type": "Apache",
        "Build mechanism": "Not applicable (python, Matlab..)",
        "Mandatory Software dependencies": "Open-source libraries, Closed source (e.g. commercial) software or libraries free for research purposes",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 5,
        "Feedbacks [easy to configure/build (5=easy)]": 4,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": 5,
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "Yes",
        "Available data (provided or url / ref)": "Training data, Pre-trained models / Hardcoded data / lookup tables /...",
        "License for the data (if any)": "Data: Creative Commons Attribution 4.0 International License.",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 4,
        "Feedbacks [Interface user-friendly (5=easy)]": 5,
        "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions, API documentation, Technical documentation (comments-doxygen...)",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Computational photography",
        "ACM 2": "Neural networks",
        "ACM 3": "Image-based rendering",
        "ACM 4": "Virtual reality",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Linux",
        "General comments": "Needed to adapt a little to make it work with python3.6 and tensorflow (imports/print syntax corrections).",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 47,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "tensorflow",
        "Project URL": "https://people.eecs.berkeley.edu/~tinghuiz/projects/mpi/",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Image",
        "Deep learning": "True",
        "hasThumbnail": true,
        "Open access": true,
        "Feedbacks [could reproduce results (5=highly confident)]": 5,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 1,
        "Documentation score": 2,
        "Paper authors": [
            {
                "given": "Tinghui",
                "family": "Zhou",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "University of California"
                    }
                ]
            },
            {
                "given": "Richard",
                "family": "Tucker",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Google"
                    }
                ]
            },
            {
                "given": "John",
                "family": "Flynn",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Google"
                    }
                ]
            },
            {
                "given": "Graham",
                "family": "Fyffe",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Google"
                    }
                ]
            },
            {
                "given": "Noah",
                "family": "Snavely",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Google"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Stitch Meshing",
        "DOI": "10.1145/3197517.3201360",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on github, gitlab or other code platform",
        "Main languages": "C/C++",
        "How long did take for you to evaluate the code this paper (if any)?": 2,
        "Build info / instructions": "README, LICENSE or explicit license (e.g. in the readme / headers), AUTHORS or explicitly mentioned",
        "arXiv (page URL)": "",
        "code URL": "https://github.com/kuiwuchn/stitchMeshing",
        "code URL  2": "",
        "PDF URL": "http://www.cs.utah.edu/~kwu/stitchmeshing/stitch_meshing_final.pdf",
        "License type": "LGPL",
        "Build mechanism": "CMakeLists",
        "Mandatory Software dependencies": "Open-source libraries, Closed source (e.g. commercial) software or libraries free for research purposes",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 5,
        "Feedbacks [easy to configure/build (5=easy)]": 5,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": 5,
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "N/A",
        "Feedbacks [Interface user-friendly (5=easy)]": 5,
        "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions, Technical documentation (comments-doxygen...)",
        "Authors": "Academia",
        "ACM 1": "Mesh geometry models",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Windows",
        "General comments": "Very easy to build on Windows with VS2017, as most dependencies are shipped (except Gurobi, free for research purpose) and the CMakeList is well done. Trivial fix to the CMakeList : change gurobi75.lib to the latest version available (gurobi90.lib currently).\nThe software is also very nice and easy to play with. However, it only implements part (but most) of the paper (up to section 7 included ; no yarn generation).",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 10,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "Gurobi / nanogui / tbb / glfw / pcg32 / RPly",
        "Project URL": "http://www.cs.utah.edu/~kwu/stitchmodeling#stitchmeshing",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Fabrication",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 3,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 1,
        "Paper authors": [
            {
                "given": "Kui",
                "family": "Wu",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "University of Utah"
                    }
                ]
            },
            {
                "given": "Xifeng",
                "family": "Gao",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "New York University"
                    }
                ]
            },
            {
                "given": "Zachary",
                "family": "Ferguson",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "New York University"
                    }
                ]
            },
            {
                "given": "Daniele",
                "family": "Panozzo",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "New York University"
                    }
                ]
            },
            {
                "given": "Cem",
                "family": "Yuksel",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of Utah"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "StrokeAggregator: consolidating raw sketches into artist-intended curve drawings",
        "DOI": "10.1145/3197517.3201314",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution, Other (web, research gate, semantic scholar,...)",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on the authors website or project page (zip file, direct download...)",
        "Main languages": "Python, Cannot answer",
        "How long did take for you to evaluate the code this paper (if any)?": 3,
        "Build info / instructions": "README, LICENSE or explicit license (e.g. in the readme / headers)",
        "arXiv (page URL)": "",
        "code URL": "https://www.cs.ubc.ca/labs/imager/tr/2018/StrokeAggregator/strokeaggregator_binary.zip",
        "code URL  2": "",
        "PDF URL": "https://www.cs.ubc.ca/labs/imager/tr/2018/StrokeAggregator/StrokeAggregator_authorversion.pdf",
        "License type": "University of British Columbia Evaluation Software License",
        "Build mechanism": "Not applicable (python, Matlab..)",
        "Mandatory Software dependencies": "Closed source (e.g. commercial) software or libraries free for research purposes",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 3,
        "Feedbacks [easy to configure/build (5=easy)]": 5,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "N/A",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 5,
        "Feedbacks [Interface user-friendly (5=easy)]": 5,
        "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions",
        "Authors": "Academia",
        "ACM 1": "Image manipulation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Windows",
        "General comments": "For this paper, the authors provided precompiled executables implementing their approach with command line interface. On top of these tools, a graphical user interface is defined in Python to load the the input drawing, set the algorithm parameters, call the precompiled binaries, and display and save the results.\n\nThe precompiled binaries worked directly.\n\nI had a few difficulties to handle the dependencies of the python script. First, PyQt4 urls given in README.txt are wrong (correct url can be found here: https://www.lfd.uci.edu/~gohlke/pythonlibs/#pyqt4). Also, the documentation does not mention to install sip before PyQt4, while it seems to be a mandatory step (pip install sip).\n\nOnce this is all fixed, the program runs smoothly and all the results can be reproduced.\nThe application processes SCAP files, and converters (scap_to_svg and svg_to_scap) are provided. Core algorithms are provided as binaries, yet the software can be adapted in other context as long as the drawings can be stored as svg files.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 10,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "sip / pyqt4",
        "Project URL": "https://www.cs.ubc.ca/labs/imager/tr/2018/StrokeAggregator/",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "Binary",
        "Topic": "Image",
        "Deep learning": "True",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 5,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 4,
        "Documentation score": 1,
        "Paper authors": [
            {
                "given": "Chenxi",
                "family": "Liu",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "University of British Columbia"
                    }
                ]
            },
            {
                "given": "Enrique",
                "family": "Rosales",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of British Columbia and Universidad Panamericana"
                    }
                ]
            },
            {
                "given": "Alla",
                "family": "Sheffer",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of British Columbia"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Style Transfer for Headshot Portraits",
        "DOI": "10.1145/2601097.2601137",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on the authors website or project page (zip file, direct download...)",
        "Main languages": "Matlab / Mathematica / ..",
        "How long did take for you to evaluate the code this paper (if any)?": 3,
        "Build info / instructions": "README",
        "arXiv (page URL)": "",
        "code URL": "http://groups.csail.mit.edu/graphics/face/tracker/release/zipfiles/code.zip",
        "code URL  2": "",
        "PDF URL": "https://people.csail.mit.edu/yichangshih/portrait_web/2014_portrait_hires.pdf",
        "License type": "unspecified",
        "Build mechanism": "Not applicable (python, Matlab..)",
        "Mandatory Software dependencies": "Open-source libraries, Paywall Closed source software or libraries",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 5,
        "Feedbacks [easy to configure/build (5=easy)]": 5,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": 4,
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 3,
        "Feedbacks [Interface user-friendly (5=easy)]": 5,
        "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions, Technical documentation (comments-doxygen...)",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Computer vision",
        "ACM 2": "Image manipulation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": 1,
        "OS of the test": "Windows",
        "General comments": "To make it run on Windows with Matlab R2018a : comment out #define _LINUX_MAC (as instructed) in project.h of both mexDenseSIFT and mexDiscreteFlow.\nThen \"int\" should be changed to \"mwSize\" in Image.h of mexDenseSIFT (lines 1651 and 1760), in Matrix.cpp of mexDenseSIFT (lines 400 and 410), in Vector.h of mexDenseSIFT (lines 271 and 279), in mexDiscreteFlow.cpp of mexDiscreteFlow (lines 11, 17, 27 and 58), and in Image.h of mexDiscreteFlow  (lines 1452 and 1560).\nThe code then runs smoothly and produces a pixel wise replica of the images in supplementary materials (up to cropping: the images were adjusted to a 1000x1320 resolution with this exact aspect ratio, so padding had to be done on this input images). It produces 1480 results out of 99+3 images, which is slightly more than the supplemental material (91 test images ; the best result out of 5 were selected for each test image and each of 3 styles).\nHowever, the code relies on computed landmarks per image, stored in *.lm files, for which no code is provided. The paper indicates they come from [Saraghi et al. 2009]. It seems some code for this paper can be found here : https://github.com/kylemcdonald/FaceTracker/ , though I did not test if this code directly produces these .lm files.\nSimilarly, the GrabCut+Matting Laplacian to obtain the face segmentation is not provided, nor the griddata call for inpainting the bakground. The iris/highlights extraction that uses [Daugman 1993] and [Levin et al. 2008] is not provided as well, though there is a folder called \"iris\" containing some matlab code (it is unclear but it seems it only performs eye detection and does not correspond to this highlight extraction). The code test_eye_transfer.m does not work due to missing eye data.\nFor these reasons I slightly lowered the replicability score although the obtained results match those of the paper.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 126,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "matlab / SIFTflow / iris / image_pyramids",
        "Project URL": "https://people.csail.mit.edu/yichangshih/portrait_web/",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Image",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 4,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 1,
        "Paper authors": [
            {
                "given": "YiChang",
                "family": "Shih",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Sylvain",
                "family": "Paris",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Connelly",
                "family": "Barnes",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "William T.",
                "family": "Freeman",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Fr\u00e9do",
                "family": "Durand",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 6,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=6&types=aaaaaaaa",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=42922836"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "StyLit: illumination-guided example-based stylization of 3D renderings",
        "DOI": "10.1145/2897824.2925948",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on the authors website or project page (zip file, direct download...)",
        "Main languages": "Cannot answer",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "README, LICENSE or explicit license (e.g. in the readme / headers)",
        "arXiv (page URL)": "",
        "code URL": "http://stylit.org/dl/stylit-demo.zip",
        "code URL  2": "",
        "PDF URL": "https://dcgi.fel.cvut.cz/home/sykorad/Fiser16-SIG.pdf",
        "License type": "custom",
        "Build mechanism": "Not applicable (python, Matlab..)",
        "Mandatory Software dependencies": "None",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "N/A",
        "Feedbacks [easy to configure/build (5=easy)]": "N/A",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "N/A",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 1,
        "Feedbacks [Interface user-friendly (5=easy)]": 5,
        "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Non-photorealistic rendering",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Windows",
        "General comments": "Very intuitive and impressive results. My camera was not listed, so I used the screen capture mode and launched a webcam application on the side, with the StyLit capturing the webcam stream from the other application -- that worked.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 47,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "https://dcgi.fel.cvut.cz/home/sykorad/stylit",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2016,
        "Misc. comment": "",
        "Software Type": "Binary",
        "Topic": "Rendering",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 5,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 1,
        "Paper authors": [
            {
                "given": "Jakub",
                "family": "Fi\u0161er",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Czech Technical University in Prague"
                    }
                ]
            },
            {
                "given": "Ond\u0159ej",
                "family": "Jamri\u0161ka",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Czech Technical University in Prague"
                    }
                ]
            },
            {
                "given": "Michal",
                "family": "Luk\u00e1\u010d",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Czech Technical University in Prague"
                    }
                ]
            },
            {
                "given": "Eli",
                "family": "Shechtman",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Adobe Research"
                    }
                ]
            },
            {
                "given": "Paul",
                "family": "Asente",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Adobe Research"
                    }
                ]
            },
            {
                "given": "Jingwan",
                "family": "Lu",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Adobe Research"
                    }
                ]
            },
            {
                "given": "Daniel",
                "family": "S\u00fdkora",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Czech Technical University in Prague"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Subdivision Exterior Calculus for Geometry Processing",
        "DOI": "10.1145/2897824.2925880",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://www.geometry.caltech.edu/pubs/DDMD16.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Computations in finite fields",
        "ACM 2": "Discretization",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 23,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "https://graphics.pixar.com/library/SEC/",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2016,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Geometry",
        "Deep learning": "True",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Fernando",
                "family": "de Goes",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Pixar Animation Studios"
                    }
                ]
            },
            {
                "given": "Mathieu",
                "family": "Desbrun",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Caltech"
                    }
                ]
            },
            {
                "given": "Mark",
                "family": "Meyer",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Pixar Animation Studios"
                    }
                ]
            },
            {
                "given": "Tony",
                "family": "DeRose",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Pixar Animation Studios"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Subspace Clothing Simulation Using Adaptive Bases",
        "DOI": "10.1145/2601097.2601160",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No but pseudo-code in the PDF",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://graphics.pixar.com/library/SubspaceClothing/paper.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Animation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 51,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "https://graphics.pixar.com/library/SubspaceClothing/",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Animation",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": 1,
        "Reviewer": 3,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Fabian",
                "family": "Hahn",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Bernhard",
                "family": "Thomaszewski",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Stelian",
                "family": "Coros",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Robert W.",
                "family": "Sumner",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Forrester",
                "family": "Cole",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Mark",
                "family": "Meyer",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Tony",
                "family": "DeRose",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Markus",
                "family": "Gross",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 3,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=3&types=aaaaaaaa",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=10768528"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Support-free volume printing by multi-axis motion",
        "DOI": "10.1145/3197517.3201342",
        "PDF availability (beside dl.acm)": "On an open archive arXiv or similar open archive, On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on github, gitlab or other code platform",
        "Main languages": "C/C++",
        "How long did take for you to evaluate the code this paper (if any)?": 3,
        "Build info / instructions": "README, LICENSE or explicit license (e.g. in the readme / headers)",
        "arXiv (page URL)": "https://hal.inria.fr/hal-01887571",
        "code URL": "https://github.com/daichengkai/VoxelMultiAxisAM",
        "code URL  2": "",
        "PDF URL": "http://www.mae.cuhk.edu.hk/~cwang/pubs/SIG18RobotVolPrint.pdf",
        "License type": "LGPL",
        "Build mechanism": "CMakeLists",
        "Mandatory Software dependencies": "Open-source libraries",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 4,
        "Feedbacks [easy to configure/build (5=easy)]": 4,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": 3,
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 4,
        "Feedbacks [Interface user-friendly (5=easy)]": 5,
        "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions",
        "Authors": "Academia",
        "ACM 1": "Shape modeling",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Linux",
        "General comments": "The code needs to be updated due to an API change in the libigl viewer: main.cpp lines 50 and 349. Just commenting these two lines allows you to build the code and run simple examples (the camera is a bit odd but it's fine).",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 27,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "libigl / qhull",
        "Project URL": "",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Fabrication",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 4,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 3,
        "Documentation score": 1,
        "Paper authors": [
            {
                "given": "Chengkai",
                "family": "Dai",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Delft University of Technology, The Netherlands"
                    }
                ]
            },
            {
                "given": "Charlie C. L.",
                "family": "Wang",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Delft University of Technology, The Netherlands"
                    }
                ]
            },
            {
                "given": "Chenming",
                "family": "Wu",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Tsinghua University, China"
                    }
                ]
            },
            {
                "given": "Sylvain",
                "family": "Lefebvre",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "INRIA, France"
                    }
                ]
            },
            {
                "given": "Guoxin",
                "family": "Fang",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Delft University of Technology, The Netherlands"
                    }
                ]
            },
            {
                "given": "Yong-Jin",
                "family": "Liu",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Tsinghua University, China"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Surface-Only Liquids",
        "DOI": "10.1145/2897824.2925899",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on the authors website or project page (zip file, direct download...)",
        "Main languages": "C/C++",
        "How long did take for you to evaluate the code this paper (if any)?": 3,
        "Build info / instructions": "LICENSE or explicit license (e.g. in the readme / headers), AUTHORS or explicitly mentioned, None",
        "arXiv (page URL)": "",
        "code URL": "http://www.cs.columbia.edu/cg/surfaceliquids/code/Droplet3D.zip",
        "code URL  2": "",
        "PDF URL": "http://www.cs.columbia.edu/cg/surfaceliquids/droplets.pdf",
        "License type": "FreeBSD",
        "Build mechanism": "CMakeLists",
        "Mandatory Software dependencies": "Open-source libraries",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 5,
        "Feedbacks [easy to configure/build (5=easy)]": 4,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": 4,
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "N/A",
        "Feedbacks [Interface user-friendly (5=easy)]": "N/A",
        "Documentation": "None",
        "Authors": "Academia",
        "ACM 1": "Physical simulation",
        "ACM 2": "Continuous simulation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Linux",
        "General comments": "had to modify the CMakeLists. Added two lines: find_package(glfw3 REQUIRED)\nset (DEFAULT_LIBRARIES ${DEFAULT_LIBRARIES} glfw) to link against glfw. I run a simulation using the file provided in assets/droplet3d: with command line: Droplet3D crownsplash.txt for example. The simulation runs, a wireframe mesh is displayed. However the renderings are very far from the ones in the paper.\nFor crownsplash I had the following error: [MeshIO::load] Error: file init/crownsplash.rec not found.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 19,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "Eigen/GLFW3",
        "Project URL": "http://www.cs.columbia.edu/cg/surfaceliquids/",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2016,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Animation",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": true,
        "Feedbacks [could reproduce results (5=highly confident)]": 3,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 1,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Fang",
                "family": "Da",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Columbia University"
                    }
                ]
            },
            {
                "given": "David",
                "family": "Hahn",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "IST Austria"
                    }
                ]
            },
            {
                "given": "Christopher",
                "family": "Batty",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of Waterloo"
                    }
                ]
            },
            {
                "given": "Chris",
                "family": "Wojtan",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "IST Austria"
                    }
                ]
            },
            {
                "given": "Eitan",
                "family": "Grinspun",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Columbia University"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Synthesis of Filigrees for Digital Fabrication",
        "DOI": "10.1145/2897824.2925911",
        "PDF availability (beside dl.acm)": "On an open archive arXiv or similar open archive, On the author(s) website or its institution, Other (web, research gate, semantic scholar,...)",
        "Is the code or software publicly available ?": "No but pseudo-code in the PDF",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "https://hal.inria.fr/hal-01401520",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://i.cs.hku.hk/~wkchen/projects/papers/weikai_sig16_filigree_final.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Shape modeling",
        "ACM 2": "Physical simulation",
        "ACM 3": "Geometric topology",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 28,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "https://i.cs.hku.hk/~wkchen/projects/proj_sig16.html",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2016,
        "Misc. comment": "There are two moderately difficult algorithms in the paper, but they do not implement all the steps of the synthesis pipeline.",
        "Software Type": "",
        "Topic": "Fabrication",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": 1,
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Weikai",
                "family": "Chen",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "The University of Hong Kong"
                    }
                ]
            },
            {
                "given": "Xiaolong",
                "family": "Zhang",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "The University of Hong Kong"
                    }
                ]
            },
            {
                "given": "Shiqing",
                "family": "Xin",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Ningbo University"
                    }
                ]
            },
            {
                "given": "Yang",
                "family": "Xia",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Dalian University of Technology"
                    }
                ]
            },
            {
                "given": "Sylvain",
                "family": "Lefebvre",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "INRIA"
                    }
                ]
            },
            {
                "given": "Wenping",
                "family": "Wang",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "The University of Hong Kong"
                    }
                ]
            }
        ],
        "Altmetric score": 7,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=7&types=mmmmmmmm",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=13926268"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Synthetic depth-of-field with a single-camera mobile phone",
        "DOI": "10.1145/3197517.3201329",
        "PDF availability (beside dl.acm)": "On an open archive arXiv or similar open archive, On the author(s) website or its institution, On the author(s) repository (dropbox, github, drive, iCloud)",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "https://arxiv.org/abs/1806.04171",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://graphics.stanford.edu/papers/portrait/wadhwa-portrait-sig18.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Private Companies",
        "ACM 1": "Computational photography",
        "ACM 2": "Image processing",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 21,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Image",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": true,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Neal",
                "family": "Wadhwa",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Google Research"
                    }
                ]
            },
            {
                "given": "Marc",
                "family": "Levoy",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Google Research"
                    }
                ]
            },
            {
                "given": "Rahul",
                "family": "Garg",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Google Research"
                    }
                ]
            },
            {
                "given": "David E.",
                "family": "Jacobs",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Google Research"
                    }
                ]
            },
            {
                "given": "Bryan E.",
                "family": "Feldman",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Google Research"
                    }
                ]
            },
            {
                "given": "Nori",
                "family": "Kanazawa",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Google Research"
                    }
                ]
            },
            {
                "given": "Robert",
                "family": "Carroll",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Google Research"
                    }
                ]
            },
            {
                "given": "Yair",
                "family": "Movshovitz-Attias",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Google Research"
                    }
                ]
            },
            {
                "given": "Jonathan T.",
                "family": "Barron",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Google Research"
                    }
                ]
            },
            {
                "given": "Yael",
                "family": "Pritch",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Google Research"
                    }
                ]
            }
        ],
        "Altmetric score": 99.28,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=100&types=brtttttg",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=43645525"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Tactile Mesh Saliency",
        "DOI": "10.1145/2897824.2925927",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://graphics.cs.yale.edu/sites/default/files/mesh_to_tactile_ver09.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Shape modeling",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 21,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "https://graphics.cs.yale.edu/publications/tactile-mesh-saliency",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2016,
        "Misc. comment": "Note that there is \"Important copyright information\" to read before downloading, but the link is dead.",
        "Software Type": "",
        "Topic": "Virtual Reality",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Manfred",
                "family": "Lau",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Lancaster University"
                    }
                ]
            },
            {
                "given": "Kapil",
                "family": "Dev",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Lancaster University"
                    }
                ]
            },
            {
                "given": "Weiqi",
                "family": "Shi",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Yale University"
                    }
                ]
            },
            {
                "given": "Julie",
                "family": "Dorsey",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Yale University"
                    }
                ]
            },
            {
                "given": "Holly",
                "family": "Rushmeier",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Yale University"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Tangible and Modular Input Device for Character Articulation",
        "DOI": "10.1145/2601097.2601112",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on the authors website or project page (zip file, direct download...), on github, gitlab or other code platform",
        "Main languages": "C/C++",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "README, AUTHORS or explicitly mentioned",
        "arXiv (page URL)": "",
        "code URL": "https://github.com/alecjacobson/puppet",
        "code URL  2": "https://igl.ethz.ch/projects/character-articulation-input-device/tangible-and-modular-input-device-for-character-articulation-supplemental.zip",
        "PDF URL": "https://igl.ethz.ch/projects/character-articulation-input-device/tangible-and-modular-input-device-for-character-articulation-siggraph-2014-jacobson-et-al.pdf",
        "License type": "unspecified",
        "Build mechanism": "CMakeLists",
        "Mandatory Software dependencies": "Open-source libraries, Closed source (e.g. commercial) software or libraries free for research purposes, Paywall Closed source software or libraries",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "N/A",
        "Feedbacks [easy to configure/build (5=easy)]": "N/A",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "N/A",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "N/A",
        "Feedbacks [Interface user-friendly (5=easy)]": "N/A",
        "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions, API documentation, Technical documentation (comments-doxygen...)",
        "Authors": "Academia",
        "ACM 1": "Graphics input devices",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Windows",
        "General comments": "The paper is likely reproducible given the appropriate hardware. It includes a thorough open hardware description, and firmware/driver code, as well as the app to deform meshes.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 70,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "ftd2xx / libigl / boost / matlab / mosek / tetgen",
        "Project URL": "https://igl.ethz.ch/projects/character-articulation-input-device/",
        "Did I manage to perform a complete test (deps/build)?": "No due to missing specific hardware",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Virtual Reality",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "N/A",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 2,
        "Paper authors": [
            {
                "given": "Alec",
                "family": "Jacobson",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Daniele",
                "family": "Panozzo",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Oliver",
                "family": "Glauser",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "C\u00e9dric",
                "family": "Pradalier",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Otmar",
                "family": "Hilliges",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Olga",
                "family": "Sorkine-Hornung",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Task-based Locomotion",
        "DOI": "10.1145/2897824.2925893",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No but pseudo-code in the PDF",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://www.cs.ubc.ca/~van/papers/2016-TOG-taskBasedLocomotion/2016-TOG-taskBasedLocomotion.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Physical simulation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 20,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "https://www.cs.ubc.ca/~van/papers/2016-TOG-taskBasedLocomotion/index.html",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2016,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Animation",
        "Deep learning": "True",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": 1,
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Shailen",
                "family": "Agrawal",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "University of British Columbia"
                    }
                ]
            },
            {
                "given": "Michiel",
                "family": "van de Panne",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of British Columbia"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "tempoGAN: a temporally coherent, volumetric GAN for super-resolution fluid flow",
        "DOI": "10.1145/3197517.3201304",
        "PDF availability (beside dl.acm)": "On an open archive arXiv or similar open archive",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on github, gitlab or other code platform",
        "Main languages": "C/C++, Python",
        "How long did take for you to evaluate the code this paper (if any)?": 6,
        "Build info / instructions": "README, LICENSE or explicit license (e.g. in the readme / headers), AUTHORS or explicitly mentioned",
        "arXiv (page URL)": "https://arxiv.org/abs/1801.09710",
        "code URL": "https://github.com/thunil/tempoGAN",
        "code URL  2": "",
        "PDF URL": "https://arxiv.org/pdf/1801.09710.pdf",
        "License type": "Apache License 2.0",
        "Build mechanism": "CMakeLists, Not applicable (python, Matlab..)",
        "Mandatory Software dependencies": "Open-source libraries, Closed source (e.g. commercial) software or libraries free for research purposes",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 4,
        "Feedbacks [easy to configure/build (5=easy)]": 3,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": 5,
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "Yes",
        "Available data (provided or url / ref)": "Training data, Pre-trained models / Hardcoded data / lookup tables /...",
        "License for the data (if any)": "https://ge.in.tum.de/download/data/tempoGAN_model2d.zip ; https://ge.in.tum.de/download/data/tempoGAN_model3d.zip",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 4,
        "Feedbacks [Interface user-friendly (5=easy)]": 4,
        "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions, API documentation",
        "Authors": "Academia",
        "ACM 1": "Neural networks",
        "ACM 2": "Physical simulation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Linux",
        "General comments": "Complex CUDA/cudNN/tensorflow/manta infrastructure but well documented. Training data can be reproduced and pre-trained model can be easily reused.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 53,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "CUDA / cudnn / tensorflow-gpu  / imagio / keras / scipy / numpy / mantaflow",
        "Project URL": "https://ge.in.tum.de/publications/tempogan/",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Animation",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 5,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 3,
        "Documentation score": 1,
        "Paper authors": [
            {
                "given": "You",
                "family": "Xie",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Technical University of Munich"
                    }
                ]
            },
            {
                "given": "Erik",
                "family": "Franz",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Technical University of Munich"
                    }
                ]
            },
            {
                "given": "Mengyu",
                "family": "Chu",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Technical University of Munich"
                    }
                ]
            },
            {
                "given": "Nils",
                "family": "Thuerey",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Technical University of Munich"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Temporal Frequency Probing for 5D Analysis of Global Light Transport",
        "DOI": "10.1145/2601097.2601103",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://www.cs.toronto.edu/~motoole/papers/14.siggraph.temporalprobing.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Epipolar geometry",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 77,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "http://www.cs.cmu.edu/~motoole2/temporalprobing.html",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Rendering",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 4,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Matthew",
                "family": "O'Toole",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Felix",
                "family": "Heide",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Lei",
                "family": "Xiao",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Matthias B.",
                "family": "Hullin",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Wolfgang",
                "family": "Heidrich",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Kiriakos N.",
                "family": "Kutulakos",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 3,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=3&types=aaaaaaaa",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=35372837"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Terrain-Adaptive Locomotion Skills Using Deep Reinforcement Learning",
        "DOI": "10.1145/2897824.2925881",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on github, gitlab or other code platform",
        "Main languages": "C/C++",
        "How long did take for you to evaluate the code this paper (if any)?": 10,
        "Build info / instructions": "README, LICENSE or explicit license (e.g. in the readme / headers)",
        "arXiv (page URL)": "",
        "code URL": "https://github.com/xbpeng/DeepTerrainRL",
        "code URL  2": "",
        "PDF URL": "https://www.cs.ubc.ca/~van/papers/2016-TOG-deepRL/2016-TOG-deepRL.pdf",
        "License type": "LGPL",
        "Build mechanism": "premake",
        "Mandatory Software dependencies": "Open-source libraries, Paywall Closed source software or libraries",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 1,
        "Feedbacks [easy to configure/build (5=easy)]": 1,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": 1,
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 1,
        "Feedbacks [Interface user-friendly (5=easy)]": 1,
        "Documentation": "None",
        "Authors": "Academia",
        "ACM 1": "Physical simulation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Windows",
        "General comments": "The provided code comes with many dependencies, which are supposedly handled using premake4.\n\nOn windows, I could generate a solution for Visual Studio by calling premake.exe vs2012 from the source code directory (call to more recent versions of VS did not work). I couldn't build the solution, as premake didn't populate the include, build and link directives for the dependencies. I tried to fix it, but I couldn't find a way to properly handle caffe and its dependencies.\n\nI got similar problems on linux, where I could generate a Makefile by calling premake gmake, but I had too many dependencies to fix when calling  make config=debug64.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 143,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "caffe/boost/opencv/eigen/BulletPhysics/CUDA/Json_cpp/bits/glut/lodepng/",
        "Project URL": "https://www.cs.ubc.ca/~van/papers/2016-TOG-deepRL/index.html",
        "Did I manage to perform a complete test (deps/build)?": "No due to technical issue",
        "Year": 2016,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Animation",
        "Deep learning": "True",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 1,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 4,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Xue Bin",
                "family": "Peng",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "University of British Columbia"
                    }
                ]
            },
            {
                "given": "Glen",
                "family": "Berseth",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of British Columbia"
                    }
                ]
            },
            {
                "given": "Michiel",
                "family": "van de Panne",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of British Columbia"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Tetrahedral meshing in the wild",
        "DOI": "10.1145/3197517.3201353",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on github, gitlab or other code platform",
        "Main languages": "C/C++",
        "How long did take for you to evaluate the code this paper (if any)?": 2,
        "Build info / instructions": "README, LICENSE or explicit license (e.g. in the readme / headers)",
        "arXiv (page URL)": "",
        "code URL": "https://github.com/Yixin-Hu/TetWild",
        "code URL  2": "",
        "PDF URL": "https://www.cs.toronto.edu/~jacobson/images/tetrahedral-meshing-in-the-wild-siggraph-2018-hu-et-al.pdf",
        "License type": "Mozilla Public License",
        "Build mechanism": "CMakeLists",
        "Mandatory Software dependencies": "Open-source libraries",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 5,
        "Feedbacks [easy to configure/build (5=easy)]": 5,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "N/A",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 5,
        "Feedbacks [Interface user-friendly (5=easy)]": 4,
        "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions, API documentation",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Mesh generation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Mac OS",
        "General comments": "The authors provide all scripts to generate the paper figures. Note that even if the main code is under the MPL2 license, the code includes CGAL with a \"contaminating\" GNU GPL license.",
        "Does the paper already have a reproducibility stamp": "Yes, http://www.replicabilitystamp.org",
        "Citation count (google scholar)": 34,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "cgal/ gmp/mpfr / geogram",
        "Project URL": "",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Geometry",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 5,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 3,
        "Documentation score": 1,
        "Paper authors": [
            {
                "given": "Yixin",
                "family": "Hu",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "New York University"
                    }
                ]
            },
            {
                "given": "Qingnan",
                "family": "Zhou",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Adobe Research"
                    }
                ]
            },
            {
                "given": "Xifeng",
                "family": "Gao",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "New York University"
                    }
                ]
            },
            {
                "given": "Alec",
                "family": "Jacobson",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of Toronto"
                    }
                ]
            },
            {
                "given": "Denis",
                "family": "Zorin",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "New York University"
                    }
                ]
            },
            {
                "given": "Daniele",
                "family": "Panozzo",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "New York University"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "The Connect-The-Dots Family of Puzzles: Design and Automatic Generation",
        "DOI": "10.1145/2601097.2601224",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://fstaals.net/publications/other/pointpuzzles2014/pointpuzzles2014_local.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Computational geometry",
        "ACM 2": "Shape modeling",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 9,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "https://fstaals.net/publications/other/pointpuzzles2014/",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Geometry",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Maarten",
                "family": "L\u00f6ffler",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Mira",
                "family": "Kaiser",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Tim",
                "family": "van Kapel",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Gerwin",
                "family": "Klappe",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Marc",
                "family": "van Kreveld",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Frank",
                "family": "Staals",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "The Diffractive Achromat: Full Spectrum Computational Imaging with Diffractive Optics",
        "DOI": "10.1145/2897824.2925941",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No but pseudo-code in the PDF",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://www.cs.ubc.ca/labs/imager/tr/2016/DiffractiveAchromatImaging/DiffractiveAchromat_Peng2016_high-res.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Computational photography",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 29,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "http://www.cs.ubc.ca/labs/imager/tr/2016/DiffractiveAchromatImaging/",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2016,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Image",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": 2,
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Yifan",
                "family": "Peng",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "The University of British Columbia and King Abdullah University of Science and Technology"
                    }
                ]
            },
            {
                "given": "Qiang",
                "family": "Fu",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "King Abdullah University of Science and Technology"
                    }
                ]
            },
            {
                "given": "Felix",
                "family": "Heide",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "The University of British Columbia and King Abdullah University of Science and Technology"
                    }
                ]
            },
            {
                "given": "Wolfgang",
                "family": "Heidrich",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "King Abdullah University of Science and Technology and The University of British Columbia"
                    }
                ]
            }
        ],
        "Altmetric score": 28,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=28&types=mmmmmmmm",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=13565894"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "The human touch: measuring contact with real human soft tissues",
        "DOI": "10.1145/3197517.3201296",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://www.cs.ubc.ca/research/HumanTouch/HumanTouchSIGGRAPH2018.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Physical simulation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 6,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "https://sensorimotor.cs.ubc.ca/2018/08/02/measuring-contact-with-real-human-bodies/",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Animation",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 1,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Dinesh K.",
                "family": "Pai",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "University of British Columbia and Vital Mechanics Research, Canada"
                    }
                ]
            },
            {
                "given": "Austin",
                "family": "Rothwell",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of British Columbia"
                    }
                ]
            },
            {
                "given": "Pearson",
                "family": "Wyder-Hodge",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of British Columbia"
                    }
                ]
            },
            {
                "given": "Alistair",
                "family": "Wick",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of British Columbia"
                    }
                ]
            },
            {
                "given": "Ye",
                "family": "Fan",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of British Columbia and Vital Mechanics Research"
                    }
                ]
            },
            {
                "given": "Egor",
                "family": "Larionov",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of British Columbia and Vital Mechanics Research"
                    }
                ]
            },
            {
                "given": "Darcy",
                "family": "Harrison",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Vital Mechanics Research"
                    }
                ]
            },
            {
                "given": "Debanga Raj",
                "family": "Neog",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of British Columbia"
                    }
                ]
            },
            {
                "given": "Cole",
                "family": "Shing",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of British Columbia"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "The layer laboratory: a calculus for additive and subtractive composition of anisotropic surface reflectance",
        "DOI": "10.1145/3197517.3201321",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on the authors website or project page (zip file, direct download...)",
        "Main languages": "C/C++, Python",
        "How long did take for you to evaluate the code this paper (if any)?": 10,
        "Build info / instructions": "README",
        "arXiv (page URL)": "",
        "code URL": "https://rgl.s3.eu-central-1.amazonaws.com/media/papers/Zeltner2018Layer_2.zip",
        "code URL  2": "https://rgl.s3.eu-central-1.amazonaws.com/media/papers/Zeltner2018Layer_1.zip",
        "PDF URL": "https://rgl.s3.eu-central-1.amazonaws.com/media/papers/Zeltner2018Layer_1.pdf",
        "License type": "unspecified",
        "Build mechanism": "CMakeLists, Not applicable (python, Matlab..)",
        "Mandatory Software dependencies": "Open-source libraries",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 5,
        "Feedbacks [easy to configure/build (5=easy)]": 1,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": 1,
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 3,
        "Feedbacks [Interface user-friendly (5=easy)]": 3,
        "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions",
        "Authors": "Academia",
        "ACM 1": "Reflectance modeling",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Linux",
        "General comments": "Linux : compiled successfully after several major changes:\n\n** File mitsuba-layers/src/liblayer/microfacet.cpp: because of a delete use of = for a std::bind, I changed lines 602 forward to: \n    auto const &integ1 = std::bind(&microfacet_fresnel, mu_o, mu_i, 0.0, std::placeholders::_1, alpha_u, alpha_v, eta_);\n    auto const &integ2 = std::bind(&microfacet_fresnel_no_additional_factors, mu_o, mu_i, 0.0, std::placeholders::_1, alpha_u, alpha_v, eta_);\n    auto integrand = &integ1;\n    if (fresnel_only) { integrand = &integ2;  }\n\n** File mitsuba-layers/include/mitsuba/layer/sparse.h add #include<memory>\n** File mitsuba-layers/ext/enoki/include/enoki/alloc.h add #include<cstring>\n** File mitsuba-layers/CMakeLists.txt : add  -fpermissive to CMAKE_CXX_FLAGS\n\n** Files mitsuba-layers/ext/openexr/CMakeLists.txt an nori/ext/openexr/CMakeLists.txt\nadd_custom_target(CopyIlmBaseLibs\n  COMMAND ${CMAKE_COMMAND} -E copy_directory\n  ${CMAKE_CURRENT_BINARY_DIR}/IlmBase/Half/\n  ${CMAKE_CURRENT_BINARY_DIR}/OpenEXR/IlmImf/\n  COMMAND ${CMAKE_COMMAND} -E copy_directory\n  ${CMAKE_CURRENT_BINARY_DIR}/IlmBase/IlmThread/\n  ${CMAKE_CURRENT_BINARY_DIR}/OpenEXR/IlmImf/\n  COMMAND ${CMAKE_COMMAND} -E copy_directory\n  ${CMAKE_CURRENT_BINARY_DIR}/IlmBase/Iex/\n  ${CMAKE_CURRENT_BINARY_DIR}/OpenEXR/IlmImf/\n  COMMAND ${CMAKE_COMMAND} -E copy_directory\n  ${CMAKE_CURRENT_BINARY_DIR}/IlmBase/Imath/\n  ${CMAKE_CURRENT_BINARY_DIR}/OpenEXR/IlmImf/\n)\ninstead of \nadd_custom_target(CopyIlmBaseLibs\nCOMMAND ${CMAKE_COMMAND} -E copy_directory\n  ${CMAKE_CURRENT_BINARY_DIR}/IlmBase/Half/$<CONFIGURATION>\n  ${CMAKE_CURRENT_BINARY_DIR}/OpenEXR/IlmImf/$<CONFIGURATION>\n  COMMAND ${CMAKE_COMMAND} -E copy_directory\n  ${CMAKE_CURRENT_BINARY_DIR}/IlmBase/IlmThread/$<CONFIGURATION>\n  ${CMAKE_CURRENT_BINARY_DIR}/OpenEXR/IlmImf/$<CONFIGURATION>\n  COMMAND ${CMAKE_COMMAND} -E copy_directory\n  ${CMAKE_CURRENT_BINARY_DIR}/IlmBase/Iex/$<CONFIGURATION>\n  ${CMAKE_CURRENT_BINARY_DIR}/OpenEXR/IlmImf/$<CONFIGURATION>\n  COMMAND ${CMAKE_COMMAND} -E copy_directory\n  ${CMAKE_CURRENT_BINARY_DIR}/IlmBase/Imath/$<CONFIGURATION>\n  ${CMAKE_CURRENT_BINARY_DIR}/OpenEXR/IlmImf/$<CONFIGURATION>\n)\n\n** file nori-layers/ext/tbb/include/tbb/pipeline.h\nReplace line 328:\ntemplate<typename T> struct tbb_trivially_copyable { enum { value = std::has_trivial_copy_constructor<T>::value }; };\nby:\n template<typename T> struct tbb_trivially_copyable { enum { value = std::is_trivially_copy_constructible<T>::value }; };\n\n\n\nHowever none of the jupyter notebooks worked due to a problem with the version of prompt_toolkit. jupyter notebooks to replicate the results are provided. I could turn some of them into python scripts, but there were a lot of compatibility issues with matplotlib. Also don't forget to source setpath.sh to be able to import the compiled mitsuba in python.\n\nMacOS Attempt: The paper provides the code and data to reproduce the paper results (C++ code and jupyter notebooks to reproduce the figures). Unfortunately, the mitsuba-layers and nori renderer fail to compile on linux and macOS. E.g.:\n  - mitsuba-layers (on macOS): issue with tbb\n     [  1%] Built target mitsuba-layer-obj\n     [  1%] Built target tbb_def_files\n     [  1%] Linking CXX shared library libtbb.dylib\n     clang: error: no such file or directory: 'and'\n     clang: error: no such file or directory: 'data/mitsuba-layers/b1/ext_build/tbb/tbb.def'\n  - nori : Thread issue at cmake level.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 8,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "umfpack / sparseqr/ libvips / jupyter",
        "Project URL": "https://rgl.epfl.ch/publications/Zeltner2018Layer",
        "Did I manage to perform a complete test (deps/build)?": "No due to technical issue",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Rendering",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 5,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 1,
        "Documentation score": 1,
        "Paper authors": [
            {
                "given": "Tizian",
                "family": "Zeltner",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "\u00c9cole polytechnique f\u00e9d\u00e9rale de Lausanne (EPFL)"
                    }
                ]
            },
            {
                "given": "Wenzel",
                "family": "Jakob",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "\u00c9cole polytechnique f\u00e9d\u00e9rale de Lausanne (EPFL)"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "The Natural-Constraint Representation of the Path Space for Efficient Light Transport Simulation",
        "DOI": "10.1145/2601097.2601108",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No but pseudo-code in the PDF",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 2,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://lightrig.de/publications/p2014/HSLT/HSLT_preprint.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Ray tracing",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 35,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "https://cg.ivd.kit.edu/english/HSLT.php",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2014,
        "Misc. comment": "The pseudo-code is clear but only partially covers the method described in the paper.",
        "Software Type": "",
        "Topic": "Rendering",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": 2,
        "Reviewer": 1,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Anton S.",
                "family": "Kaplanyan",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Johannes",
                "family": "Hanika",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Carsten",
                "family": "Dachsbacher",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "The Sketchy Database: Learning to Retrieve Badly Drawn Bunnies",
        "DOI": "10.1145/2897824.2925954",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on github, gitlab or other code platform",
        "Main languages": "Python",
        "How long did take for you to evaluate the code this paper (if any)?": 5,
        "Build info / instructions": "README, LICENSE or explicit license (e.g. in the readme / headers)",
        "arXiv (page URL)": "",
        "code URL": "https://github.com/janesjanes/sketchy",
        "code URL  2": "",
        "PDF URL": "https://www.cc.gatech.edu/~hays/tmp/sketchy-database.pdf",
        "License type": "MIT",
        "Build mechanism": "Not applicable (python, Matlab..)",
        "Mandatory Software dependencies": "Open-source libraries",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 5,
        "Feedbacks [easy to configure/build (5=easy)]": 5,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": 3,
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "Yes",
        "Available data (provided or url / ref)": "Training data, Pre-trained models / Hardcoded data / lookup tables /...",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 5,
        "Feedbacks [Interface user-friendly (5=easy)]": 5,
        "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions, API documentation, Technical documentation (comments-doxygen...)",
        "Authors": "Academia",
        "ACM 1": "Image representations",
        "ACM 2": "Image processing",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Linux",
        "General comments": "The github repsitory provides two scripts, which both require to download the\" sketch and photos\"dataset (https://goo.gl/SNpMmK):\n- Retrieval_Example.ipynb, which demonstrates how to retrieve images from a sketch. I had to flatten the content of the directory \"256x256/photo/tx_00000000000\" to be able to load in the photo database (8th code block in jupyter notebook).\n- Compute_Sketchy_score.ipynb, which compute the network matching accuracy. I tried to flatten the directory \"256x256/sketch/tx_00000000000\", and replace the use of the file test_img_list.txt (which is not provided) by test_img_list = os.listdir(photo_paths). Unfortunatly, even with this change, I couldn't run the script, and I couldn't find a way to format the data as required by the last code block. No instruction is given on how to modify or adapt file loading and directory structure.\n\nBug fixes (for both scripts):\n - scripts use python2 syntax for the print function (ie. without parenthesis). Can be adapted to python3 by using parenthesis.\n - scripts attempt to load LSHForest from sklearn.neighbors, which is deprecated and not provided by modern sklearn packages. Replace \nfrom sklearn.neighbors import NearestNeighbors,LSHForest\nby \nfrom sklearn.neighbors import NearestNeighbors\n\nI have tested both scripts using caffe_cpu (see 4th code block in both scripts: caffe.set_mode_cpu()).\n\nThe provided scripts does not demonstrate how to retrieve sketches from an image. The broken script does not demonstrate a functionality of the approach but rather its performances, and so its failure does not impact the replicability of the approach.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 186,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "Caffe",
        "Project URL": "http://sketchy.eye.gatech.edu/",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2016,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Image",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 4,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 4,
        "Documentation score": 2,
        "Paper authors": [
            {
                "given": "Patsorn",
                "family": "Sangkloy",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Georgia Institute of Technology"
                    }
                ]
            },
            {
                "given": "Nathan",
                "family": "Burnell",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Brown University"
                    }
                ]
            },
            {
                "given": "Cusuh",
                "family": "Ham",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Georgia Institute of Technology"
                    }
                ]
            },
            {
                "given": "James",
                "family": "Hays",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Georgia Institute of Technology"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "The Visual Microphone: Passive Recovery of Sound from Video",
        "DOI": "10.1145/2601097.2601119",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on the authors website or project page (zip file, direct download...)",
        "Main languages": "Matlab / Mathematica / ..",
        "How long did take for you to evaluate the code this paper (if any)?": 4,
        "Build info / instructions": "AUTHORS or explicitly mentioned",
        "arXiv (page URL)": "",
        "code URL": "http://people.csail.mit.edu/abedavis/research/VisMic/VMSlim.zip",
        "code URL  2": "",
        "PDF URL": "http://people.csail.mit.edu/mrub/papers/VisualMic_SIGGRAPH2014.pdf",
        "License type": "unspecified",
        "Build mechanism": "Not applicable (python, Matlab..)",
        "Mandatory Software dependencies": "Paywall Closed source software or libraries",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 5,
        "Feedbacks [easy to configure/build (5=easy)]": 5,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": 1,
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 5,
        "Feedbacks [Interface user-friendly (5=easy)]": "N/A",
        "Documentation": "API documentation, Technical documentation (comments-doxygen...)",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Scene understanding",
        "ACM 2": "Video segmentation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": 1,
        "OS of the test": "Windows",
        "General comments": "The code partially implements the paper, as there is no support for low-framerate videos by exploiting rolling shutter.\nFor the remaining high fps videos, some of them did not work at all as they resulted in errors (randomly either \"Unable to read the file.\" or \"Dot indexing is not supported for variables of this type (l. 275 of VideoReader/read)) which I could not debug, perhaps due to some codec issue. This was the case of Chips2-2200Hz-Mary_MIDI-input.avi,Chips1-2200Hz-Mary_Had-input.avi and Plant-2200Hz-Mary_MIDI-input.avi).\nI successfully ran the code on Chips1-20000Hz-Mary_Had-input.avi. The script (which loads a file 'crabchipsRamp.avi' which I did not find) needs to be adapted so that dsamplefactor = 1 instead of 0.1, otherwise the result is almost pure noise, and of course samplingrate = 20000. **Beware** as well that the default nscales = 1 while the paper's results were produced with nscales = 4 (page 4 in the paper), although I didn't hear much difference in the result.\nWith these settings, I managed to recover a sound in about 1.5 hours on a good laptop, but the sound is much noisier (though still impressive!) than the result shown in the accompanying webpage. The resulting spectrogram can be found here: https://pasteboard.co/ILOq404.png\nand the corresponding sound here: https://voca.ro/3qdSKf1zGkX\nThe webpage states that the output were further processed with \"speech enhancement audio denoising\" (the paper indicates [Loizou 2005]), though I could not find code for that algorithm.\nSince matlab R2015, wavwrite has been replaced by audiowrite.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 200,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "matlab / pyrTools",
        "Project URL": "http://people.csail.mit.edu/mrub/VisualMic/",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Image",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": true,
        "Feedbacks [could reproduce results (5=highly confident)]": 3,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 1,
        "Paper authors": [
            {
                "given": "Abe",
                "family": "Davis",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Michael",
                "family": "Rubinstein",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Neal",
                "family": "Wadhwa",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Gautham J.",
                "family": "Mysore",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Fr\u00e9do",
                "family": "Durand",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "William T.",
                "family": "Freeman",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 98.43,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=99&types=mabrttfg",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=2568793"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Time-varying Weathering in Texture Space",
        "DOI": "10.1145/2897824.2925891",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://www.cs.tau.ac.il/~dcor/articles/2016/TW.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Image processing",
        "ACM 2": "Texturing",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 17,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2016,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Image",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Rachele",
                "family": "Bellini",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Tel Aviv University"
                    }
                ]
            },
            {
                "given": "Yanir",
                "family": "Kleiman",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Tel Aviv University"
                    }
                ]
            },
            {
                "given": "Daniel",
                "family": "Cohen-Or",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Tel Aviv University"
                    }
                ]
            }
        ],
        "Altmetric score": 3,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=3&types=aaaaaaaa",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=43043631"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Toonsynth: example-based synthesis of hand-colored cartoon animations",
        "DOI": "10.1145/3197517.3201326",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://dcgi.fel.cvut.cz/home/sykorad/Dvoroznak18-SIG.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Motion processing",
        "ACM 2": "Image processing",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 5,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "https://dcgi.fel.cvut.cz/home/sykorad/toonsynth.html",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Image",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Marek",
                "family": "Dvoro\u017en\u00e1k",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Czech Technical University in Prague"
                    }
                ]
            },
            {
                "given": "Wilmot",
                "family": "Li",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Adobe Research"
                    }
                ]
            },
            {
                "given": "Vladimir G.",
                "family": "Kim",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Adobe Research"
                    }
                ]
            },
            {
                "given": "Daniel",
                "family": "S\u00fdkora",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Czech Technical University in Prague"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Topology-Varying 3D Shape Creation via Structural Blending",
        "DOI": "10.1145/2601097.2601102",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution, Other (web, research gate, semantic scholar,...)",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on github, gitlab or other code platform",
        "Main languages": "C/C++",
        "How long did take for you to evaluate the code this paper (if any)?": 10,
        "Build info / instructions": "README",
        "arXiv (page URL)": "",
        "code URL": "https://github.com/ialhashim/topo-blend",
        "code URL  2": "",
        "PDF URL": "https://kevinkaixu.net/papers/alhashim_sig14_topo.pdf",
        "License type": "unspecified",
        "Build mechanism": "IDE Project (VS,..)",
        "Mandatory Software dependencies": "Open-source libraries",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 1,
        "Feedbacks [easy to configure/build (5=easy)]": 1,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": 1,
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 1,
        "Feedbacks [Interface user-friendly (5=easy)]": 5,
        "Documentation": "Technical documentation (comments-doxygen...)",
        "Authors": "Academia",
        "ACM 1": "Shape modeling",
        "ACM 2": "Randomness, geometry and discrete structures",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Windows",
        "General comments": "I updated the code so that it runs on current generation of libraries, that is, Qt 5.14 (with VS 2017) instead of Qt 4.2, Glew instead of GLee, and the last version of the StarLib dependency, which compiles with Qt 5. For that, a large number of steps need to be performed, which took me more than a day to investigate.\nFirst, building the last Starlib:mini. First, install Qt 5.14 (about 40GB), add the Eigen path to the include paths in starlib.pro: INCLUDEPATH += c:\\absolute_path_to_starlab\\core\\external\\eigen-3.2.5\\ and add the path to your Visual Studio cl.exe in the system path (typically, :\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Tools\\MSVC\\14.16.27023\\bin\\Hostx64\\x64).\nThen, go to a command prompt, and \"moc\" the following cpp files by executing:\nmoc ParametersFrame.h -o moc_ParametersFrame.cpp\nmoc RichParameterSet.h -o moc_RichParameterSet.cpp\nmoc RichParameterWidget.h -o moc_RichParameterWidget.cpp\nin the right folders.\nThen add moc_ParametersFrame.cpp, moc_RichParameterSet.cpp and moc_RichParameterWidget.cpp to the project for them to be compiled (folder core/starlib/Sources/parameters).\n\nThen you need to compile the old topo-blend project, and a number of edits need to be performed:\n* The Eigen constructor Vector3(float) doesn't exist. You thus need to edit:\n- CustomDrawObjects.h, line 332: glv(Vector3(center + ((Vector3d)n[i] * 0.2 * scale))); to glv(Vector3(center + (Vector3d(n[i].x(), n[i].y(), n[i].z()) * 0.2 * scale)));\n- CustomDrawObjects.h, line 299: Voxel corner (Vector3d((minimum - Vector3d(voxel_size)) / voxel_size)); to Voxel corner (Vector3d((minimum - Vector3d(voxel_size, voxel_size, voxel_size)) / voxel_size));\n- StructureNode.h, lines 48-49\n        inline Vector4d minCoord(){ return Vector4d(0.0); } to inline Vector4d minCoord(){ return Vector4d(0.0, 0.0, 0.0, 0.0); }\n        inline Vector4d maxCoord(){ return Vector4d(1.0); } to inline Vector4d maxCoord(){ return Vector4d(1.0, 1.0, 1.0, 1.0); }\n- nurbs_plugin.cpp, line 965: createSheet(Vector3d(0,0,0),Vector3d(0.01)); => createSheet(Vector3d(0,0,0),Vector3d(0.01, 0.01, 0.01));        \n\n* The file QtConcurrentRun is now in the folder QtConcurrent. You need to edit:\n#include <QtConcurrentRun> to #include <QtConcurrent/QtConcurrentRun>\nin GraphExplorer.cpp and Scheduler.cpp and SynthesisManager.cpp and DemoGlobal.cpp\n\n* For some reasons, colors like Qt::lightGray cannot be accessed. Changing them to the corresponding constants uglily but quickly fixes the error:\n- GraphModifyWidget.cpp, line 129: node->vis_property[\"color\"] = Qt::lightGray; change  Qt::lightGray; to the constant 6\n- GraphModifyWidget.cpp, lines 135 and 138: change Qt::red to 7, and Qt::green to 8\n- QuickGroup.cpp, lines 82 and 88: same thing.\n- QuickAlignment.cpp, lines 99, 104, 110, 113:  same thing. \n- landmarks_dialog.cpp, lines 248, 254, 257, 264, 270, 273, 289, 296, 306, 309, 677, 684, 693, 696: same things (use Qt::yellow=12)\n\n* A number of string literals are typed char* instead of const char* which produces compile errors.\n- StructureGlobal.h, line 532: static inline std::string exec(char* cmd) { should be changed to static inline std::string exec(const char* cmd) {\n- kmeans.h, line 296: void init_Mu( ExtMat &X, ExtMat &Mu, char* initname ) to void init_Mu( ExtMat &X, ExtMat &Mu, const char* initname )\n- PlyFile.cpp, line 41: char *type_names[] = to const char *type_names[] =\n- PlyFile.cpp, line 1457: int equal_strings(char *s1, char *s2) to int equal_strings(const char *s1, const char *s2), and change the definition in PlyFile.h\n- Ply.h, line 85: char *name; to QString name; and #include <QString>  (outside of the extern \"C\" !!)\n\n* stdext::hash_map is now obsolete and now part of the STL under the name \"unordered_map\". You thus need to change:\n- Geometry.h, line 278: hash_map<long long,int> edgeMap; to unordered_map<long long,int> edgeMap;\n- Hash.h, line 4: #include <hash_map> to #include <unordered_map>\n- Hash.h, line 5: using stdext::hash_map; to using std::unordered_map;\n- MultiGridOctreeData.h, lines 244, 310, 312: hash_map< long long , std::pair< RootInfo< OutputDensity > , int > >* vertexCount; to unordered_map<...>\n- Geometry.inl, line 325: same thing.\n- MultiGridOctreeData.inl, lines 2877, 3004, 3955, 3994, 4096, 4097: same thing. \n- resample/disjoint_set.h and topoblenderlib/disjoint_set.h, lines 6--8 : hash_map to unordered_map, hash_set to unordered_set, and #define STDEXT stdext to #define STDEXT std\n- resample/disjoint_set.h and topoblenderlib/disjoint_set.h, lines 58-59 hash_map => unordered_map\n\n* some includes are missing.\n- MultiGridOctreeData.h, add #include \"Octree.h\"\n- GraphEmbed.h, add #include \"StructureNode.h\"\n- ShapeRenderer.cpp, add #include \"qglviewer/manipulatedCameraFrame.h\" before the #include \"qglviewer/camera.h\"\n- GraphItem.cpp, Scene.cpp, BlendPathRenderer.cpp, also add #include \"qglviewer/manipulatedCameraFrame.h\" \n\n* other edits:\n- Task.h, line 9: add Q_OBJECT, before public\n- ProductEvaluators.h (in Eigen), lines 181--192: comment out the function. It produces an error otherwise, and should not impact much performances. \n- PlyFile.h, lines 148-149: remove extern char *my_alloc(); and replace #define myalloc(mem_size) my_alloc((mem_size), __LINE__, __FILE__) by #define myalloc(mem_size) malloc((mem_size))\n- ProgressItem.cpp, line 9: replace items = new QGraphicsItemGroup(0,scene); by items = new QGraphicsItemGroup(0); and then immediately call scene->addItem(items);\n- ProgressItem.cpp, lines 98-100:\n        spinner->translate( 0.5 * x,  0.5 * y);\n        spinner->rotate(10);\n        spinner->translate(-0.5 * x, -0.5 * y);\nshould be replace by \n                spinner->setTransform(QTransform().translate(0.5*x, 0.5*y).rotate(10).translate(-0.5*x, -0.5*y));\n- qglviewer/camera.h, line 334: move the definition of ManipulatedCameraFrame* frame() const { return frame_; } to the cpp file.\nthe .h file should look like ManipulatedCameraFrame* frame() const; \nand the camera.cpp file should have a function ManipulatedCameraFrame* Camera::frame() const { return frame_; }        \n- BlendPathRenderer.cpp, lines 176 and 213: replace event->posF(); by event->localPos();\n- poissonrecon.cpp: add #pragma once at the begining        \n- QtAwesome.cpp, line 15: remove Q_INIT_RESOURCE_EXTERN(QtAwesome), and put Q_INIT_RESOURCE(QtAwesome); in line 121, in QtAwesome's constructor (this may not be needed though)\n- ShapeRenderer.cpp, line 124: replace setRevolveAroundPoint by setPivotPoint (otherwise annoying warnings during execution, but this is not mandatory)\n- GraphItem.cpp, line 52: replace setRevolveAroundPoint by setPivotPoint\n- BlendPathRenderer.cpp, line 185: replace revolveAroundPoint by pivotPoint\n- Scene.cpp, line 243: replace revolveAroundPoint by pivotPoint\n- topo-blend.cpp, line 640: replace revolveAroundPoint by pivotPoint\n\n* Replacing GLee by a fresh Glew install.\n- GlSplatRendererLib/GlSplatRendererLib.pro: replace Glee by Glew\n- change all the #include of Glee to GL/glew.h.\n- topo_blend_widget.cpp: add an #include <GL/glew.h> before all other includes, otherwise glew complains that other gl libraries were included before glew.\n- GLSplat.cpp, line 16: put an #include <GL/glew.h> before all other includes\n- GLSplat.cpp,line 124 and 314, 321, 329, 407, 421: glActiveTexture should be changed to __glewActiveTexture\n- GLSplat.cpp,line 191 and 206: glFramebufferTexture2DEXT => __glewFramebufferTexture2D\n- GLSplat.cpp,line 250: glDrawBuffersARB => __glewDrawBuffersARB\n- GLSplat.cpp,line 345, 350, 355, 360: glMultiTexCoord2f => __glewMultiTexCoord2f\n- GLSplat.cpp,line 411: glBlendFuncSeparate => __glewBlendFuncSeparate\n- GLSplat.cpp,line 426: glPointParameterf => __glewPointParameterf\n- Shader.h, lines 103, 109, 112, 115, 118, 121, 124: glUniform*(glGetUniformLocation(...)) => __glewUniform*(__glewGetUniformLocation\n- demo.pro and topo-blend.pro: add LIBS += -lglew32 -LC:/[path-to-glew]/glew-2.1.0/lib/Release/x64 \n\n\n* toAscii does not exist anymore:\n- GLSplat.cpp, line 56, 102, 103: .toAscii() => .toLocal8Bit()\n- nurbs_plugin.cpp, line 426: toAscii() => toLatin1()\n- poissonrecon.cpp, line 18: toAscii() => toLatin1()\n\n\n* the way Qt plugins are handled has changed:\n- voxel_resampler.cpp, line 170: remove the line Q_EXPORT_PLUGIN\n- nurbs_plugin.cpp, line 1014: remove the line Q_EXPORT_PLUGIN\n- topo-blend.cpp, line 996: remove the line Q_EXPORT_PLUGIN\n- voxel_resampler.h, line 10: add Q_PLUGIN_METADATA(IID \"voxel_resampler\") \n- nurbs_plugin.h, line 25: add Q_PLUGIN_METADATA(IID \"nurbs_plugin\") \n- topo-blend.h, line 26: add Q_PLUGIN_METADATA(IID \"topoblend\") \n\n* __iob_func does not exist anymore:\n- voxel_resampler.cpp and nurbs_plugin.cpp: add at the begining: extern \"C\" { FILE __iob_func[3] = { *stdin,*stdout,*stderr }; }\n- voxel_resampler.pro and nurbs_plugin.pro: LIBS += -llegacy_stdio_definitions\n\n\nmake sure starlib.lib is present in the newly created release directory\n\n* Now going to linking errors:\n- Src/PoissonRecon.cpp, line 494, add \n    SimpleMesh s;\n    PoissonRecon::makeFromCloud(std::vector<std::vector<float>>(), std::vector<std::vector<float>>(), s, 0);\nand #include \"poissonrecon.h\" at the beginning. Otherwise the makeFromCloud symbol does not get exported if it is never used. This is a hack but works.\n- It is unclear if this is needed, but at some point I had to put  ../Reconstruction/poissonrecon.cpp in the compiled sources in the project file TopoBlenderLib.pro and add LIBS += $$PWD/../Reconstruction/$$CFG/lib/Reconstruction.lib at the end. It randomly changes between \"undefined reference to ...\" to \"duplicate reference to ...\", and changes if I compile in debug or release.\n\n* Now going to execution errors:\n- ShapesGallery.cpp, lines 94--10 : comment out everything. This relates to shadows, and crashes the program.\n- BlendPathRenderer.cpp, line 42 and 78, replace updateGL by paintGL. Otherwise the interpolated chair thumbnails are black. This is ackwards since updateGL is supposed to call paintGL though.\n- SynthesisManager.cpp, lines 971--973, comment out the inside of bufferCleanup(). This is a hack which can have side effects, but otherwise crashes.\n\n\nOn my machine, the code only runs within the Qt Creator environment, otherwise some VCRUNTIME140_APP.dll/MSVCP140.dll error appear.\nAlso the program crashes when exporting the mesh, during the rendering of the snapshot. However, it still outputs the obj mesh, so it is possible to use that mesh for comparison purpose. In practice, the authors have made available a demo compiled for Windows, and shows a better rendering output than the code compiled with the instructions above.\nWhile the interface is quite intuitive, my main issues are the lack of documentation, and most importantly, that I have no idea how the input data directories were generated and thus I have no clue as to how I would interpolate my own models. In particular, it seems that the provided xml files (likely?) contain the skeletonized and B-spline fits of the meshes, which is a non trivial step.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 62,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "Qt / GLee / starlib / Eigen",
        "Project URL": "https://ialhashim.github.io/projects/topo/index.html",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Geometry",
        "Deep learning": "True",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 5,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 1,
        "Paper authors": [
            {
                "given": "Ibraheem",
                "family": "Alhashim",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Honghua",
                "family": "Li",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Kai",
                "family": "Xu",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Junjie",
                "family": "Cao",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Rui",
                "family": "Ma",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Hao",
                "family": "Zhang",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Toward Animating Water with Complex Acoustic Bubbles",
        "DOI": "10.1145/2897824.2925904",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on the authors website or project page (zip file, direct download...)",
        "Main languages": "Python",
        "How long did take for you to evaluate the code this paper (if any)?": 2,
        "Build info / instructions": "AUTHORS or explicitly mentioned",
        "arXiv (page URL)": "",
        "code URL": "https://www.cs.cornell.edu/projects/Sound/bubbles/bubbleDemo.py",
        "code URL  2": "",
        "PDF URL": "https://www.cs.cornell.edu/projects/Sound/bubbles/bubbles.pdf",
        "License type": "unspecified",
        "Build mechanism": "Not applicable (python, Matlab..)",
        "Mandatory Software dependencies": "Open-source libraries",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 5,
        "Feedbacks [easy to configure/build (5=easy)]": "N/A",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "N/A",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 3,
        "Feedbacks [Interface user-friendly (5=easy)]": 5,
        "Documentation": "Technical documentation (comments-doxygen...), None",
        "Authors": "Academia",
        "ACM 1": "Physical simulation",
        "ACM 2": "Continuous simulation",
        "ACM 3": "Massively parallel and high-performance simulations",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Linux",
        "General comments": "The demo only illustrates the frequency shift experienced by bubbles, and not the other simulations described in the paper.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 26,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "simpleaudio /wavefile/libsndfile",
        "Project URL": "https://www.cs.cornell.edu/projects/Sound/bubbles/",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2016,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Animation",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 2,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 1,
        "Documentation score": 1,
        "Paper authors": [
            {
                "given": "Timothy R.",
                "family": "Langlois",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Cornell University"
                    }
                ]
            },
            {
                "given": "Changxi",
                "family": "Zheng",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Columbia University"
                    }
                ]
            },
            {
                "given": "Doug L.",
                "family": "James",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Stanford University"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Toward wave-based sound synthesis for computer animation",
        "DOI": "10.1145/3197517.3201318",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://graphics.stanford.edu/projects/wavesolver/assets/wavesolver2018.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Physical simulation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 13,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "https://graphics.stanford.edu/projects/wavesolver/",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Animation",
        "Deep learning": "True",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Jui-Hsien",
                "family": "Wang",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Stanford University"
                    }
                ]
            },
            {
                "given": "Ante",
                "family": "Qu",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Stanford University"
                    }
                ]
            },
            {
                "given": "Timothy R.",
                "family": "Langlois",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Adobe Research"
                    }
                ]
            },
            {
                "given": "Doug L.",
                "family": "James",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Stanford University"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Towards virtual reality infinite walking: dynamic saccadic redirection",
        "DOI": "10.1145/3197517.3201294",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No but pseudo-code in the PDF",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 2,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://research.nvidia.com/sites/default/files/pubs/2018-08_Towards-Virtual-Reality/paper_0.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Virtual reality",
        "ACM 2": "Perception",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 36,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "https://1iyiwei.github.io/dsr-sig18/",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Virtual Reality",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": 1,
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Qi",
                "family": "Sun",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Stony Brook University, NVIDIA, and Adobe Research"
                    }
                ]
            },
            {
                "given": "Arie",
                "family": "Kaufman",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Stony Brook University"
                    }
                ]
            },
            {
                "given": "Anjul",
                "family": "Patney",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "NVIDIA"
                    }
                ]
            },
            {
                "given": "Li-Yi",
                "family": "Wei",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Adobe Research"
                    }
                ]
            },
            {
                "given": "Omer",
                "family": "Shapira",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "NVIDIA"
                    }
                ]
            },
            {
                "given": "Jingwan",
                "family": "Lu",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Adobe Research"
                    }
                ]
            },
            {
                "given": "Paul",
                "family": "Asente",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Adobe Research"
                    }
                ]
            },
            {
                "given": "Suwen",
                "family": "Zhu",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Stony Brook University"
                    }
                ]
            },
            {
                "given": "Morgan",
                "family": "Mcguire",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "NVIDIA"
                    }
                ]
            },
            {
                "given": "David",
                "family": "Luebke",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "NVIDIA"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Transfiguring Portraits",
        "DOI": "10.1145/2897824.2925871",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://homes.cs.washington.edu/~kemelmi/Transfiguring_Portraits_Kemelmacher_SIGGRAPH2016.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Computational photography",
        "ACM 2": "Image manipulation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 46,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2016,
        "Misc. comment": "An unofficial implementation that differs from the original paper by Xiaochen Fan is available at\nhttps://github.com/fanxiaochen/TransfiguringPortraits",
        "Software Type": "",
        "Topic": "Image",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Ira",
                "family": "Kemelmacher-Shlizerman",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "University of Washington"
                    }
                ]
            }
        ],
        "Altmetric score": 122,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=122&types=mmmmmmmm",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=10140282"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Transient Attributes for High-Level Understanding and Editing of Outdoor Scenes",
        "DOI": "10.1145/2601097.2601101",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution, Other (web, research gate, semantic scholar,...)",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on the authors website or project page (zip file, direct download...)",
        "Main languages": "C/C++, Matlab / Mathematica / ..",
        "How long did take for you to evaluate the code this paper (if any)?": 10,
        "Build info / instructions": "README, LICENSE or explicit license (e.g. in the readme / headers), AUTHORS or explicitly mentioned",
        "arXiv (page URL)": "",
        "code URL": "http://transattr.cs.brown.edu/files/regressors_v1.2.tar",
        "code URL  2": "",
        "PDF URL": "http://transattr.cs.brown.edu/files/TransientAttributes-paper.pdf",
        "License type": "custom",
        "Build mechanism": "Not applicable (python, Matlab..)",
        "Mandatory Software dependencies": "Open-source libraries, Paywall Closed source software or libraries",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 1,
        "Feedbacks [easy to configure/build (5=easy)]": 1,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": 1,
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "Yes",
        "Available data (provided or url / ref)": "Training data, Pre-trained models / Hardcoded data / lookup tables /...",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 5,
        "Feedbacks [Interface user-friendly (5=easy)]": "N/A",
        "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions, API documentation, Technical documentation (comments-doxygen...)",
        "Authors": "Academia",
        "ACM 1": "Video segmentation",
        "ACM 2": "Scene understanding",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": 1,
        "OS of the test": "Windows",
        "General comments": "Regarding installation, I ran the code on Windows with Matlab R2018a amd Visual Studio in 64bits, so I had to adjust the code.\n* VLfeat\n- download the precompiled window binaries of vlfeat-0.9.18. Just put the win64 folder in vlfeat-0.9.18\\bin\n- comment line 315 of host.h in vlfeat\n- then compile vl feat using vl_compile and install, as per the instructions\n* VOC:\n- resize.cc, line 36: alphainfo ofs[len]; should be replaced by  alphainfo* ofs = new alphainfo[len];\n- resize.cc: insert after line 77: delete[] ofs;\n- resize.cc, line 70: bzero(dst, chan*width*dheight*sizeof(double)); => memset(dst, 0, chan*width*dheight*sizeof(double));\n- resize.cc, line 86: const int *sdims = mxGetDimensions(mxsrc); => const mwSize* sdims = mxGetDimensions(mxsrc);\n- resize.cc, line 95: int ddims[3]; => mwSize ddims[3];  (same for casts in lines 96, 97)\n- dt.cc, line 50: const int *dims = mxGetDimensions(prhs[0]);  => const mwSize *dims = mxGetDimensions(prhs[0]);\n- dt.cc: add in line 16: typedef int int32_t;\n- features.cc, line 38: const int *dims = mxGetDimensions(mximage); => const mwSize *dims = mxGetDimensions(mximage);\n- features.cc, line 54: int out[3]; => mwSize out[3];\n- compile.m, line 13: replace mex -O fconv.cc -o fconv by  mex -O fconv.cc -output fconv \n- fconv.cc, line 23: void *process(void *thread_arg)  => void process(void *thread_arg) \n- sparse2dense.m, line 60: idx = sub2ind([M, N], yi, xi) ; => idx = sub2ind([M, N], yi(:), xi(:));\n... and now it should work. Note however one trick: the code results in many messages displayed containing: \"Squared correlation coefficient = -nan(ind) (regression)\" .... and this is fine, though undocumented !\nWhile trying to \"fix\" this issue, having to recompile libSVM, it seemed the one precompiled didn't match the source code, and this resulted in additional errors: if you want to recompile libSVM, you need:\n- to edit the matlab file run_regressor_on_images.m, line 242, \tadd before svmpredict:\nmodel.sv_indices = [];\nmodel.nSV = length(model.SVs);\nsince the model structure has changed and now contains a field sv_indices.\n- then, line 244, [score,err] = svmpredict([0], K_input, model); should be changed to [score] = svmpredict([0], K_input, model); since the 2-parameter output doesn't exist anymore (there can be 1 or 3 parameters, not 2).\n- then in svm_model_matlab.c, line 228, replace:\n\tfor(i=0;i<num_of_fields;i++)\n\t\trhs[i] = mxGetFieldByNumber(matlab_struct, 0, i);\nby\n\trhs[0] = mxGetField(matlab_struct, 0, \"Parameters\");\n\trhs[1] = mxGetField(matlab_struct, 0, \"nr_class\");\n\trhs[2] = mxGetField(matlab_struct, 0, \"totalSV\"); \n\trhs[3] = mxGetField(matlab_struct, 0, \"rho\");\n\trhs[4] = mxGetField(matlab_struct, 0, \"Label\");\n\trhs[5] = mxGetField(matlab_struct, 0, \"sv_indices\");\n\trhs[6] = mxGetField(matlab_struct, 0, \"ProbA\");\n\trhs[7] = mxGetField(matlab_struct, 0, \"ProbB\");\n\trhs[8] = mxGetField(matlab_struct, 0, \"nSV\");\n\trhs[9] = mxGetField(matlab_struct, 0, \"sv_coef\");\n\trhs[10] = mxGetField(matlab_struct, 0, \"SVs\");\nThis is due to the ordering of the structure's field having changed. I found it cleared to index by name rather than indices to avoid such issues in the future. Debugging this took me most of the time, and was not absolutely necessary.\n\nFinally, I reduce the reproducibility score as the provided matlab script allows to predict the transient attributes and it seems to work, but no code is provided to perform the image editing based on changing transient attributes.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 148,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "matlab / libsvm",
        "Project URL": "http://transattr.cs.brown.edu/",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Image",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 3,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 2,
        "Paper authors": [
            {
                "given": "Pierre-Yves",
                "family": "Laffont",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Zhile",
                "family": "Ren",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Xiaofeng",
                "family": "Tao",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Chao",
                "family": "Qian",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "James",
                "family": "Hays",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "True2Form: 3D Curve Networks from 2D Sketches via Selective Regularization",
        "DOI": "10.1145/2601097.2601128",
        "PDF availability (beside dl.acm)": "On an open archive arXiv or similar open archive, On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "https://hal.inria.fr/hal-01060850",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://www-sop.inria.fr/reves/Basilic/2014/XCSBMS14/True2Form.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Randomness, geometry and discrete structures",
        "ACM 2": "Shape modeling",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 111,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "http://www.cs.ubc.ca/labs/imager/tr/2014/True2Form/index.htm",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Geometry",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Baoxuan",
                "family": "Xu",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "William",
                "family": "Chang",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Alla",
                "family": "Sheffer",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Adrien",
                "family": "Bousseau",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "James",
                "family": "McCrae",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Karan",
                "family": "Singh",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Unified Motion Planner for Fishes with Various Swimming Styles",
        "DOI": "10.1145/2897824.2925977",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://www.entcomp.iit.tsukuba.ac.jp/en/project/unified-motion-planner/file/UnifiedMotionPlanner_Paper.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Procedural animation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 5,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "http://www.entcomp.iit.tsukuba.ac.jp/en/project/unified-motion-planner/",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2016,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Animation",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Daiki",
                "family": "Satoi",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "University of Tsukuba"
                    }
                ]
            },
            {
                "given": "Mikihiro",
                "family": "Hagiwara",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of Tsukuba"
                    }
                ]
            },
            {
                "given": "Akira",
                "family": "Uemoto",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of Tsukuba"
                    }
                ]
            },
            {
                "given": "Hisanao",
                "family": "Nakadai",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of Tsukuba"
                    }
                ]
            },
            {
                "given": "Junichi",
                "family": "Hoshino",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of Tsukuba"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Unified Particle Physics for Real-Time Applications",
        "DOI": "10.1145/2601097.2601152",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No but pseudo-code in the PDF",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://mmacklin.com/uppfrta_preprint.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Private Companies",
        "ACM 1": "Geometric topology",
        "ACM 2": "Physical simulation",
        "ACM 3": "Shape modeling",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 279,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "http://blog.mmacklin.com/project/flex/",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Animation",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": 3,
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Miles",
                "family": "Macklin",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Matthias",
                "family": "M\u00fcller",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Nuttapong",
                "family": "Chentanez",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Tae-Yong",
                "family": "Kim",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 2.7,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=3&types=tttttttt",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=3930839"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Unifying points, beams, and paths in volumetric light transport simulation",
        "DOI": "10.1145/2601097.2601219",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "https://cs.dartmouth.edu/~wjarosz/publications/krivanek14upbp.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Ray tracing",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 66,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "https://cs.dartmouth.edu/~wjarosz/publications/krivanek14upbp.html",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Rendering",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 1,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Jaroslav",
                "family": "K\u0159iv\u00e1nek",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Iliyan",
                "family": "Georgiev",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Toshiya",
                "family": "Hachisuka",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Petr",
                "family": "V\u00e9voda",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Martin",
                "family": "\u0160ik",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Derek",
                "family": "Nowrouzezahrai",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Wojciech",
                "family": "Jarosz",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Variational surface cutting",
        "DOI": "10.1145/3197517.3201356",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on github, gitlab or other code platform",
        "Main languages": "C/C++",
        "How long did take for you to evaluate the code this paper (if any)?": 3,
        "Build info / instructions": "README, LICENSE or explicit license (e.g. in the readme / headers)",
        "arXiv (page URL)": "",
        "code URL": "https://github.com/nmwsharp/variational-surface-cutting",
        "code URL  2": "",
        "PDF URL": "https://www.cs.cmu.edu/~kmcrane/Projects/VariationalCuts/paper.pdf",
        "License type": "GPL",
        "Build mechanism": "CMakeLists",
        "Mandatory Software dependencies": "Open-source libraries",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 5,
        "Feedbacks [easy to configure/build (5=easy)]": 4,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": 5,
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 5,
        "Feedbacks [Interface user-friendly (5=easy)]": 5,
        "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions",
        "Authors": "Academia",
        "ACM 1": "Continuous optimization",
        "ACM 2": "Mesh geometry models",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Mac OS",
        "General comments": "I had to comment the \"-Werror\" in the CMakeLists.txt because of numerous errors in Clang. Otherwise, no specific issues.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 7,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "glm/ nanogui / eigen / nanovg / pybind / suitesparse",
        "Project URL": "https://www.cs.cmu.edu/~kmcrane/Projects/VariationalCuts/",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Geometry",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 5,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 3,
        "Documentation score": 1,
        "Paper authors": [
            {
                "given": "Nicholas",
                "family": "Sharp",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Carnegie Mellon University"
                    }
                ]
            },
            {
                "given": "Keenan",
                "family": "Crane",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Carnegie Mellon University"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Vector Graphics Complexes",
        "DOI": "10.1145/2601097.2601169",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on github, gitlab or other code platform",
        "Main languages": "C/C++",
        "How long did take for you to evaluate the code this paper (if any)?": 3,
        "Build info / instructions": "README, LICENSE or explicit license (e.g. in the readme / headers), AUTHORS or explicitly mentioned",
        "arXiv (page URL)": "",
        "code URL": "https://github.com/dalboris/vpaint",
        "code URL  2": "",
        "PDF URL": "https://www.borisdalstein.com/research/vgc/vgc.pdf",
        "License type": "Apache License Version 2.0",
        "Build mechanism": "Makefile, qmake",
        "Mandatory Software dependencies": "Closed source (e.g. commercial) software or libraries free for research purposes",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 5,
        "Feedbacks [easy to configure/build (5=easy)]": 5,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": 5,
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 5,
        "Feedbacks [Interface user-friendly (5=easy)]": 5,
        "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions",
        "Authors": "Academia",
        "ACM 1": "Graphics systems and interfaces",
        "ACM 2": "Parametric curve and surface models",
        "ACM 3": "Point-based models",
        "ACM 4": "Volumetric models",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Linux",
        "General comments": "Bugfix: had to comment out  a line in GLUtils.cpp: //format.setColorSpace(QSurfaceFormat::DefaultColorSpace);",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 20,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "QT5",
        "Project URL": "https://www.borisdalstein.com/research/vgc/",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Image",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 5,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 1,
        "Documentation score": 1,
        "Paper authors": [
            {
                "given": "Boris",
                "family": "Dalstein",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "R\u00e9mi",
                "family": "Ronfard",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Michiel",
                "family": "van de Panne",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "VideoSnapping: Interactive Synchronization of Multiple Videos",
        "DOI": "10.1145/2601097.2601208",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution, Other (web, research gate, semantic scholar,...)",
        "Is the code or software publicly available ?": "No but pseudo-code in the PDF",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://ahornung.net/files/pub/2014-siggraph-videosnapping-wang.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Graphics input devices",
        "ACM 2": "Graphics systems and interfaces",
        "ACM 3": "Scene understanding",
        "ACM 4": "Video segmentation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 48,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "https://la.disneyresearch.com/publication/videosnapping-interactive-synchronization-of-multiple-videos/",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Image",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": 1,
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Oliver",
                "family": "Wang",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Christopher",
                "family": "Schroers",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Henning",
                "family": "Zimmer",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Markus",
                "family": "Gross",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Alexander",
                "family": "Sorkine-Hornung",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "VisemeNet: Audio-Driven Animator-Centric Speech Animation",
        "DOI": "10.1145/3197517.3201292",
        "PDF availability (beside dl.acm)": "On an open archive arXiv or similar open archive, On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on github, gitlab or other code platform",
        "Main languages": "Python",
        "How long did take for you to evaluate the code this paper (if any)?": 4,
        "Build info / instructions": "README",
        "arXiv (page URL)": "https://arxiv.org/abs/1805.09488",
        "code URL": "https://github.com/yzhou359/VisemeNet_tensorflow",
        "code URL  2": "",
        "PDF URL": "http://www.dgp.toronto.edu/~karan/papers/visemenetSIG18.pdf",
        "License type": "unspecified",
        "Build mechanism": "Not applicable (python, Matlab..)",
        "Mandatory Software dependencies": "Open-source libraries, Closed source (e.g. commercial) software or libraries free for research purposes",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 4,
        "Feedbacks [easy to configure/build (5=easy)]": 5,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "N/A",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "Yes",
        "Available data (provided or url / ref)": "Training data, Pre-trained models / Hardcoded data / lookup tables /...",
        "License for the data (if any)": "custom",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 5,
        "Feedbacks [Interface user-friendly (5=easy)]": 5,
        "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions, Technical documentation (comments-doxygen...)",
        "Authors": "Academia",
        "ACM 1": "Machine learning algorithms",
        "ACM 2": "Animation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Windows",
        "General comments": "Note that the VisemeNet code has strong requirements on software and library versions. The code does run on Python 3.5 but not on Python 3.6.5. Also, Python 3.5 now comes with a default scipy 1.4.0 which is not suitable, though an older scipy 1.1.0 works.\nI could test the prediction with the provided trained network on the single provided audio file, as well as the Maya script to use the results on a public face rig. This worked nicely.\nI did not test the training as data are only accessible upon (non-anonymous) request, and training instructions and scripts are not provided (although a non-standalone train_visemenet.py file is present, it does not run on its own).\n\n--alternative test on linux--\nI failed to have the tensorflow package within anaconda to work with libcudnn.so.8.0.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 13,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "tensorflow / cudnn / numpy / scipy / matplotlib / python_speech_features / Maya",
        "Project URL": "https://people.umass.edu/~yangzhou/visemenet/",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Animation",
        "Deep learning": "True",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 4,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 1,
        "Paper authors": [
            {
                "given": "Yang",
                "family": "Zhou",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "University of Massachusetts Amherst"
                    }
                ]
            },
            {
                "given": "Zhan",
                "family": "Xu",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of Massachusetts Amherst"
                    }
                ]
            },
            {
                "given": "Chris",
                "family": "Landreth",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of Toronto"
                    }
                ]
            },
            {
                "given": "Evangelos",
                "family": "Kalogerakis",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of Massachusetts Amherst"
                    }
                ]
            },
            {
                "given": "Subhransu",
                "family": "Maji",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of Massachusetts Amherst"
                    }
                ]
            },
            {
                "given": "Karan",
                "family": "Singh",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of Toronto"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Visual Rhythm and Beat",
        "DOI": "10.1145/3197517.3201371",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on github, gitlab or other code platform",
        "Main languages": "Python",
        "How long did take for you to evaluate the code this paper (if any)?": 10,
        "Build info / instructions": "README, LICENSE or explicit license (e.g. in the readme / headers)",
        "arXiv (page URL)": "",
        "code URL": "https://github.com/abedavis/visbeat/",
        "code URL  2": "",
        "PDF URL": "http://www.abedavis.com/files/papers/VisualRhythm_Davis18.pdf",
        "License type": "Stanford",
        "Build mechanism": "Not applicable (python, Matlab..)",
        "Mandatory Software dependencies": "Open-source libraries",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 5,
        "Feedbacks [easy to configure/build (5=easy)]": 5,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "N/A",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 5,
        "Feedbacks [Interface user-friendly (5=easy)]": 5,
        "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions",
        "Authors": "Academia",
        "ACM 1": "Graphics input devices",
        "ACM 2": "Sound-based input / output",
        "ACM 3": "Computational photography",
        "ACM 4": "Image processing",
        "ACM 5": "Image-based rendering",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Mac OS",
        "General comments": "Very easy to setup and play with on MacOS thanks to the \"pip install visbeat\" and the examples.\n\n\n-- Aternative build on windows --\n\nWhile the paper is accompanied by a very nice website to explore all results, and effort has been made to make code execution easy, I still did not manage to run the code. The docker file was not working. This is due to matplotlib and imageio-ffmpeg not supporting anymore Python 2.7 (Python 2.7 is being discontinued as of January 2020 anyway) and I am not familiar with docker to fix it. Going back to manual installation of the libraries, it turns out that only imageio version 2.4.1 is able to execute the required  imageio.ffmpeg.download() command (and pip install imageio-ffmpeg does not work on Python 2.7). It also turns out that installing matplotlib for Python 2.7 is also difficult (ended up upgrading my pip and setuptools \"python -m pip install -U pip setuptools\" before the pip install matplotlib, despite Python 2.7 being a fresh install -- I otherwise had \"Command python setup.py egg_info failed with error code 1\"). I also had to add \"sys.path.insert(0, \"../visbeat/\")\" in the dancefer.py example file for python to search in the correct folder. Ultimately, running the TLDR example results in the error \"AssertionError: Wrong number of files for ./VisBeatAssets/VideoSources\\fDWFVI8PQOI\\Versions\\\\Original\\maxheight_240\\\\Snap! - Rhythm is a Dancer-fDWFVI8PQOI.mp4 Found: []\". Thinking this could be due to mixes of slashes and backslashes I fixed that in the code to no avail. I realized this file actually did not exist : instead, there was a file called \"Snap! - Rhythm is a Dancer-fDWFVI8PQOI.f133.mp4\" which did not have audio, and a \"Snap! - Rhythm is a Dancer-fDWFVI8PQOI.f140.m4a\" which was the audio file. I merged both in Premiere to create the desired \"Snap! - Rhythm is a Dancer-fDWFVI8PQOI.f133.mp4\" file, ran the code again. This time, this resulted in \"Issue loading audio for ./VisBeatAssets/VideoSources/fDWFVI8PQOI/Versions/Original/maxheight_240/Snap! - Rhythm is a Dancer-fDWFVI8PQOI.mp4\". I tried again with MPEG audio instead of AAC. This didn't work either. I gave up after a day.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 4,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "numpy/scipy/moviepy/librosa/bs4/librosa/imageio/requests/moviepy/termcolor/youtube-dl/matplotlib",
        "Project URL": "http://abedavis.com/visualbeat/",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Image",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 4,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 3,
        "Documentation score": 1,
        "Paper authors": [
            {
                "given": "Abe",
                "family": "Davis",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Stanford University"
                    }
                ]
            },
            {
                "given": "Maneesh",
                "family": "Agrawala",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Stanford University"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Volume-encoded UV-maps",
        "DOI": "10.1145/2897824.2925898",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on the authors website or project page (zip file, direct download...)",
        "Main languages": "C/C++",
        "How long did take for you to evaluate the code this paper (if any)?": 4,
        "Build info / instructions": "README, AUTHORS or explicitly mentioned",
        "arXiv (page URL)": "",
        "code URL": "http://vcg.isti.cnr.it/volume-encoded-uv-maps/volume-encoded-uv-maps.zip",
        "code URL  2": "",
        "PDF URL": "http://vcg.isti.cnr.it/volume-encoded-uv-maps/volume-encoded-uv-maps.pdf",
        "License type": "unspecified",
        "Build mechanism": "qmake .pro file",
        "Mandatory Software dependencies": "Open-source libraries",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 5,
        "Feedbacks [easy to configure/build (5=easy)]": 5,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "N/A",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 4,
        "Feedbacks [Interface user-friendly (5=easy)]": 5,
        "Documentation": "help in the graphical interface",
        "Authors": "Academia",
        "ACM 1": "Texturing",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Linux",
        "General comments": "The loaded mesh are displayed as lines, which is probably due to some formatting issue but I was  therefore unable to run the provided examples (the uv textures are displayed correctly but not the meshes). To run the app, I had to export the plugins location before launching the exec: export QT_QPA_PLATFORM_PLUGIN_PATH=/usr/lib/x86_64-linux-gnu/qt5/plugins/",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 15,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "qt/opengl/glew",
        "Project URL": "http://vcg.isti.cnr.it/volume-encoded-uv-maps/",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2016,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Geometry",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 1,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 1,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Marco",
                "family": "Tarini",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Universit\u00e0 dell'Insubria, Varese"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Voxel Cores: Efficient, robust, and provably good approximation of 3D medial axes",
        "DOI": "10.1145/3197517.3201396",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on github, gitlab or other code platform",
        "Main languages": "Cannot answer",
        "How long did take for you to evaluate the code this paper (if any)?": 3,
        "Build info / instructions": "README",
        "arXiv (page URL)": "",
        "code URL": "https://yajieyan.github.io/project/voxelcore/",
        "code URL  2": "",
        "PDF URL": "https://www.cse.wustl.edu/~taoju/research/voxelma.pdf",
        "License type": "unspecified",
        "Build mechanism": "Not applicable (python, Matlab..)",
        "Mandatory Software dependencies": "None",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "N/A",
        "Feedbacks [easy to configure/build (5=easy)]": "N/A",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "N/A",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 1,
        "Feedbacks [Interface user-friendly (5=easy)]": 4,
        "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions",
        "Authors": "Academia",
        "ACM 1": "Shape analysis",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Linux",
        "General comments": "Produces paper-like results, but no script to reproduce the examples and input data not given.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 6,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "Binary",
        "Topic": "Geometry",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 5,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 1,
        "Documentation score": 1,
        "Paper authors": [
            {
                "given": "Yajie",
                "family": "Yan",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Washington University in St. Louis"
                    }
                ]
            },
            {
                "given": "David",
                "family": "Letscher",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "St. Louis University"
                    }
                ]
            },
            {
                "given": "Tao",
                "family": "Ju",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Washington University in St. Louis"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Wasserstein Barycentric Coordinates: Histogram Regression Using Optimal Transport",
        "DOI": "10.1145/2897824.2925918",
        "PDF availability (beside dl.acm)": "On an open archive arXiv or similar open archive, On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on the authors website or project page (zip file, direct download...)",
        "Main languages": "C/C++",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "README, LICENSE or explicit license (e.g. in the readme / headers), AUTHORS or explicitly mentioned",
        "arXiv (page URL)": "https://hal.archives-ouvertes.fr/hal-01303148",
        "code URL": "https://perso.liris.cnrs.fr/nicolas.bonneel/WassersteinBarycentricCoordinates/CodeWBC.zip",
        "code URL  2": "",
        "PDF URL": "https://perso.liris.cnrs.fr/nicolas.bonneel/WassersteinBarycentricCoordinates/WBC.pdf",
        "License type": "GPL",
        "Build mechanism": "Makefile",
        "Mandatory Software dependencies": "None",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "N/A",
        "Feedbacks [easy to configure/build (5=easy)]": 5,
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": 5,
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "No",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": 4,
        "Feedbacks [Interface user-friendly (5=easy)]": "N/A",
        "Documentation": "User-documentation (readme-note-tutorial) more than just build instructions, API documentation, Technical documentation (comments-doxygen...)",
        "Authors": "Academia",
        "ACM 1": "Transportation",
        "ACM 2": "Automatic Differentiation",
        "ACM 3": "Computer Graphics",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Linux",
        "General comments": "To compile with the provided Makefile, I had to replace line28 in inverseWasserstein.h by #include \"lbfgs/lbfgs.h\", and in lbfgs/lbgs.cpp replace line 73 by #include \"lbfgs.h\" . The code for the applications presented in the paper is not available.",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 53,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "https://perso.liris.cnrs.fr/nicolas.bonneel/WassersteinBarycentricCoordinates/",
        "Did I manage to perform a complete test (deps/build)?": "Yes",
        "Year": 2016,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Image",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": 3,
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 1,
        "Documentation score": 2,
        "Paper authors": [
            {
                "given": "Nicolas",
                "family": "Bonneel",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "Univ. Lyon, CNRS and LIRIS"
                    }
                ]
            },
            {
                "given": "Gabriel",
                "family": "Peyr\u00e9",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "CNRS and Univ. Paris-Dauphine"
                    }
                ]
            },
            {
                "given": "Marco",
                "family": "Cuturi",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "Kyoto University"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Water surface wavelets",
        "DOI": "10.1145/3197517.3201336",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://pub.ist.ac.at/group_wojtan/projects/2018_Jeschke_WaterSurfaceWavelets/WaterSurfaceWavelets.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Physical simulation",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 4,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Animation",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": true,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 3,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Stefan",
                "family": "Jeschke",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "NVIDIA"
                    }
                ]
            },
            {
                "given": "Tom\u00e1\u0161",
                "family": "Sk\u0159ivan",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "IST Austria"
                    }
                ]
            },
            {
                "given": "Matthias",
                "family": "M\u00fcller-Fischer",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "NVIDIA"
                    }
                ]
            },
            {
                "given": "Nuttapong",
                "family": "Chentanez",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "NVIDIA"
                    }
                ]
            },
            {
                "given": "Miles",
                "family": "Macklin",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "NVIDIA"
                    }
                ]
            },
            {
                "given": "Chris",
                "family": "Wojtan",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "IST Austria"
                    }
                ]
            }
        ],
        "Altmetric score": 45.08,
        "Altmetric badge": "https://badges.altmetric.com/?size=64&score=46&types=mmmmmmbb",
        "Altmetric url": "http://www.altmetric.com/details.php?citation_id=46368409"
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "What characterizes personalities of graphic designs?",
        "DOI": "10.1145/3197517.3201355",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "Yes",
        "Availability": "on the authors website or project page (zip file, direct download...)",
        "Main languages": "Python",
        "How long did take for you to evaluate the code this paper (if any)?": 3,
        "Build info / instructions": "README, LICENSE or explicit license (e.g. in the readme / headers)",
        "arXiv (page URL)": "",
        "code URL": "http://nxzhao.com/projects/design_personality/personality_scoring_network_SIG18.zip",
        "code URL  2": "",
        "PDF URL": "http://nxzhao.com/projects/design_personality/Graphic_Design_Personality_SIG18_zhao.pdf",
        "License type": "This code is copyrighted by the authors and is for non-commercial research purposes only. Please contact nanxuanzhao@gmail.com if you are interested in licensing for commercial purposes",
        "Build mechanism": "Not applicable (python, Matlab..)",
        "Mandatory Software dependencies": "Open-source libraries",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": 5,
        "Feedbacks [easy to configure/build (5=easy)]": "N/A",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "N/A",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "Yes",
        "Available data (provided or url / ref)": "Training data, Pre-trained models / Hardcoded data / lookup tables /...",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "N/A",
        "Feedbacks [Interface user-friendly (5=easy)]": "N/A",
        "Documentation": "None",
        "Authors": "Academia",
        "ACM 1": "Perception",
        "ACM 2": "Neural networks",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "N/A",
        "OS of the test": "Linux",
        "General comments": "The authors provide both the training data and the pretrained models. However, I obtained tensorflow errors when trying to test the model:\n\nValueError: Negative dimension size caused by subtracting 4 from 3 for 'MaxPool' (op: 'MaxPool') with input shapes: [?,3,300,64].",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 10,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "keras/theano/h5py/tensorflow",
        "Project URL": "http://nxzhao.com/projects/design_personality/",
        "Did I manage to perform a complete test (deps/build)?": "No due to technical issue",
        "Year": 2018,
        "Misc. comment": "",
        "Software Type": "Code",
        "Topic": "Image",
        "Deep learning": "True",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "N/A",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 3,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Nanxuan",
                "family": "Zhao",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "City University of Hong Kong"
                    }
                ]
            },
            {
                "given": "Ying",
                "family": "Cao",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "City University of Hong Kong"
                    }
                ]
            },
            {
                "given": "Rynson W. H.",
                "family": "Lau",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "City University of Hong Kong"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "Wire Mesh Design",
        "DOI": "10.1145/2601097.2601106",
        "PDF availability (beside dl.acm)": "On the author(s) website or its institution",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "http://www.cs.columbia.edu/~akash/wmd.pdf",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia",
        "ACM 1": "Geometric topology",
        "ACM 2": "Physical simulation",
        "ACM 3": "Shape modeling",
        "ACM 4": "Computer-aided design",
        "ACM 5": "Architecture (buildings)",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 58,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2014,
        "Misc. comment": "",
        "Software Type": "",
        "Topic": "Fabrication",
        "Deep learning": "False",
        "hasThumbnail": true,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 4,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Akash",
                "family": "Garg",
                "sequence": "first",
                "affiliation": []
            },
            {
                "given": "Andrew O.",
                "family": "Sageman-Furnas",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Bailin",
                "family": "Deng",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Yonghao",
                "family": "Yue",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Eitan",
                "family": "Grinspun",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Mark",
                "family": "Pauly",
                "sequence": "additional",
                "affiliation": []
            },
            {
                "given": "Max",
                "family": "Wardetzky",
                "sequence": "additional",
                "affiliation": []
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    },
    {
        "Timestamp": "19/01/2020",
        "Title": "ZoeMatrope: a system for physical material design",
        "DOI": "10.1145/2897824.2925925",
        "PDF availability (beside dl.acm)": "Cannot answer",
        "Is the code or software publicly available ?": "No",
        "Availability": "",
        "Main languages": "",
        "How long did take for you to evaluate the code this paper (if any)?": 1,
        "Build info / instructions": "",
        "arXiv (page URL)": "",
        "code URL": "",
        "code URL  2": "",
        "PDF URL": "",
        "License type": "",
        "Build mechanism": "",
        "Mandatory Software dependencies": "",
        "Feedback [easy deps]": "",
        "Feedbacks [easy to find/install dependencies  (5=easy)]": "",
        "Feedbacks [easy to configure/build (5=easy)]": "",
        "Feedbacks [easy to fix bugs (5=easy N/A if no bug)]": "",
        "Execution experience [Row 1]": "",
        "Does the code need data (other than examples/inputs) ?": "",
        "Available data (provided or url / ref)": "",
        "License for the data (if any)": "",
        "Feedbacks [easy to adapt / use in other contexts (5=easy)]": "",
        "Feedbacks [Interface user-friendly (5=easy)]": "",
        "Documentation": "",
        "Authors": "Academia, Private Companies",
        "ACM 1": "Virtual reality",
        "ACM 2": "Systems and tools for interaction design",
        "ACM 3": "Displays and imagers",
        "Feedbacks [if matlab does it run on OSS alternatives (5=easy)]": "",
        "OS of the test": "",
        "General comments": "",
        "Does the paper already have a reproducibility stamp": "No",
        "Citation count (google scholar)": 15,
        "List of the required dependencies (if any, \"/\" separated, ex: matlab, libpng,cgal...)": "",
        "Project URL": "http://ishikawa-vision.org/vision/ZoeMatrope/index-e.html",
        "Did I manage to perform a complete test (deps/build)?": "",
        "Year": 2016,
        "Misc. comment": "Paper unavailable on the authors websites.",
        "Software Type": "",
        "Topic": "Virtual Reality",
        "Deep learning": "False",
        "hasThumbnail": false,
        "Open access": false,
        "Feedbacks [could reproduce results (5=highly confident)]": "",
        "Could paper be trivially implemented using the pseudo-code": "",
        "Reviewer": 2,
        "Documentation score": 0,
        "Paper authors": [
            {
                "given": "Leo",
                "family": "Miyashita",
                "sequence": "first",
                "affiliation": [
                    {
                        "name": "University of Tokyo"
                    }
                ]
            },
            {
                "given": "Kota",
                "family": "Ishihara",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "PKSHA Technology Inc."
                    }
                ]
            },
            {
                "given": "Yoshihiro",
                "family": "Watanabe",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of Tokyo"
                    }
                ]
            },
            {
                "given": "Masatoshi",
                "family": "Ishikawa",
                "sequence": "additional",
                "affiliation": [
                    {
                        "name": "University of Tokyo"
                    }
                ]
            }
        ],
        "Altmetric score": 0,
        "Altmetric badge": 0,
        "Altmetric url": 0
    }
]